!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module intprd__user__routines 
    interface intprd_user_interface 
        subroutine intpget(lu,e_indices_pnt0_e,e_dat_1_pnt0_e) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/intpio.f:intprd:unknown_interface
            integer :: lu
            integer :: e_indices_pnt0_e
            real :: e_dat_1_pnt0_e
        end subroutine intpget
    end interface intprd_user_interface
end python module intprd__user__routines
python module nllsqu__user__routines 
    interface nllsqu_user_interface 
        subroutine func(x,f,n,m) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nllsqu.f:nllsqu:unknown_interface
            real dimension(n) :: x
            real dimension(m) :: f
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            integer optional,check(len(f)>=m),depend(f) :: m=len(f)
        end subroutine func
        subroutine derive(x,dfdx,n,m) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nllsqu.f:nllsqu:unknown_interface
            real dimension(n) :: x
            real dimension(n,m),depend(n) :: dfdx
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            integer optional,check(shape(dfdx,1)==m),depend(dfdx) :: m=shape(dfdx,1)
        end subroutine derive
    end interface nllsqu_user_interface
end python module nllsqu__user__routines
python module fdjac2__user__routines 
    interface fdjac2_user_interface 
        subroutine fcn(m,n,x,wa,iflag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f:fdjac2:unknown_interface
            integer optional,check(len(wa)>=m),depend(wa) :: m=len(wa)
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            real dimension(n) :: x
            real dimension(m) :: wa
            integer :: iflag
        end subroutine fcn
    end interface fdjac2_user_interface
end python module fdjac2__user__routines
python module lmdif__user__routines 
    interface lmdif_user_interface 
        subroutine fcn(m,n,x,fvec,iflag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f:lmdif:unknown_interface
            integer optional,check(len(fvec)>=m),depend(fvec) :: m=len(fvec)
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            real dimension(n) :: x
            real dimension(m) :: fvec
            integer :: iflag
        end subroutine fcn
    end interface lmdif_user_interface
end python module lmdif__user__routines
python module asjy__user__routines 
    interface asjy_user_interface 
        subroutine funjy(e_wk_6_e,e_wk_5_e,e_wk_4_e,fi,dfi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f:asjy:unknown_interface
            real :: e_wk_6_e
            real :: e_wk_5_e
            real :: e_wk_4_e
            real :: fi
            real :: dfi
        end subroutine funjy
    end interface asjy_user_interface
end python module asjy__user__routines
python module powell__user__routines 
    interface powell_user_interface 
        subroutine calcfx(n,x,f) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/powell.f:powell:unknown_interface
            integer optional,check(len(x)>=n),depend(x) :: n=len(x)
            real dimension(n) :: x
            real :: f
        end subroutine calcfx
    end interface powell_user_interface
end python module powell__user__routines
python module wintshow__user__routines 
    interface wintshow_user_interface 
        subroutine func(x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f:wintshow:unknown_interface
            integer :: x
            integer :: y
        end subroutine func
    end interface wintshow_user_interface
end python module wintshow__user__routines
subroutine alignini(lmodel,lmap,mmap,nmap,omap,xoff,yoff,zoff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/align.f
    integer :: lmodel
    integer :: lmap
    integer :: mmap
    integer :: nmap
    integer :: omap
    integer :: xoff
    integer :: yoff
    integer :: zoff
end subroutine alignini
subroutine alignget(lmodel,runs,nruns,k,ioff,joff,koff,n1,n2,n3,data,maxdata,ndata) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/align.f
    integer :: lmodel
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    integer :: k
    integer :: ioff
    integer :: joff
    integer :: koff
    integer :: n1
    integer :: n2
    integer :: n3
    real dimension(maxdata) :: data
    integer optional,check(len(data)>=maxdata),depend(data) :: maxdata=len(data)
    integer :: ndata
end subroutine alignget
subroutine amphase(data,amp,phase) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/amphase.f
    complex :: data
    real :: amp
    real :: phase
end subroutine amphase
function dangle(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: dangle
end function dangle
function dangleh(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: dangleh
end function dangleh
function rangle(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: rangle
end function rangle
function hangle(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: hangle
end function hangle
function hangleh(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: hangleh
end function hangleh
function rangleh(theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/angles.f
    double precision :: theta
    character*(*) :: rangleh
end function rangleh
subroutine antmask(maxant,nant1,nant2,ant1,ant2,blmask) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/antennas.f
    integer optional,check(len(ant1)>=maxant),depend(ant1) :: maxant=len(ant1)
    integer :: nant1
    integer :: nant2
    integer dimension(maxant) :: ant1
    integer dimension(maxant),depend(maxant) :: ant2
    logical dimension((maxant*(maxant-1))/2),depend(maxant) :: blmask
end subroutine antmask
subroutine antind(maxant,a1,a2,idx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/antennas.f
    integer :: maxant
    integer :: a1
    integer :: a2
    integer :: idx
end subroutine antind
subroutine assertl(cond,mesg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/assert.f
    logical :: cond
    character*(*) :: mesg
end subroutine assertl
subroutine assertf(name,cond,mesg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/assert.f
    character*(*) :: name
    logical :: cond
    character*(*) :: mesg
end subroutine assertf
subroutine asserti2(i1,i2,mesg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/assert.f
    integer :: i1
    integer :: i2
    character*(*) :: mesg
end subroutine asserti2
subroutine assertigti(i1,i2,mesg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/assert.f
    integer :: i1
    integer :: i2
    character*(*) :: mesg
end subroutine assertigti
subroutine assertigei(i1,i2,mesg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/assert.f
    integer :: i1
    integer :: i2
    character*(*) :: mesg
end subroutine assertigei
subroutine atjones(rad,psi,freq,jo,pb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/atjones.f
    real :: rad
    real :: psi
    double precision :: freq
    complex dimension(2,2) :: jo
    real :: pb
end subroutine atjones
subroutine axistype(lin,axis,plane,ctype,label,value,units) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/axistype.f
    integer :: lin
    integer :: axis
    integer :: plane
    character*9 :: ctype
    character*13 :: label
    double precision :: value
    character*13 :: units
end subroutine axistype
subroutine basant(baseline,ant1,ant2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/basant.f
    double precision :: baseline
    integer :: ant1
    integer :: ant2
end subroutine basant
subroutine basanta(baseline,ant1,ant2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/basant.f
    double precision :: baseline
    integer :: ant1
    integer :: ant2
end subroutine basanta
subroutine basants(baseline,ant1,ant2,check) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/basant.f
    double precision :: baseline
    integer :: ant1
    integer :: ant2
    logical :: check
end subroutine basants
function antbas(i1,i2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/basant.f
    integer :: i1
    integer :: i2
    double precision :: antbas
end function antbas
function bessi0(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/bessel.f
    double precision :: x
    double precision :: bessi0
end function bessi0
function bessi1(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/bessel.f
    double precision :: x
    double precision :: bessi1
end function bessi1
function bessj0(arg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/bessel.f
    double precision :: arg
    double precision :: bessj0
end function bessj0
subroutine boxinput(key,file,boxes,maxboxes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: key
    character*(*) :: file
    integer dimension(maxboxes) :: boxes
    integer optional,check(len(boxes)>=maxboxes),depend(boxes) :: maxboxes=len(boxes)
end subroutine boxinput
subroutine boxzrnge(spec,k1,k2,zrange,ztype,lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: spec
    integer :: k1
    integer :: k2
    integer dimension(2) :: zrange
    character*(*) :: ztype
    integer dimension(3) :: lu
end subroutine boxzrnge
subroutine boxint(spec,k1,k2,boxes,n,modulo,nmax,type_bn,lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: spec
    integer :: k1
    integer :: k2
    integer dimension(nmax) :: boxes
    integer :: n
    integer :: modulo
    integer optional,check(len(boxes)>=nmax),depend(boxes) :: nmax=len(boxes)
    character*(*) :: type_bn
    integer dimension(3) :: lu
end subroutine boxint
subroutine boxpoly(spec,k1,k2,verts,n,nmax,xyrange,xytype,lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: spec
    integer :: k1
    integer :: k2
    integer dimension(2,nmax/2),depend(nmax) :: verts
    integer :: n
    integer :: nmax
    integer dimension(4) :: xyrange
    character*(*) :: xytype
    integer dimension(3) :: lu
end subroutine boxpoly
subroutine boxsort(boxes,n,xyrange) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(n) :: boxes
    integer optional,check(len(boxes)>=n),depend(boxes) :: n=len(boxes)
    integer dimension(4) :: xyrange
end subroutine boxsort
subroutine boxmsk(spec,k1,k2,tno,xyzrange) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: spec
    integer :: k1
    integer :: k2
    integer :: tno
    integer dimension(6) :: xyzrange
end subroutine boxmsk
subroutine boxmask(tno,boxes,maxboxes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer :: tno
    integer dimension(maxboxes) :: boxes
    integer optional,check(len(boxes)>=maxboxes),depend(boxes) :: maxboxes=len(boxes)
end subroutine boxmask
subroutine boxmskpr(tno,xyzrange) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer :: tno
    integer dimension(6) :: xyzrange
end subroutine boxmskpr
subroutine boxdef(boxes,naxis,blc,trc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(*) :: boxes
    integer optional,check(len(blc)>=naxis),depend(blc) :: naxis=len(blc)
    integer dimension(naxis) :: blc
    integer dimension(naxis),depend(naxis) :: trc
end subroutine boxdef
subroutine boxset(boxes,naxis,nsize,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(*) :: boxes
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    character*(*) :: flags
end subroutine boxset
subroutine boxinfo(boxes,naxis,blc,trc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(*) :: boxes
    integer optional,check(len(blc)>=naxis),depend(blc) :: naxis=len(blc)
    integer dimension(naxis) :: blc
    integer dimension(naxis),depend(naxis) :: trc
end subroutine boxinfo
function boxrect(boxes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(*) :: boxes
    logical :: boxrect
end function boxrect
subroutine boxbound(boxes,subcmd,naxis,type_bn,mode,blc,trc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(*) :: boxes
    integer :: subcmd
    integer optional,check(len(blc)>=naxis),depend(blc) :: naxis=len(blc)
    character*(*) :: type_bn
    character*(*) :: mode
    integer dimension(naxis) :: blc
    integer dimension(naxis),depend(naxis) :: trc
end subroutine boxbound
subroutine boxcount(runs,nruns,npoint) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
    integer :: npoint
end subroutine boxcount
subroutine boxruns(naxis,plane,flags,boxes,runs,maxruns,nruns,xminv,xmaxv,yminv,ymaxv) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer optional,check(len(plane)>=naxis),depend(plane) :: naxis=len(plane)
    integer dimension(naxis) :: plane
    character*(*) :: flags
    integer dimension(*) :: boxes
    integer dimension(3,maxruns) :: runs
    integer optional,check(shape(runs,1)==maxruns),depend(runs) :: maxruns=shape(runs,1)
    integer :: nruns
    integer :: xminv
    integer :: xmaxv
    integer :: yminv
    integer :: ymaxv
end subroutine boxruns
subroutine boxand(n1,in1,n2,in2,nout,out,maxout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer optional,check(len(in1)>=n1),depend(in1) :: n1=len(in1)
    integer dimension(n1) :: in1
    integer optional,check(len(in2)>=n2),depend(in2) :: n2=len(in2)
    integer dimension(n2) :: in2
    integer :: nout
    integer dimension(maxout) :: out
    integer optional,check(len(out)>=maxout),depend(out) :: maxout=len(out)
end subroutine boxand
subroutine boxor(n1,in1,n2,in2,nout,out,maxout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer optional,check(len(in1)>=n1),depend(in1) :: n1=len(in1)
    integer dimension(n1) :: in1
    integer optional,check(len(in2)>=n2),depend(in2) :: n2=len(in2)
    integer dimension(n2) :: in2
    integer :: nout
    integer dimension(maxout) :: out
    integer optional,check(len(out)>=maxout),depend(out) :: maxout=len(out)
end subroutine boxor
subroutine boxmskx(buf,nbuf,y,z,tno,nout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(nbuf) :: buf
    integer optional,check(len(buf)>=nbuf),depend(buf) :: nbuf=len(buf)
    integer :: y
    integer :: z
    integer :: tno
    integer :: nout
end subroutine boxmskx
subroutine boxboxx(goes,maxgoes,j0,nbox,box,ngoes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(maxgoes) :: goes
    integer optional,check(len(goes)>=maxgoes),depend(goes) :: maxgoes=len(goes)
    integer :: j0
    integer optional,check(shape(box,1)==nbox),depend(box) :: nbox=shape(box,1)
    integer dimension(4,nbox) :: box
    integer :: ngoes
end subroutine boxboxx
subroutine boxpolyx(goes,maxgoes,j0,nverts,verts,ngoes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    integer dimension(maxgoes) :: goes
    integer optional,check(len(goes)>=maxgoes),depend(goes) :: maxgoes=len(goes)
    integer :: j0
    integer optional,check(shape(verts,1)==nverts),depend(verts) :: nverts=shape(verts,1)
    integer dimension(2,nverts) :: verts
    integer :: ngoes
end subroutine boxpolyx
subroutine boxbug(spec,message) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/boxes.f
    character*(*) :: spec
    character*(*) :: message
end subroutine boxbug
function binsrchi(key,keys,nkeys) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/bsrch.f
    integer :: key
    integer dimension(nkeys) :: keys
    integer optional,check(len(keys)>=nkeys),depend(keys) :: nkeys=len(keys)
    integer :: binsrchi
end function binsrchi
subroutine wrbtype(lun,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/btype.f
    integer :: lun
    character*(*) :: value
end subroutine wrbtype
subroutine rdbtype(lun,value,def) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/btype.f
    integer :: lun
    character*(*) :: value
    character*(*) :: def
end subroutine rdbtype
subroutine caopen(tno,dataname,time0,nbl,base,version,status) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    character*(*) :: dataname
    double precision :: time0
    integer :: nbl
    integer dimension(*) :: base
    integer :: version
    character*(*) :: status
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine caopen
subroutine caclose(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine caclose
subroutine cadread(tno,i,rtime,rdata,rflag,sindex,err) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer :: i
    real :: rtime
    real dimension(*) :: rdata
    integer dimension(*) :: rflag
    integer dimension(*) :: sindex
    integer :: err
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine cadread
subroutine cadwrite(tno,i,rtime,rdata,rflag,sindex) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer :: i
    real :: rtime
    real dimension(*) :: rdata
    integer dimension(*) :: rflag
    integer dimension(*) :: sindex
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine cadwrite
subroutine casread(tno,i,name,plstuff,err) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer :: i
    character*(*) :: name
    real dimension(4) :: plstuff
    integer :: err
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine casread
subroutine caswrite(tno,i,name,plstuff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer :: i
    character*(*) :: name
    real dimension(4) :: plstuff
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine caswrite
subroutine caflag(tno,i,rflag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    integer :: i
    integer dimension(*) :: rflag
    integer dimension(10) :: canbl
    integer dimension(10) :: irtime
    integer dimension(10) :: irdata
    integer dimension(10) :: irflag
    integer dimension(10) :: isname
    integer dimension(10) :: isindex
    integer dimension(10) :: ipspan
    integer dimension(10) :: ipdata
    integer dimension(10) :: ipindex
    integer dimension(10) :: ibdata
    common /ca/ canbl,irtime,irdata,irflag,isname,isindex,ipspan,ipdata,ipindex,ibdata
end subroutine caflag
subroutine caerror(iostat,string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: iostat
    character*(*) :: string_bn
end subroutine caerror
subroutine rdhdia(tno,itemname,length,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    character*(*) :: itemname
    integer :: length
    integer dimension(*) :: value
end subroutine rdhdia
subroutine wrhdia(tno,itemname,length,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    character*(*) :: itemname
    integer :: length
    integer dimension(*) :: value
end subroutine wrhdia
subroutine rsplit(tno,split) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    logical :: split
end subroutine rsplit
subroutine wsplit(tno,split) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    integer :: tno
    logical :: split
end subroutine wsplit
subroutine matherr(mtrap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calio.f
    logical :: mtrap
end subroutine matherr
subroutine dgefa(a,lda,n,ipvt,info) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    double precision dimension(lda,*) :: a
    integer optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
    integer :: n
    integer dimension(*) :: ipvt
    integer :: info
end subroutine dgefa
subroutine dscal(n,da,dx,incx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    integer :: n
    double precision :: da
    double precision dimension(*) :: dx
    integer :: incx
end subroutine dscal
function idamax(n,dx,incx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    integer :: n
    double precision dimension(*) :: dx
    integer :: incx
    integer :: idamax
end function idamax
subroutine daxpy(n,da,dx,incx,dy,incy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    integer :: n
    double precision :: da
    double precision dimension(*) :: dx
    integer :: incx
    double precision dimension(*) :: dy
    integer :: incy
end subroutine daxpy
subroutine dgesl(a,lda,n,ipvt,b,job) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    double precision dimension(lda,*) :: a
    integer optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
    integer :: n
    integer dimension(*) :: ipvt
    double precision dimension(*) :: b
    integer :: job
end subroutine dgesl
function ddot(n,dx,incx,dy,incy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/callinp.f
    integer :: n
    double precision dimension(*) :: dx
    integer :: incx
    double precision dimension(*) :: dy
    integer :: incy
    double precision :: ddot
end function ddot
subroutine phaseamp(nbase,basediff,mark) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    integer :: nbase
    integer dimension(2,*) :: basediff
    logical :: mark
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine phaseamp
function phiwrap(phase) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    real :: phase
    integer :: phiwrap
end function phiwrap
subroutine phasedis(phase,wraps) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    real dimension(*) :: phase
    integer dimension(*) :: wraps
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: scalmode
    common /calsubs/ time0,nbl,base,version
    common /calscal/ scalmode
end subroutine phasedis
subroutine vectav(b,p,count,avidx,clump,nclump,x,y,dtaver,tmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    integer :: b
    integer :: p
    integer :: count
    integer dimension(*) :: avidx
    integer dimension(*) :: clump
    integer :: nclump
    real dimension(*) :: x
    real dimension(*) :: y
    real :: dtaver
    real :: tmax
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine vectav
subroutine miniflip(npts,phas,flips) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    integer :: npts
    real dimension(*) :: phas
    integer dimension(*) :: flips
end subroutine miniflip
subroutine flipper(timave,timmax,basediff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    real :: timave
    real :: timmax
    integer dimension(2,*) :: basediff
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /calpoly/ pcount,order,tvalid,poly
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine flipper
subroutine getclo3(nbl,base,signcl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calphase.f
    integer :: nbl
    integer dimension(*) :: base
    real dimension(*) :: signcl
end subroutine getclo3
subroutine inipoly ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    common /calpoly/ pcount,order,tvalid,poly
end subroutine inipoly
subroutine getpoly(dataset) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    character*(*) :: dataset
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: scalmode
    common /calpoly/ pcount,order,tvalid,poly
    common /calsubs/ time0,nbl,base,version
    common /calscal/ scalmode
end subroutine getpoly
subroutine putpoly(dataset) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    character*(*) :: dataset
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: scalmode
    common /calpoly/ pcount,order,tvalid,poly
    common /calsubs/ time0,nbl,base,version
    common /calscal/ scalmode
end subroutine putpoly
function chkpoly(code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    character*(*) :: code
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: scalmode
    logical :: chkpoly
    common /calpoly/ pcount,order,tvalid,poly
    common /calsubs/ time0,nbl,base,version
    common /calscal/ scalmode
end function chkpoly
function evalpoly(t,code,bl,valid) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    real :: t
    character*(*) :: code
    integer :: bl
    integer :: valid
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    real :: evalpoly
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /calpoly/ pcount,order,tvalid,poly
    common /caldatp/ calbflux
    common /calscal/ scalmode
end function evalpoly
function fitpoly(n,x,y,code,bl,porder) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    integer :: n
    real dimension(*) :: x
    real dimension(*) :: y
    character*(*) :: code
    integer :: bl
    integer :: porder
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    double precision dimension(11) :: xsums
    double precision dimension(6) :: ysums
    double precision dimension(60,60) :: lsq
    double precision dimension(60) :: lsqb
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    integer :: fitpoly
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /lsq/ xsums,ysums,lsq,lsqb
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /calpoly/ pcount,order,tvalid,poly
    common /caldatp/ calbflux
    common /calscal/ scalmode
end function fitpoly
function addpoly(code,bl,porder,ppoly,valid) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calpoly.f
    character*(*) :: code
    integer :: bl
    integer :: porder
    real dimension(*) :: ppoly
    real dimension(2) :: valid
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    integer :: addpoly
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /calpoly/ pcount,order,tvalid,poly
    common /caldatp/ calbflux
    common /calscal/ scalmode
end function addpoly
subroutine readset(file) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine readset
subroutine writeset(file,checksrc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    logical :: checksrc
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine writeset
subroutine writflag(file) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine writflag
subroutine addhist(file,progname,message) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    character*(*) :: progname
    character*(*) :: message
end subroutine addhist
subroutine hisappn(tno,file,insert) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    integer :: tno
    character*(*) :: file
    logical :: insert
end subroutine hisappn
subroutine readbrk(file) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine readbrk
subroutine writbrk(file) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine writbrk
subroutine putsrc(file) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsetio.f
    character*(*) :: file
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine putsrc
subroutine calstoke(source,stokes,freq,flux,nchan,ierr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calstoke.f
    character*(*) :: source
    character*1 :: stokes
    double precision dimension(nchan) :: freq
    real dimension(nchan),depend(nchan) :: flux
    integer optional,check(len(freq)>=nchan),depend(freq) :: nchan=len(freq)
    integer :: ierr
end subroutine calstoke
function findbase(bl,base,nbl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: bl
    integer dimension(*) :: base
    integer :: nbl
    integer :: findbase
end function findbase
function blname(bl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: bl
    character*(*) :: blname
end function blname
function findsrc(n,list,name) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: n
    character(*)*(*) :: list
    character*(*) :: name
    integer :: findsrc
end function findsrc
subroutine getants(binp,nant,a1,a2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: binp
    integer :: nant
    integer :: a1
    integer :: a2
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: scalmode
    common /calsubs/ time0,nbl,base,version
    common /calscal/ scalmode
end subroutine getants
subroutine setsflag(n,src) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: n
    character dimension(*,(*)) :: src
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine setsflag
subroutine taver(n,x,y,dx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: n
    real dimension(*) :: x
    real dimension(*) :: y
    real :: dx
end subroutine taver
function code2s(code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    character*(*) :: code
    integer :: code2s
end function code2s
function s2code(s) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: s
    character*4 :: s2code
end function s2code
function scalunit(name) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    character*(*) :: name
    integer :: scalunit
end function scalunit
subroutine ampscal(amp,jyflux,scalmode) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    real :: amp
    real :: jyflux
    integer :: scalmode
end subroutine ampscal
subroutine setxy(bp,b,p,count,x,y,taver) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/calsubs.f
    integer :: bp
    integer :: b
    integer :: p
    integer :: count
    real dimension(*) :: x
    real dimension(*) :: y
    real dimension(2) :: taver
    character dimension(32,8) :: sname
    double precision :: time0
    integer :: nbl
    integer dimension(45) :: base
    integer :: version
    integer :: rcount
    integer :: scount
    real dimension(2000) :: rtime
    real dimension(4,45,2000) :: rdata
    integer dimension(2,45,2000) :: rflag
    integer dimension(2000) :: sindex
    real dimension(10,2,45) :: btime
    integer dimension(2,45) :: bcount
    integer dimension(2000) :: sflag
    real dimension(4,32) :: plstuff
    real dimension(2000) :: volts
    integer dimension(36,45) :: pcount
    integer dimension(36) :: order
    real dimension(2,11,36,45) :: tvalid
    real dimension(6,11,36,45) :: poly
    real dimension(45,2000) :: calbflux
    integer :: scalmode
    common /caldatc/ sname
    common /calsubs/ time0,nbl,base,version
    common /caldatr/ rcount,scount,rtime,rdata,rflag,sindex,btime,bcount,sflag,plstuff,volts
    common /calpoly/ pcount,order,tvalid,poly
    common /caldatp/ calbflux
    common /calscal/ scalmode
end subroutine setxy
subroutine annboxcg(lb,bin,bfac,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lb
    character*(*) :: bin
    real dimension(5) :: bfac
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine annboxcg
subroutine annconcg(lc,cin,slev,nlevs,levs,srtlev,dmm,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lc
    character*(*) :: cin
    real :: slev
    integer optional,check(len(levs)>=nlevs),depend(levs) :: nlevs=len(levs)
    real dimension(nlevs) :: levs
    integer dimension(nlevs),depend(nlevs) :: srtlev
    real dimension(2) :: dmm
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine annconcg
subroutine anndefcg(cs,yinc,ygap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: cs
    real :: yinc
    real :: ygap
end subroutine anndefcg
subroutine anngrscg(lg,gin,npixr,pixr,trfun,dmm,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lg
    character*(*) :: gin
    integer :: npixr
    real dimension(2) :: pixr
    character*(*) :: trfun
    real dimension(2) :: dmm
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine anngrscg
subroutine anninicg(lh,no3,vymin,pcs,ydispb,labtyp,xpos,ypos,yinc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lh
    logical :: no3
    real :: vymin
    real :: pcs
    real :: ydispb
    character dimension(2,(*)),intent(c) :: labtyp
    real :: xpos
    real :: ypos
    real :: yinc
end subroutine anninicg
subroutine annspccg(nspec,spin,iscale,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer optional,check(shape(spin,0)==nspec),depend(spin) :: nspec=shape(spin,0)
    character dimension(nspec,(*)),intent(c) :: spin
    real dimension(nspec),depend(nspec) :: iscale
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine annspccg
subroutine annveccg(lv,vin,vfac,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer dimension(2) :: lv
    character dimension(2,(*)),intent(c) :: vin
    real dimension(2) :: vfac
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine annveccg
subroutine annwincg(lh,blc,trc,ibin,jbin,kbin,yinc,xpos,ypos) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lh
    integer dimension(*) :: blc
    integer dimension(*) :: trc
    integer dimension(2) :: ibin
    integer dimension(2) :: jbin
    integer dimension(2) :: kbin
    real :: yinc
    real :: xpos
    real :: ypos
end subroutine annwincg
subroutine aaxlabcg(dox,doy,xdispl,ydispb,xlabel,ylabel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: dox
    logical :: doy
    real :: xdispl
    real :: ydispb
    character*(*) :: xlabel
    character*(*) :: ylabel
end subroutine aaxlabcg
subroutine bgcolcg(bgcol) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: bgcol
end subroutine bgcolcg
subroutine confmtcg(xpos,ypos,yinc,nlevs,srtlev,levs,slev,write,nlines) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: xpos
    real :: ypos
    real :: yinc
    integer optional,check(len(srtlev)>=nlevs),depend(srtlev) :: nlevs=len(srtlev)
    integer dimension(nlevs) :: srtlev
    real dimension(nlevs),depend(nlevs) :: levs
    real :: slev
    logical :: write
    integer :: nlines
end subroutine confmtcg
subroutine conturcg(conlab,blank,solneg,win1,win2,dobl,data,nlevs,levs,tr,sdbreak) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: conlab
    real :: blank
    logical :: solneg
    integer optional,check(shape(data,0)==win1),depend(data) :: win1=shape(data,0)
    integer optional,check(shape(data,1)==win2),depend(data) :: win2=shape(data,1)
    logical :: dobl
    real dimension(win1,win2) :: data
    integer :: nlevs
    real dimension(*) :: levs
    real dimension(6) :: tr
    real :: sdbreak
end subroutine conturcg
subroutine drwlincg(lun,axis,type_bn,n,wc,zp,p1,p2,xline,yline) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lun
    character*(*) :: axis
    character dimension(3,(*)),intent(c) :: type_bn
    integer optional,check(len(xline)>=n),depend(xline) :: n=len(xline)
    double precision :: wc
    double precision :: zp
    double precision :: p1
    double precision :: p2
    real dimension(n) :: xline
    real dimension(n),depend(n) :: yline
end subroutine drwlincg
subroutine drwtikcg(axis,opts,tickd,nsub,ticklp,typeo,lun,axmin,axmax,blcd,trcd,zp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    character*1 :: axis
    character*(*) :: opts
    double precision :: tickd
    integer :: nsub
    double precision :: ticklp
    character dimension(3,6) :: typeo
    integer :: lun
    double precision :: axmin
    double precision :: axmax
    double precision :: blcd
    double precision :: trcd
    double precision :: zp
end subroutine drwtikcg
subroutine erswincg(xmin,xmax,ymin,ymax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: xmin
    real :: xmax
    real :: ymin
    real :: ymax
end subroutine erswincg
subroutine lab3cg(lun,doerase,doval,dopix,labtyp,ipl,plav,val3form) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lun
    logical :: doerase
    logical :: doval
    logical :: dopix
    character dimension(2,6),intent(c) :: labtyp
    integer :: ipl
    integer :: plav
    character*(*) :: val3form
end subroutine lab3cg
subroutine naxlabcg(lun,donum,blc,trc,krng,labtyp,donx,dony,nofirst,grid) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lun
    logical :: donum
    integer dimension(3) :: blc
    integer dimension(3) :: trc
    integer dimension(2) :: krng
    character dimension(2,(*)),intent(c) :: labtyp
    logical dimension(2) :: donx
    logical dimension(2) :: dony
    logical :: nofirst
    logical :: grid
end subroutine naxlabcg
subroutine setdspcg(lh,labtyp,blc,trc,xdispl,ydispb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lh
    character dimension(*,(*)) :: labtyp
    integer dimension(2) :: blc
    integer dimension(2) :: trc
    real :: xdispl
    real :: ydispb
end subroutine setdspcg
subroutine strerscg(doerase,just,string_bn,x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: doerase
    real :: just
    character*(*) :: string_bn
    real :: x
    real :: y
end subroutine strerscg
subroutine strfmtcg(xnum,ns,str,is) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: xnum
    integer :: ns
    character*(*) :: str
    integer :: is
end subroutine strfmtcg
subroutine vpadjcg(lh,hard,eqscale,scale,vxmin,vymin,vymax,nx,ny,blc,trc,tfvp,wdgvp,vxsize,vysize) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: lh
    character*(*) :: hard
    logical :: eqscale
    real dimension(2) :: scale
    real :: vxmin
    real :: vymin
    real :: vymax
    integer :: nx
    integer :: ny
    integer dimension(*) :: blc
    integer dimension(*) :: trc
    real dimension(4) :: tfvp
    real dimension(4) :: wdgvp
    real :: vxsize
    real :: vysize
end subroutine vpadjcg
subroutine vpsizcg(dofull,dofid,ncon,gin,vin,nspec,bin,maxlev,nlevs,srtlev,levs,slev,nx,ny,pcs,xdispl,ydispb,gaps,doabut,dotr,wedcod,wedwid,tfdisp,labtyp,vxmin,vymin,vymax,vxgap,vygap,vxsize,vysize,tfvp,wdgvp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: dofull
    logical :: dofid
    integer :: ncon
    character*(*) :: gin
    character*(*) :: vin
    integer :: nspec
    character*(*) :: bin
    integer optional,check(shape(srtlev,0)==maxlev),depend(srtlev) :: maxlev=shape(srtlev,0)
    integer dimension(*) :: nlevs
    integer dimension(maxlev,*) :: srtlev
    real dimension(maxlev,*),depend(maxlev) :: levs
    real :: slev
    integer :: nx
    integer :: ny
    real :: pcs
    real :: xdispl
    real :: ydispb
    logical :: gaps
    logical :: doabut
    logical :: dotr
    integer :: wedcod
    real :: wedwid
    real :: tfdisp
    character dimension(2,(*),(*)),intent(c) :: labtyp
    real :: vxmin
    real :: vymin
    real :: vymax
    real :: vxgap
    real :: vygap
    real :: vxsize
    real :: vysize
    real dimension(4) :: tfvp
    real dimension(4) :: wdgvp
end subroutine vpsizcg
subroutine wedgcg(label,trfun,groff,nbins,cumhis,wdgvp,a1,a2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: label
    character*3 :: trfun
    real :: groff
    integer optional,check(len(cumhis)>=nbins),depend(cumhis) :: nbins=len(cumhis)
    real dimension(nbins) :: cumhis
    real dimension(4) :: wdgvp
    real :: a1
    real :: a2
    real dimension(4194304) :: memr
    common memr
end subroutine wedgcg
subroutine wedgecg(wedcod,wedwid,jj,trfun,groff,nbins,cumhis,wdgvp,a1,a2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    integer :: wedcod
    real :: wedwid
    integer :: jj
    character*3 :: trfun
    real :: groff
    integer :: nbins
    real dimension(*) :: cumhis
    real dimension(4) :: wdgvp
    real :: a1
    real :: a2
end subroutine wedgecg
subroutine yhtwcg(yht) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: yht
end subroutine yhtwcg
subroutine qtikcg(dotime,xtick,ytick,nxsub,nysub,xtickl,ytickl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical dimension(2) :: dotime
    real :: xtick
    real :: ytick
    integer :: nxsub
    integer :: nysub
    real :: xtickl
    real :: ytickl
end subroutine qtikcg
subroutine pgtbx1cg(axis,doday,dopara,tmin,tmax,tick,nsub,tscale) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    character*1 :: axis
    logical :: doday
    logical :: dopara
    real :: tmin
    real :: tmax
    real :: tick
    integer :: nsub
    integer :: tscale
end subroutine pgtbx1cg
subroutine pgtbx2cg(tock,nticks,ticks,nsubs,tick,nsub,itick) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    real :: tock
    integer optional,check(len(ticks)>=nticks),depend(ticks) :: nticks=len(ticks)
    real dimension(nticks) :: ticks
    integer dimension(nticks),depend(nticks) :: nsubs
    real :: tick
    integer :: nsub
    integer :: itick
end subroutine pgtbx2cg
subroutine pgtbx3cg(doday,npl,tscale,tints,nticmx,nticks,ticks,nsubs,itick,axis,dopara,str,tick,nsub) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgpgsubs.f
    logical :: doday
    integer :: npl
    integer :: tscale
    real :: tints
    integer :: nticmx
    integer optional,check(len(ticks)>=nticks),depend(ticks) :: nticks=len(ticks)
    real dimension(nticks) :: ticks
    integer dimension(nticks),depend(nticks) :: nsubs
    integer :: itick
    character*1 :: axis
    logical :: dopara
    character*(*) :: str
    real :: tick
    integer :: nsub
end subroutine pgtbx3cg
subroutine angconcg(id,labtyp,w) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: id
    character*(*) :: labtyp
    double precision :: w
end subroutine angconcg
subroutine apptrfcg(pixr,trfun,groff,size_bn,nimage,image,nbins,his,cumhis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    real dimension(2) :: pixr
    character*3 :: trfun
    real :: groff
    integer :: size_bn
    integer dimension(*) :: nimage
    real dimension(*) :: image
    integer optional,check(len(his)>=nbins),depend(his) :: nbins=len(his)
    integer dimension(nbins) :: his
    real dimension(*) :: cumhis
end subroutine apptrfcg
subroutine chkdescg(relax,type_bn,iaxis,im1,im2,des1,des2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    logical :: relax
    character*(*) :: type_bn
    integer :: iaxis
    character*(*) :: im1
    character*(*) :: im2
    double precision :: des1
    double precision :: des2
end subroutine chkdescg
subroutine chnselcg(blc,trc,kbin,maxbox,boxes,ngrps,grpbeg,ngrp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer dimension(3) :: blc
    integer dimension(3) :: trc
    integer dimension(2) :: kbin
    integer optional,check(len(boxes)>=maxbox),depend(boxes) :: maxbox=len(boxes)
    integer dimension(maxbox) :: boxes
    integer :: ngrps
    integer dimension(*) :: grpbeg
    integer dimension(*) :: ngrp
end subroutine chnselcg
subroutine conlevcg(mirror,maxlev,lcin,levtyp,slev,nlevs,levs,srtlev) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    logical :: mirror
    integer optional,check(len(levs)>=maxlev),depend(levs) :: maxlev=len(levs)
    integer :: lcin
    character*1 :: levtyp
    real :: slev
    integer :: nlevs
    real dimension(maxlev) :: levs
    integer dimension(maxlev),depend(maxlev) :: srtlev
end subroutine conlevcg
subroutine copyimcg(n,in,copy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
    real dimension(n) :: in
    real dimension(n),depend(n) :: copy
end subroutine copyimcg
subroutine defchrcg(nx,ny,cs) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: nx
    integer :: ny
    real dimension(*) :: cs
end subroutine defchrcg
subroutine dolabcg(gaps,dotr,nx,ny,nz,nlast,iplot,labtyp,doaxlab,doaylab,donxlab,donylab) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    logical :: gaps
    logical :: dotr
    integer :: nx
    integer :: ny
    integer :: nz
    integer :: nlast
    integer :: iplot
    character dimension(2,(*)) :: labtyp
    logical :: doaxlab
    logical :: doaylab
    logical dimension(2) :: donxlab
    logical dimension(2) :: donylab
end subroutine dolabcg
subroutine grfixcg(pixr,lgin,gnaxis,gsize,trfun,pixr2,groff,blankg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    real dimension(2) :: pixr
    integer :: lgin
    integer :: gnaxis
    integer dimension(*) :: gsize
    character*(*) :: trfun
    real dimension(2) :: pixr2
    real :: groff
    real :: blankg
end subroutine grfixcg
subroutine heqcg(pixr,n,nimage,image,nbins,his,cumhis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    real dimension(2) :: pixr
    integer optional,check(len(nimage)>=n),depend(nimage) :: n=len(nimage)
    integer dimension(n) :: nimage
    real dimension(n),depend(n) :: image
    integer optional,check(len(his)>=nbins),depend(his) :: nbins=len(his)
    integer dimension(nbins) :: his
    real dimension(nbins),depend(nbins) :: cumhis
end subroutine heqcg
subroutine limitscg(blc,ibin,jbin,tr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer dimension(*) :: blc
    integer :: ibin
    integer :: jbin
    real dimension(6) :: tr
end subroutine limitscg
subroutine maskorcg(blank,win,bimage,nimage,image) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    real :: blank
    integer dimension(2) :: win
    logical dimension(*) :: bimage
    integer dimension(*) :: nimage
    real dimension(*) :: image
end subroutine maskorcg
subroutine matchcg(n,field,string_bn,struct_bn,ntype,types) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: n
    character*(*) :: field
    character*(*) :: string_bn
    character*(*) :: struct_bn
    integer optional,check(shape(types,0)==ntype),depend(types) :: ntype=shape(types,0)
    character dimension(ntype,(*)),intent(c) :: types
end subroutine matchcg
subroutine nxnycg(nxdef,nydef,nz,nx,ny,nlast) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: nxdef
    integer :: nydef
    integer :: nz
    integer :: nx
    integer :: ny
    integer :: nlast
end subroutine nxnycg
subroutine opimcg(maxnax,in,lin,size_bn,naxis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer optional,check(len(size_bn)>=maxnax),depend(size_bn) :: maxnax=len(size_bn)
    character*(*) :: in
    integer :: lin
    integer dimension(maxnax) :: size_bn
    integer :: naxis
end subroutine opimcg
subroutine optcg(key,opts,present,nopt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    character*(*) :: key
    character dimension(nopt,(*)) :: opts
    logical dimension(nopt),depend(nopt) :: present
    integer optional,check(shape(opts,0)==nopt),depend(opts) :: nopt=shape(opts,0)
end subroutine optcg
subroutine ol2pixcg(lun,pix3,otype,off,dsign,nums,opos,np) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: lun
    double precision :: pix3
    character dimension(2,(*)),intent(c) :: otype
    double precision dimension(*) :: off
    integer dimension(2) :: dsign
    double precision dimension(*) :: nums
    double precision dimension(*) :: opos
    integer :: np
end subroutine ol2pixcg
subroutine ppconcg(id,blc,bin,p) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: id
    integer :: blc
    integer :: bin
    double precision :: p
end subroutine ppconcg
subroutine razerocg(lun,blc,trc,zero) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: lun
    integer dimension(2) :: blc
    integer dimension(2) :: trc
    logical dimension(2) :: zero
end subroutine razerocg
subroutine readbcg(init,lun,ibin,jbin,krng,blc,trc,bimage,blanks) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    logical :: init
    integer :: lun
    integer dimension(2) :: ibin
    integer dimension(2) :: jbin
    integer dimension(2) :: krng
    integer dimension(*) :: blc
    integer dimension(*) :: trc
    logical dimension(*) :: bimage
    logical :: blanks
end subroutine readbcg
subroutine readimcg(init,blank,lun,ibin,jbin,krng,blc,trc,norm,nimage,image,blanks,dmm) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    logical :: init
    real :: blank
    integer :: lun
    integer dimension(2) :: ibin
    integer dimension(2) :: jbin
    integer dimension(2) :: krng
    integer dimension(3) :: blc
    integer dimension(3) :: trc
    logical :: norm
    integer dimension(*) :: nimage
    real dimension(*) :: image
    logical :: blanks
    real dimension(3) :: dmm
end subroutine readimcg
subroutine setccscg(labtyp,ccstr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    character dimension(2,(*)),intent(c) :: labtyp
    character*(*) :: ccstr
end subroutine setccscg
subroutine setcolcg(i,icol) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: i
    integer :: icol
end subroutine setcolcg
subroutine setlabcg(lh,labtyp,doepoch,xlabel,ylabel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: lh
    character dimension(2,(*)),intent(c) :: labtyp
    logical :: doepoch
    character*(*) :: xlabel
    character*(*) :: ylabel
end subroutine setlabcg
subroutine strprpcg(maxloc,aline,comloc,nfield,lena) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer optional,check(len(comloc)>=maxloc),depend(comloc) :: maxloc=len(comloc)
    character*(*) :: aline
    integer dimension(maxloc) :: comloc
    integer :: nfield
    integer :: lena
end subroutine strprpcg
subroutine subinccg(iplot,nx,ny,vxmin,vymax,vxsize,vysize,vxgap,vygap,vx,vy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: iplot
    integer :: nx
    integer :: ny
    real :: vxmin
    real :: vymax
    real :: vxsize
    real :: vysize
    real :: vxgap
    real :: vygap
    real :: vx
    real :: vy
end subroutine subinccg
subroutine wedgincg(hard,dofid,dowedge,nx,ny,npixr,trfun,wedcod) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    character*3 :: hard
    logical :: dofid
    logical :: dowedge
    integer :: nx
    integer :: ny
    integer :: npixr
    character*3 :: trfun
    integer :: wedcod
end subroutine wedgincg
subroutine winfidcg(size_bn,axis,bin,blc,trc,win) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cgsubs.f
    integer :: size_bn
    integer :: axis
    integer dimension(2) :: bin
    integer :: blc
    integer :: trc
    integer :: win
end subroutine winfidcg
subroutine cnvlinif(handle,lu,n1,n2,ic,jc,param,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    integer :: lu
    integer :: n1
    integer :: n2
    integer :: ic
    integer :: jc
    real :: param
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlinif
subroutine cnvlinia(handle,array,n1,n2,ic,jc,param,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    real dimension(n1,n2) :: array
    integer optional,check(shape(array,0)==n1),depend(array) :: n1=shape(array,0)
    integer optional,check(shape(array,1)==n2),depend(array) :: n2=shape(array,1)
    integer :: ic
    integer :: jc
    real :: param
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlinia
subroutine cnvlcopy(out,handle) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: out
    integer :: handle
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlcopy
subroutine cnvlco(handle1,handle2,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle1
    integer :: handle2
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlco
subroutine cnvlin0(handle,n1,n2,n1d,n2d,space,trans,cdat1,cdat2,flags,ic,jc,xr,yr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: space
    integer :: trans
    integer :: cdat1
    integer :: cdat2
    character*(*) :: flags
    integer :: ic
    integer :: jc
    integer :: xr
    integer :: yr
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlin0
subroutine cnvlin2(beam,trans,cdat1,cdat2,n1,n2,n1d,n2d,yr,flags,param) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(*) :: beam
    complex dimension(n1/2+1,n2),depend(n1) :: trans
    complex dimension(n2d) :: cdat1
    complex dimension(n2d),depend(n2d) :: cdat2
    integer :: n1
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    integer :: n1d
    integer optional,check(len(cdat1)>=n2d),depend(cdat1) :: n2d=len(cdat1)
    integer :: yr
    character*(*) :: flags
    real :: param
end subroutine cnvlin2
subroutine cnvla(handle,in,nx,ny,out,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    real dimension(nx*ny),depend(nx,ny) :: in
    integer :: nx
    integer :: ny
    real dimension(*) :: out
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvla
subroutine cnvlf(handle,lu,nx,ny,out,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    integer :: lu
    integer :: nx
    integer :: ny
    real dimension(*) :: out
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlf
subroutine cnvlr(handle,in,nx,ny,runs,nruns,out,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    real dimension(*) :: in
    integer :: nx
    integer :: ny
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    real dimension(*) :: out
    character*(*) :: flags
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlr
subroutine cnvlext(handle,n1,n2,n1d,n2d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlext
subroutine cnvl0(handle,nx,ny,n1,n2,n1a,n2a,n1d,n2d,space,trans,cdat1,cdat2,flags,sym,compr,corr,xr,yr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    integer :: nx
    integer :: ny
    integer :: n1
    integer :: n2
    integer :: n1a
    integer :: n2a
    integer :: n1d
    integer :: n2d
    integer :: space
    integer :: trans
    integer :: cdat1
    integer :: cdat2
    character*(*) :: flags
    logical :: sym
    logical :: compr
    logical :: corr
    integer :: xr
    integer :: yr
    real dimension(4194304) :: dat
    common dat
end subroutine cnvl0
subroutine cnvl1a(lu,trans,dat1,dat2,n1,n2,n1d,xr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: lu
    complex dimension(n1d/2+1,n2),depend(n1d) :: trans
    real dimension(n1) :: dat1
    real dimension(n1d) :: dat2
    integer optional,check(len(dat1)>=n1),depend(dat1) :: n1=len(dat1)
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    integer optional,check(len(dat2)>=n1d),depend(dat2) :: n1d=len(dat2)
    integer :: xr
end subroutine cnvl1a
subroutine cnvl1b(array,trans,dat,n1,n2,n1d,xr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(n1,n2) :: array
    complex dimension(n1d/2+1,n2),depend(n1d,n2) :: trans
    real dimension(n1d) :: dat
    integer optional,check(shape(array,0)==n1),depend(array) :: n1=shape(array,0)
    integer optional,check(shape(array,1)==n2),depend(array) :: n2=shape(array,1)
    integer optional,check(len(dat)>=n1d),depend(dat) :: n1d=len(dat)
    integer :: xr
end subroutine cnvl1b
subroutine cnvl1c(array,trans,dat,n1,n2,n1d,runs,nruns,xr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(*) :: array
    complex dimension(n1d/2+1,n2),depend(n1d) :: trans
    real dimension(n1d) :: dat
    integer :: n1
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    integer optional,check(len(dat)>=n1d),depend(dat) :: n1d=len(dat)
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
    integer :: xr
end subroutine cnvl1c
subroutine cnvl2(beam,trans,cdat1,cdat2,n1,n2,n2a,n2d,yr,sym,corr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(*) :: beam
    complex dimension(n1/2+1,n2a),depend(n1) :: trans
    complex dimension(n2d) :: cdat1
    complex dimension(n2d),depend(n2d) :: cdat2
    integer :: n1
    integer :: n2
    integer optional,check(shape(trans,1)==n2a),depend(trans) :: n2a=shape(trans,1)
    integer optional,check(len(cdat1)>=n2d),depend(cdat1) :: n2d=len(cdat1)
    integer :: yr
    logical :: sym
    logical :: corr
end subroutine cnvl2
subroutine cnvl3a(trans,dat,out,n1,n2,n1d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    complex dimension(n1d/2+1,n2),depend(n1d) :: trans
    real dimension(n1d) :: dat
    real dimension(n1,n2),depend(n2) :: out
    integer optional,check(shape(out,0)==n1),depend(out) :: n1=shape(out,0)
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    integer optional,check(len(dat)>=n1d),depend(dat) :: n1d=len(dat)
end subroutine cnvl3a
subroutine cnvl3b(trans,dat,out,n1,n2,n1d,runs,nruns) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    complex dimension(n1d/2+1,n2),depend(n1d) :: trans
    real dimension(n1d) :: dat
    real dimension(*) :: out
    integer :: n1
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    integer optional,check(len(dat)>=n1d),depend(dat) :: n1d=len(dat)
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
end subroutine cnvl3b
subroutine cnvlfin(handle) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    integer :: handle
    real dimension(4194304) :: dat
    common dat
end subroutine cnvlfin
subroutine cnvlcpy(in,out,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(n) :: in
    real dimension(n),depend(n) :: out
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlcpy
subroutine cnvlscal(factor,in,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real :: factor
    real dimension(n) :: in
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlscal
subroutine cnvlcpyr(factor,in,out,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real :: factor
    complex dimension(n) :: in
    real dimension(n),depend(n) :: out
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlcpyr
subroutine cnvlcpyc(factor,in,out,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real :: factor
    complex dimension(n) :: in
    complex dimension(n),depend(n) :: out
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlcpyc
subroutine cnvlmcr(in,beam,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    complex dimension(n) :: in
    real dimension(n),depend(n) :: beam
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlmcr
subroutine cnvlmrr(in,beam,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    real dimension(n) :: in
    real dimension(n),depend(n) :: beam
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlmrr
subroutine cnvlmcc(in,beam,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    complex dimension(n) :: in
    complex dimension(n),depend(n) :: beam
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlmcc
subroutine cnvlmccc(in,beam,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cnvl.f
    complex dimension(n) :: in
    complex dimension(n),depend(n) :: beam
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine cnvlmccc
subroutine coinit(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coinit
subroutine codup(lin,lout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lin
    integer :: lout
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine codup
subroutine coradec(lu,proj,ra0,dec0) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: proj
    double precision :: ra0
    double precision :: dec0
end subroutine coradec
subroutine cocreate(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cocreate
subroutine coaxset(lu,iax,ctypei,crpixi,crvali,cdelti) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    integer :: iax
    character*(*) :: ctypei
    double precision :: crpixi
    double precision :: crvali
    double precision :: cdelti
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coaxset
subroutine cosetd(lu,object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: object
    double precision :: value
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cosetd
subroutine coseta(lu,object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: object
    character*(*) :: value
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coseta
subroutine cogetd(lu,object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: object
    double precision :: value
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cogetd
subroutine cogeta(lu,object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: object
    character*(*) :: value
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cogeta
subroutine coreinit(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coreinit
subroutine cofin(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cofin
subroutine cocvt(lu,in,x1,out,x2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: in
    double precision dimension(*) :: x1
    character*(*) :: out
    double precision dimension(*) :: x2
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cocvt
subroutine cofreq(lu,in,x1,freq1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: in
    double precision dimension(*) :: x1
    double precision :: freq1
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cofreq
subroutine colmn(lu,in,x1,lmn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: in
    double precision dimension(*) :: x1
    double precision dimension(3) :: lmn
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine colmn
subroutine cogeom(lu,in,x1,ucoeff,vcoeff,wcoeff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: in
    double precision dimension(*) :: x1
    double precision dimension(3) :: ucoeff
    double precision dimension(3) :: vcoeff
    double precision dimension(3) :: wcoeff
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cogeom
subroutine cocvt1(lu,iax,in,x1,out,x2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    integer :: iax
    character*(*) :: in
    double precision :: x1
    character*(*) :: out
    double precision :: x2
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cocvt1
subroutine cogaucvt(lu,in,x1,ing,bmaj1,bmin1,bpa1,outg,bmaj2,bmin2,bpa2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character dimension(*) :: in
    double precision dimension(*) :: x1
    character*(*) :: ing
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    character*(*) :: outg
    real :: bmaj2
    real :: bmin2
    real :: bpa2
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cogaucvt
subroutine covelset(lu,type_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: type_bn
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine covelset
subroutine cogetvel(raepo,decepo,epoch,vel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: raepo
    double precision :: decepo
    double precision :: epoch
    double precision :: vel
end subroutine cogetvel
subroutine coaxget(lu,iax,ctypei,crpixi,crvali,cdelti) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    integer :: iax
    character*(*) :: ctypei
    double precision :: crpixi
    double precision :: crvali
    double precision :: cdelti
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coaxget
subroutine cofindax(lu,axis,iax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: axis
    integer :: iax
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cofindax
function cocompar(lu1,lu2,match) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu1
    integer :: lu2
    character*(*) :: match
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    logical :: cocompar
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end function cocompar
subroutine colin(lu,in,x1,n,ctype1,crpix1,crval1,cdelt1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: in
    double precision dimension(*) :: x1
    integer optional,check(shape(ctype1,0)==n),depend(ctype1) :: n=shape(ctype1,0)
    character dimension(n,(*)) :: ctype1
    double precision dimension(n),depend(n) :: crpix1
    double precision dimension(n),depend(n) :: crval1
    double precision dimension(n),depend(n) :: cdelt1
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine colin
subroutine coprint(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coprint
subroutine coprjset(lu,p) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    character*(*) :: p
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coprjset
subroutine cowrite(lu,tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    integer :: tno
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cowrite
subroutine cocompat(ctype1,ctype2,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    character*(*) :: ctype1
    character*(*) :: ctype2
    logical :: ok
end subroutine cocompat
subroutine coext(ctype,type_bn,qual) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    character*(*) :: ctype
    character*(*) :: type_bn
    character*(*) :: qual
end subroutine coext
subroutine coinitxy(k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: k
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coinitxy
subroutine cotycvt(type_bn,itype,proj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    character*(*) :: type_bn
    integer :: itype
    character*(*) :: proj
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine cotycvt
subroutine coinituv(k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: k
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end subroutine coinituv
function coloc(lu,alloc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    integer :: lu
    logical :: alloc
    double precision dimension(7,15) :: crval
    double precision dimension(7,15) :: crpix
    double precision dimension(7,15) :: cdelt
    double precision dimension(15) :: restfreq
    double precision dimension(15) :: vobs
    double precision dimension(15) :: epoch
    double precision dimension(15) :: obstime
    double precision dimension(15) :: llcos
    double precision dimension(15) :: llsin
    integer dimension(15) :: lus
    integer dimension(15) :: nalloc
    integer dimension(15) :: naxis
    integer dimension(7,15) :: cotype
    integer dimension(15) :: ilong
    integer dimension(15) :: ilat
    integer dimension(15) :: ifreq
    logical dimension(15) :: cellscal
    character dimension(7,15,16) :: ctype
    character dimension(15,3) :: coproj
    integer :: coloc
    common /cocom/ crval,crpix,cdelt,restfreq,vobs,epoch,obstime,llcos,llsin,lus,nalloc,naxis,cotype,ilong,ilat,ifreq,cellscal
    common /cocomc/ ctype,coproj
end function coloc
subroutine cocrack(code,x1pix,x1off,defn,maxnax,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    character*(*) :: code
    logical dimension(maxnax) :: x1pix
    logical dimension(maxnax),depend(maxnax) :: x1off
    integer :: defn
    integer optional,check(len(x1pix)>=maxnax),depend(x1pix) :: maxnax=len(x1pix)
    integer :: n
end subroutine cocrack
subroutine cofqfac(x1,type_bn,xval,xpix,dx,vobs,x1off,x1pix,scal) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x1
    character*4 :: type_bn
    double precision :: xval
    double precision :: xpix
    double precision :: dx
    double precision :: vobs
    logical :: x1off
    logical :: x1pix
    double precision :: scal
end subroutine cofqfac
subroutine cofelo(x10,x2,xval,xpix,dx,x1pix,x1off,x2pix,x2off) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x10
    double precision :: x2
    double precision :: xval
    double precision :: xpix
    double precision :: dx
    logical :: x1pix
    logical :: x1off
    logical :: x2pix
    logical :: x2off
end subroutine cofelo
subroutine cocelest(x10,y10,x2,y2,proj,llcos,llsin,xval,xpix,dx,yval,ypix,dy,x1pix,y1pix,x2pix,y2pix,x1off,y1off,x2off,y2off) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x10
    double precision :: y10
    double precision :: x2
    double precision :: y2
    character*(*) :: proj
    double precision :: llcos
    double precision :: llsin
    double precision :: xval
    double precision :: xpix
    double precision :: dx
    double precision :: yval
    double precision :: ypix
    double precision :: dy
    logical :: x1pix
    logical :: y1pix
    logical :: x2pix
    logical :: y2pix
    logical :: x1off
    logical :: y1off
    logical :: x2off
    logical :: y2off
end subroutine cocelest
subroutine colinear(xval,xpix,dx,x1pix,x1off,x2pix,x2off,bscal,bzero) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: xval
    double precision :: xpix
    double precision :: dx
    logical :: x1pix
    logical :: x1off
    logical :: x2pix
    logical :: x2off
    double precision :: bscal
    double precision :: bzero
end subroutine colinear
subroutine coll2xy(x1,y1,x2,y2,xpix,dx,xval,ypix,dy,yval,llcos,llsin,proj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x1
    double precision :: y1
    double precision :: x2
    double precision :: y2
    double precision :: xpix
    double precision :: dx
    double precision :: xval
    double precision :: ypix
    double precision :: dy
    double precision :: yval
    double precision :: llcos
    double precision :: llsin
    character*(*) :: proj
end subroutine coll2xy
subroutine coxy2ll(x1,y1,x2,y2,xpix,dx,xval,ypix,dy,yval,llcos,llsin,proj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x1
    double precision :: y1
    double precision :: x2
    double precision :: y2
    double precision :: xpix
    double precision :: dx
    double precision :: xval
    double precision :: ypix
    double precision :: dy
    double precision :: yval
    double precision :: llcos
    double precision :: llsin
    character*(*) :: proj
end subroutine coxy2ll
subroutine comixed(x1,y1,x2,y2,xpix,dx,xval,ypix,dy,yval,llcos,llsin,proj,pw2wp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/co.f
    double precision :: x1
    double precision :: y1
    double precision :: x2
    double precision :: y2
    double precision :: xpix
    double precision :: dx
    double precision :: xval
    double precision :: ypix
    double precision :: dy
    double precision :: yval
    double precision :: llcos
    double precision :: llsin
    character*(*) :: proj
    logical :: pw2wp
end subroutine comixed
subroutine convlini(lu,out,n1,n2,phat,ic,jc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/convl.f
    integer :: lu
    real dimension(n2,n1/2+1),depend(n1) :: out
    integer :: n1
    integer optional,check(shape(out,0)==n2),depend(out) :: n2=shape(out,0)
    real :: phat
    integer :: ic
    integer :: jc
    real dimension(4194304) :: trans
    common trans
end subroutine convlini
subroutine convlin1(data,trans,cdata1,cdata2,rotv,lu,out,n1,n2,phat,ic,jc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/convl.f
    real dimension(n1) :: data
    complex dimension(n1/2+1,n2),depend(n1) :: trans
    complex dimension(n2),depend(n2) :: cdata1
    complex dimension(n2),depend(n2) :: cdata2
    complex dimension(n2),depend(n2) :: rotv
    integer :: lu
    real dimension(n2,n1/2+1),depend(n2,n1) :: out
    integer optional,check(len(data)>=n1),depend(data) :: n1=len(data)
    integer optional,check(shape(trans,1)==n2),depend(trans) :: n2=shape(trans,1)
    real :: phat
    integer :: ic
    integer :: jc
end subroutine convlin1
subroutine convl(in,out,n,nx,ny,runs,nruns,beam,n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/convl.f
    real dimension(n) :: in
    real dimension(n),depend(n) :: out
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
    integer :: nx
    integer :: ny
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    real dimension(n2,n1/2+1),depend(n1) :: beam
    integer :: n1
    integer optional,check(shape(beam,0)==n2),depend(beam) :: n2=shape(beam,0)
    real dimension(4194304) :: trans
    common trans
end subroutine convl
subroutine convl1(data,trans,cdata1,cdata2,in,out,n,nx,ny,runs,nruns,beam,n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/convl.f
    real dimension(n1) :: data
    complex dimension(n1/2+1,ny),depend(n1) :: trans
    complex dimension(n2) :: cdata1
    complex dimension(n2),depend(n2) :: cdata2
    real dimension(n) :: in
    real dimension(n),depend(n) :: out
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
    integer :: nx
    integer optional,check(shape(trans,1)==ny),depend(trans) :: ny=shape(trans,1)
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
    real dimension(n2,n1/2+1),depend(n2,n1) :: beam
    integer optional,check(len(data)>=n1),depend(data) :: n1=len(data)
    integer optional,check(len(cdata1)>=n2),depend(cdata1) :: n2=len(cdata1)
end subroutine convl1
subroutine axfndco(lun,type_bn,n,iax,jax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    character*(*) :: type_bn
    integer :: n
    integer :: iax
    integer :: jax
end subroutine axfndco
subroutine axtypco(lun,n,iax,type_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: n
    integer :: iax
    character dimension(*,4),intent(c) :: type_bn
end subroutine axtypco
subroutine chkaxco(lun,ltype,iax,stype) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    character*(*) :: ltype
    integer :: iax
    character*(*) :: stype
end subroutine chkaxco
subroutine ctypeco(lun,iax,ctype,il) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: iax
    character*(*) :: ctype
    integer :: il
end subroutine ctypeco
subroutine finco(lun) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
end subroutine finco
subroutine initco(lun) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
end subroutine initco
subroutine sctico(type_bn,win,cti) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    character*(*) :: type_bn
    double precision :: win
    character*(*) :: cti
end subroutine sctico
subroutine sctoco(type_bn,wout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    character*(*) :: type_bn
    double precision :: wout
end subroutine sctoco
subroutine setoaco(lun,absoff,n,iax,types) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    character*3 :: absoff
    integer optional,check(shape(types,0)==n),depend(types) :: n=shape(types,0)
    integer :: iax
    character dimension(n,(*)),intent(c) :: types
end subroutine setoaco
subroutine specco(lun,iax,stype) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: iax
    character*(*) :: stype
end subroutine specco
subroutine sunitco(lun,iax,type_bn,units) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: iax
    character*(*) :: type_bn
    character*(*) :: units
end subroutine sunitco
subroutine w2wco(lun,n,typei,stypei,win,typeo,stypeo,wout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer optional,check(shape(typei,0)==n),depend(typei) :: n=shape(typei,0)
    character dimension(n,(*)),intent(c) :: typei
    character*(*) :: stypei
    double precision dimension(n),depend(n) :: win
    character dimension(n,(*)),intent(c),depend(n) :: typeo
    character*(*) :: stypeo
    double precision dimension(n),depend(n) :: wout
end subroutine w2wco
subroutine w2wfco(lun,n,typei,stypei,win,typeo,stypeo,nounit,strout,strlen) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer optional,check(shape(typei,0)==n),depend(typei) :: n=shape(typei,0)
    character dimension(n,(*)),intent(c) :: typei
    character*(*) :: stypei
    double precision dimension(n),depend(n) :: win
    character dimension(n,(*)),intent(c),depend(n) :: typeo
    character*(*) :: stypeo
    logical :: nounit
    character dimension(n,(*)),intent(c),depend(n) :: strout
    integer dimension(n),depend(n) :: strlen
end subroutine w2wfco
subroutine w2wsco(lun,iax,typei,stypei,win,typeo,stypeo,wout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: iax
    character*(*) :: typei
    character*(*) :: stypei
    double precision :: win
    character*(*) :: typeo
    character*(*) :: stypeo
    double precision :: wout
end subroutine w2wsco
subroutine w2wsfco(lun,iax,typei,stypei,win,typeo,stypeo,nounit,strout,strlen) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/cosubs.f
    integer :: lun
    integer :: iax
    character*(*) :: typei
    character*(*) :: stypei
    double precision :: win
    character*(*) :: typeo
    character*(*) :: stypeo
    logical :: nounit
    character*(*) :: strout
    integer :: strlen
end subroutine w2wsfco
subroutine ctrlopen(name,ctrl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    logical :: ctrl
end subroutine ctrlopen
subroutine ctrlinit(name,status) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    integer :: status
end subroutine ctrlinit
subroutine ctrlport(name,port,status) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    integer :: port
    integer :: status
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlport
subroutine ctrlview ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlview
subroutine ctrlclr ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlclr
subroutine ctrlchck(name,changes,val1,val2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    integer :: changes
    integer :: val1
    integer :: val2
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlchck
subroutine ctrlwait(name,changes,val1,val2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    integer :: changes
    integer :: val1
    integer :: val2
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlwait
subroutine ctrldef(name,type_bn,values,nvalues) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    character*(*) :: type_bn
    character dimension(nvalues,(*)) :: values
    integer optional,check(shape(values,0)==nvalues),depend(values) :: nvalues=shape(values,0)
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrldef
subroutine ctrlset(name,values,nvalues) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    integer dimension(nvalues) :: values
    integer optional,check(len(values)>=nvalues),depend(values) :: nvalues=len(values)
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlset
subroutine ctrlseta(name,string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character*(*) :: name
    character*(*) :: string_bn
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlseta
subroutine ctrlfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlfin
subroutine ctrlflsh(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    integer :: n
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlflsh
subroutine ctrlread(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ctrl.f
    integer :: n
    character dimension(32,8) :: items
    integer :: handle
    integer :: nitems
    integer :: buflen
    integer dimension(2048) :: buffer
    integer dimension(2048) :: iobuf
    common /ctrlcomc/ items
    common /ctrlcomm/ handle,nitems,buflen,buffer,iobuf
end subroutine ctrlread
subroutine defsmodl(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/defsmodl.f
    integer :: tno
end subroutine defsmodl
subroutine deghms(a,d,radec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/deghms.f
    double precision :: a
    double precision :: d
    character*(*) :: radec
end subroutine deghms
subroutine radhms(a,d,radec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/deghms.f
    double precision :: a
    double precision :: d
    character*(*) :: radec
end subroutine radhms
subroutine jul2ut(jday,ut) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: ut
end subroutine jul2ut
subroutine prerotat(jday,ra,dec,jout,theta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: ra
    double precision :: dec
    double precision :: jout
    double precision :: theta
end subroutine prerotat
subroutine precess(jday1,ra1,dec1,jday2,ra2,dec2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday1
    double precision :: ra1
    double precision :: dec1
    double precision :: jday2
    double precision :: ra2
    double precision :: dec2
end subroutine precess
subroutine azel(obsra,obsdec,lst,latitude,az,el) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: obsra
    double precision :: obsdec
    double precision :: lst
    double precision :: latitude
    double precision :: az
    double precision :: el
end subroutine azel
subroutine parang(obsra,obsdec,lst,latitude,chi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: obsra
    double precision :: obsdec
    double precision :: lst
    double precision :: latitude
    real :: chi
end subroutine parang
subroutine jullst(jday,long_bn,lst) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: long_bn
    double precision :: lst
end subroutine jullst
subroutine xyz2llh(x,y,z,lat,long_bn,height) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: x
    double precision :: y
    double precision :: z
    double precision :: lat
    double precision :: long_bn
    double precision :: height
end subroutine xyz2llh
subroutine llh2xyz(lat,long_bn,height,x,y,z) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: lat
    double precision :: long_bn
    double precision :: height
    double precision :: x
    double precision :: y
    double precision :: z
end subroutine llh2xyz
subroutine sph2lmn(ra,dec,lmn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: ra
    double precision :: dec
    double precision dimension(3) :: lmn
end subroutine sph2lmn
subroutine lmn2sph(lmn,ra,dec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision dimension(3) :: lmn
    double precision :: ra
    double precision :: dec
end subroutine lmn2sph
function epo2jul(epoch,code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: epoch
    character*1 :: code
    double precision :: epo2jul
end function epo2jul
function jul2epo(jday,code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    character*1 :: code
    double precision :: jul2epo
end function jul2epo
function deltime(jday,sys) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    character*(*) :: sys
    double precision :: deltime
end function deltime
subroutine aberrate(jday,ra,dec,rapp,dapp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: ra
    double precision :: dec
    double precision :: rapp
    double precision :: dapp
end subroutine aberrate
function eqeq(jday) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: eqeq
end function eqeq
function mobliq(jday) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: mobliq
end function mobliq
subroutine nutate(jday,rmean,dmean,rtrue,dtrue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: rmean
    double precision :: dmean
    double precision :: rtrue
    double precision :: dtrue
end subroutine nutate
subroutine nuts(jday,dpsi,deps) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: dpsi
    double precision :: deps
end subroutine nuts
subroutine sunradec(jday,ra,dec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: jday
    double precision :: ra
    double precision :: dec
end subroutine sunradec
subroutine veccross(x,y,z) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision dimension(3) :: x
    double precision dimension(3) :: y
    double precision dimension(3) :: z
end subroutine veccross
function lstjul(lst,jday,long_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: lst
    double precision :: jday
    double precision :: long_bn
    double precision :: lstjul
end function lstjul
subroutine fk45z(r1950,d1950,jday,r2000,d2000) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: r1950
    double precision :: d1950
    double precision :: jday
    double precision :: r2000
    double precision :: d2000
end subroutine fk45z
subroutine fk54z(r2000,d2000,jday,r1950,d1950,dr1950,dd1950) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: r2000
    double precision :: d2000
    double precision :: jday
    double precision :: r1950
    double precision :: d1950
    double precision :: dr1950
    double precision :: dd1950
end subroutine fk54z
subroutine fk524(r2000,d2000,dr2000,dd2000,p2000,v2000,r1950,d1950,dr1950,dd1950,p1950,v1950) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: r2000
    double precision :: d2000
    double precision :: dr2000
    double precision :: dd2000
    double precision :: p2000
    double precision :: v2000
    double precision :: r1950
    double precision :: d1950
    double precision :: dr1950
    double precision :: dd1950
    double precision :: p1950
    double precision :: v1950
end subroutine fk524
subroutine pm(r0,d0,pr,pd,px,rv,jep0,jep1,r1,d1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ephem.f
    double precision :: r0
    double precision :: d0
    double precision :: pr
    double precision :: pd
    double precision :: px
    double precision :: rv
    double precision :: jep0
    double precision :: jep1
    double precision :: r1
    double precision :: d1
end subroutine pm
function expun(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/expun.f
    real :: x
    real :: expun
end function expun
function dexpun(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/expun.f
    double precision :: x
    double precision :: dexpun
end function dexpun
subroutine fftrc(in,out,isn,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    real dimension(n) :: in
    real dimension(n + 2),depend(n) :: out
    integer :: isn
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine fftrc
subroutine fftcr(in,out,isn,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    real dimension(n + 2) :: in
    real dimension(n),depend(n) :: out
    integer :: isn
    integer optional,check((len(in)-2)>=n),depend(in) :: n=(len(in)-2)
end subroutine fftcr
subroutine fftcc(in,out,isn,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    complex dimension(n) :: in
    complex dimension(n),depend(n) :: out
    integer :: isn
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
end subroutine fftcc
subroutine fft842x(data,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    complex dimension(n) :: data
    integer optional,check(len(data)>=n),depend(data) :: n=len(data)
end subroutine fft842x
subroutine fftini(n,m,ni,i1,i2,twiddle) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    integer optional,check(len(twiddle)>=n),depend(twiddle) :: n=len(twiddle)
    integer :: m
    integer :: ni
    integer dimension(n/2),depend(n) :: i1
    integer dimension(n/2),depend(n) :: i2
    complex dimension(n) :: twiddle
end subroutine fftini
subroutine r2txx(nthpo,c0,c1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    integer :: nthpo
    complex dimension(*) :: c0
    complex dimension(*) :: c1
end subroutine r2txx
subroutine r4txx(nthpo,c0,c1,c2,c3) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    integer :: nthpo
    complex dimension(*) :: c0
    complex dimension(*) :: c1
    complex dimension(*) :: c2
    complex dimension(*) :: c3
end subroutine r4txx
subroutine r8tyx(nxtlt,nthpo,lengt,cs,c0,c1,c2,c3,c4,c5,c6,c7) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fftsubs.f
    integer :: nxtlt
    integer :: nthpo
    integer :: lengt
    real dimension(*) :: cs
    real dimension(*) :: c0
    real dimension(*) :: c1
    real dimension(*) :: c2
    real dimension(*) :: c3
    real dimension(*) :: c4
    real dimension(*) :: c5
    real dimension(*) :: c6
    real dimension(*) :: c7
end subroutine r8tyx
subroutine fxyopen(lu,name,status,naxis,nsize) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    character*(*) :: status
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxyopen
subroutine fxysetpl(lu,naxis,nsize) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxysetpl
function fitblank(lu,mode) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    logical :: mode
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    logical :: fitblank
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end function fitblank
subroutine fxyread(lu,indx,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: indx
    real dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxyread
subroutine fxyflgrd(lu,indx,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: indx
    logical dimension(*) :: flags
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxyflgrd
subroutine fxywrite(lu,indx,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: indx
    real dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxywrite
subroutine fxyflgwr(lu,indx,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: indx
    logical dimension(*) :: flags
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fxyflgwr
function isrchl(n,array,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    logical dimension(n) :: array
    logical :: target
    integer :: isrchl
end function isrchl
subroutine fxyclose(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
end subroutine fxyclose
subroutine fuvopen(lu,name,status,nvis,npol,nfreq) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    character*(*) :: status
    integer :: nvis
    integer :: npol
    integer :: nfreq
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvopen
subroutine fuvsetpa(lu,nparam,params) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: nparam
    character dimension(*,(*)) :: params
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvsetpa
subroutine fuvwrpa(lu,nranfile,params,timoff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer optional,check(shape(params,0)==nranfile),depend(params) :: nranfile=shape(params,0)
    character dimension(nranfile,(*)) :: params
    double precision :: timoff
end subroutine fuvwrpa
subroutine fuvrdpa(lu,nranfile,nranprog,params,indices1,indices2,scales1,scales2,zeros,timoff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: nranfile
    integer optional,check(shape(params,0)==nranprog),depend(params) :: nranprog=shape(params,0)
    character dimension(nranprog,(*)) :: params
    integer dimension(nranprog),depend(nranprog) :: indices1
    integer dimension(nranprog),depend(nranprog) :: indices2
    real dimension(nranprog),depend(nranprog) :: scales1
    real dimension(nranprog),depend(nranprog) :: scales2
    real dimension(nranprog),depend(nranprog) :: zeros
    double precision :: timoff
end subroutine fuvrdpa
function fuvgett0(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    double precision :: fuvgett0
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end function fuvgett0
subroutine fuvsett0(lu,t0) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    double precision :: t0
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvsett0
subroutine fuvwrhd(lu,coord) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    double precision dimension(3,4) :: coord
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvwrhd
subroutine fuvrdhd(lu,coord) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    double precision dimension(3,4) :: coord
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvrdhd
subroutine fuvread(lu,visdat,number,count) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    real dimension(*) :: visdat
    integer :: number
    integer :: count
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvread
subroutine fuvwrite(lu,visdat,number,count) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    real dimension(*) :: visdat
    integer :: number
    integer :: count
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvwrite
subroutine fuvclose(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
end subroutine fuvclose
subroutine fuvrtrn1(lu,n,in,ppvisi,out,ppviso) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: n
    integer dimension(*) :: in
    integer :: ppvisi
    real dimension(*) :: out
    integer :: ppviso
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvrtrn1
subroutine fuvrtrn2(lu,n,in,mask,ppvisi,out,ppviso) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: n
    real dimension(*) :: in
    integer dimension(*) :: mask
    integer :: ppvisi
    real dimension(*) :: out
    integer :: ppviso
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvrtrn2
subroutine fuvclr(n,out,inc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real dimension(*) :: out
    integer :: inc
end subroutine fuvclr
subroutine fuvmltv1(n,a,na,b,nb,bscale,bzero,wtscal,blank) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    integer dimension(*) :: a
    integer :: na
    real dimension(*) :: b
    integer :: nb
    real :: bscale
    real :: bzero
    real :: wtscal
    integer :: blank
end subroutine fuvmltv1
subroutine fuvmltv2(n,a,na,b,nb,bscale,bzero,blank) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    integer dimension(*) :: a
    integer :: na
    real dimension(*) :: b
    integer :: nb
    real :: bscale
    real :: bzero
    integer :: blank
end subroutine fuvmltv2
subroutine fuvmltv3(n,a,mask,na,b,nb,bscale,bzero,wtscal,blank) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real dimension(*) :: a
    integer dimension(*) :: mask
    integer :: na
    real dimension(*) :: b
    integer :: nb
    real :: bscale
    real :: bzero
    real :: wtscal
    integer :: blank
end subroutine fuvmltv3
subroutine fuvmltv4(n,a,mask,na,b,nb,bscale,bzero,blank) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real dimension(*) :: a
    integer dimension(*) :: mask
    integer :: na
    real dimension(*) :: b
    integer :: nb
    real :: bscale
    real :: bzero
    integer :: blank
end subroutine fuvmltv4
subroutine fuvmltr1(n,bscale,bzero,a,na,b,nb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real :: bscale
    real :: bzero
    integer dimension(*) :: a
    integer :: na
    real dimension(*) :: b
    integer :: nb
end subroutine fuvmltr1
subroutine fuvmltr2(n,bscale1,a1,bscale2,a2,bzero,na,b,nb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real :: bscale1
    integer dimension(*) :: a1
    real :: bscale2
    integer dimension(*) :: a2
    real :: bzero
    integer :: na
    real dimension(*) :: b
    integer :: nb
end subroutine fuvmltr2
subroutine fuvmltr3(n,bscale,bzero,a,na,b,nb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real :: bscale
    real :: bzero
    real dimension(*) :: a
    integer :: na
    real dimension(*) :: b
    integer :: nb
end subroutine fuvmltr3
subroutine fuvmltr4(n,bscale1,a1,bscale2,a2,bzero,na,b,nb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: n
    real :: bscale1
    real dimension(*) :: a1
    real :: bscale2
    real dimension(*) :: a2
    real :: bzero
    integer :: na
    real dimension(*) :: b
    integer :: nb
end subroutine fuvmltr4
subroutine fuvgrand(lu,indx,rparam) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: indx
    double precision :: rparam
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fuvgrand
subroutine fuvfreq(lu,freq) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    double precision :: freq
end subroutine fuvfreq
subroutine fuvwt(lu,factor) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    real :: factor
end subroutine fuvwt
subroutine fuvget(lu,naxis,ncmplx,icmplx,npol,ipol,nfreq,ifreq,nif,iif) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: naxis
    integer :: ncmplx
    integer :: icmplx
    integer :: npol
    integer :: ipol
    integer :: nfreq
    integer :: ifreq
    integer :: nif
    integer :: iif
end subroutine fuvget
subroutine fuvtranr(data,tmp,n1,n2,n3,n4,ppvis,nvis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    real dimension(ppvis*nvis),depend(ppvis,nvis) :: data
    real dimension(ppvis*nvis),depend(ppvis,nvis) :: tmp
    integer :: n1
    integer :: n2
    integer :: n3
    integer :: n4
    integer :: ppvis
    integer :: nvis
end subroutine fuvtranr
subroutine fuvtrani(data,tmp,n1,n2,n3,n4,ppvis,nvis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer dimension(ppvis*nvis),depend(ppvis,nvis) :: data
    integer dimension(ppvis*nvis),depend(ppvis,nvis) :: tmp
    integer :: n1
    integer :: n2
    integer :: n3
    integer :: n4
    integer :: ppvis
    integer :: nvis
end subroutine fuvtrani
subroutine fitrdhdi(lu,key,out,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    integer :: out
    integer :: default_bn
end subroutine fitrdhdi
subroutine fitrdhdr(lu,key,out,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    real :: out
    real :: default_bn
end subroutine fitrdhdr
subroutine fitrdhdd(lu,key,out,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    double precision :: out
    double precision :: default_bn
end subroutine fitrdhdd
subroutine fitrdhda(lu,key,out,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    character*(*) :: out
    character*(*) :: default_bn
end subroutine fitrdhda
subroutine fitrdhdl(lu,key,out,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    logical :: out
    logical :: default_bn
end subroutine fitrdhdl
subroutine fitwrhdh(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    character*(*) :: value
end subroutine fitwrhdh
subroutine fitwrhda(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    character*(*) :: value
end subroutine fitwrhda
subroutine fitwrhdl(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    logical :: value
end subroutine fitwrhdl
subroutine fitwrhdi(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    integer :: value
end subroutine fitwrhdi
subroutine fitwrhdr(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    real :: value
end subroutine fitwrhdr
subroutine fitwrhdd(lu,key,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    double precision :: value
end subroutine fitwrhdd
subroutine fitopen(lu,name,status) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    character*(*) :: status
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fitopen
subroutine fitsize(lu,size_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: size_bn
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fitsize
function fithdini(lu,off) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer :: off
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    logical :: fithdini
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end function fithdini
subroutine fithdfin(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fithdfin
subroutine fitclose(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fitclose
subroutine fitcdio(lu,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: value
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fitcdio
subroutine fitsrch(lu,key,found) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: key
    logical :: found
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine fitsrch
subroutine ftabloc(lu,name,found) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    logical :: found
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabloc
subroutine ftabnxt(lu,name,found) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    logical :: found
end subroutine ftabnxt
subroutine ftabskip(lu,name,found) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    logical :: found
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabskip
subroutine ftabload(lu,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    logical :: ok
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabload
subroutine ftabform(string_bn,colform,colcnt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    character*(*) :: string_bn
    integer :: colform
    integer :: colcnt
end subroutine ftabform
subroutine ftabinfo(lu,name,type_bn,units,nrow,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    character*1 :: type_bn
    character*(*) :: units
    integer :: nrow
    integer :: nval
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabinfo
subroutine ftabgeti(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    integer dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabgeti
subroutine ftabgetr(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    real dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabgetr
subroutine ftabgetc(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    complex dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabgetc
subroutine ftabgetd(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    double precision dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabgetd
subroutine ftabgeta(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    character dimension(*,(*)) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabgeta
function ftabcoln(lu,name) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    integer :: ftabcoln
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end function ftabcoln
function ftabsize(form) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: form
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    integer :: ftabsize
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end function ftabsize
subroutine ftabdini(lu,ename) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: ename
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabdini
subroutine ftabdfin(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabdfin
subroutine ftabdef(lu,name,type_bn,units,nrow,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    character*1 :: type_bn
    character*(*) :: units
    integer :: nrow
    integer :: nval
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabdef
subroutine ftabputr(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    real dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabputr
subroutine ftabputd(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    double precision dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabputd
subroutine ftabputi(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    integer dimension(*) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabputi
subroutine ftabputa(lu,name,irow,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    character dimension(*,(*)) :: data
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabputa
subroutine ftabput(lu,name,irow,type_bn,ifirst,ilast,inc,offset,length,wide) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: name
    integer :: irow
    integer :: type_bn
    integer :: ifirst
    integer :: ilast
    integer :: inc
    integer :: offset
    integer :: length
    integer :: wide
    integer dimension(16,4) :: extoff
    integer dimension(4) :: nextoff
    integer dimension(4) :: extno
    integer dimension(4) :: rows
    integer dimension(4) :: cols
    integer dimension(4) :: width
    integer dimension(400,4) :: colform
    integer dimension(400,4) :: colcnt
    integer dimension(400,4) :: coloff
    character dimension(16,4,8) :: extname
    character dimension(400,4,32) :: coltype
    character dimension(400,4,16) :: colunits
    character*1480 :: carray
    double precision dimension(4) :: timoff
    integer :: curlu
    integer :: curcard
    integer dimension(4) :: item
    real dimension(4) :: bscale
    real dimension(4) :: bzero
    real dimension(10,4) :: scales1
    real dimension(10,4) :: scales2
    real dimension(10,4) :: zeros
    integer dimension(7,4) :: axes
    integer dimension(4) :: datoff
    integer dimension(4) :: hdoff
    integer dimension(4) :: datsize
    integer dimension(4) :: hdsize
    integer dimension(4) :: datbase
    integer dimension(4) :: pixbase
    integer dimension(4) :: byppix
    integer dimension(4) :: blankval
    integer dimension(4) :: ncards
    integer dimension(4) :: nranfile
    integer dimension(4) :: nranprog
    integer dimension(4) :: ncomplex
    integer dimension(10,4) :: indices1
    integer dimension(10,4) :: indices2
    integer dimension(4) :: visibs
    integer dimension(4) :: nts1
    integer dimension(4) :: nts2
    integer dimension(4) :: nts3
    integer dimension(4) :: pols
    integer dimension(4) :: freqs
    integer dimension(53248) :: array
    integer dimension(53248) :: arrayd
    real dimension(4) :: wtscal
    real dimension(53248) :: rarray
    real dimension(53248) :: rarrayd
    integer :: new
    logical dimension(4) :: opened
    real :: float
    common /fitsidx/ extoff,nextoff,extno
    common /fitstab/ rows,cols,width,colform,colcnt,coloff
    common /fitsidxc/ extname
    common /fitstabc/ coltype,colunits
    common /fitscomc/ carray
    common /fitscom/ timoff,curlu,curcard,item,bscale,bzero,scales1,scales2,zeros,axes,datoff,hdoff,datsize,hdsize,datbase,pixbase,byppix,blankval,ncards,nranfile,nranprog,ncomplex,indices1,indices2,visibs,nts1,nts2,nts3,pols,freqs,array,arrayd,wtscal,rarray,rarrayd,new,opened,float
end subroutine ftabput
subroutine fitdate(lu,keyw,jday) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: lu
    character*(*) :: keyw
    double precision :: jday
end subroutine fitdate
function fitcdate(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    character*(*) :: string_bn
    logical :: fitcdate
end function fitcdate
subroutine fitsnum(string_bn,k1,k2,ndigit) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    character*(*) :: string_bn
    integer :: k1
    integer :: k2
    integer :: ndigit
end subroutine fitsnum
subroutine fbasant(bl,ant1,ant2,config) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    real :: bl
    integer :: ant1
    integer :: ant2
    integer :: config
end subroutine fbasant
subroutine fantbas(i1,i2,config,bl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fitsio.f
    integer :: i1
    integer :: i2
    integer :: config
    real :: bl
end subroutine fantbas
subroutine fndaxnum(tinp,type_bn,axisname,axisnr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fndaxnum.f
    integer :: tinp
    character*(*) :: type_bn
    character*1 :: axisname
    integer :: axisnr
end subroutine fndaxnum
function fullname(filename) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fullname.f
    character*(*) :: filename
    character*(*) :: fullname
end function fullname
subroutine remext(filename) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fullname.f
    character*(*) :: filename
end subroutine remext
function rindx(string_bn,char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/fullname.f
    character*(*) :: string_bn
    character*(*) :: char_bn
    integer :: rindx
end function rindx
function gammp(a,x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: a
    real :: x
    real :: gammp
end function gammp
function gammq(a,x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: a
    real :: x
    real :: gammq
end function gammq
subroutine gser(a,x,gamser,gln) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: a
    real :: x
    real :: gamser
    real :: gln
end subroutine gser
subroutine gcf(a,x,gammcf,gln) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: a
    real :: x
    real :: gammcf
    real :: gln
end subroutine gcf
function gammln(xx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: xx
    real :: gammln
end function gammln
function errfun(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gamma.f
    real :: x
    real :: errfun
end function errfun
subroutine gaupar1(lin,bmaj2,bmin2,bpa2,bunit,bmaj,bmin,bpa,fac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    integer :: lin
    real :: bmaj2
    real :: bmin2
    real :: bpa2
    character*(*) :: bunit
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
end subroutine gaupar1
subroutine gaupar2(lin1,lin2,bunit,bmaj,bmin,bpa,fac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    integer :: lin1
    integer :: lin2
    character*(*) :: bunit
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
end subroutine gaupar2
subroutine gaupar(bunit1x,dx1,dy1,bmaj1,bmin1,bpa1,bunit2x,dx2,dy2,bmaj2,bmin2,bpa2,bunit,bmaj,bmin,bpa,fac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    character*(*) :: bunit1x
    double precision :: dx1
    double precision :: dy1
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    character*(*) :: bunit2x
    double precision :: dx2
    double precision :: dy2
    real :: bmaj2
    real :: bmin2
    real :: bpa2
    character*(*) :: bunit
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
end subroutine gaupar
subroutine gaufac(bmaj1,bmin1,bpa1,bmaj2,bmin2,bpa2,fac,bmaj,bmin,bpa,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    real :: bmaj2
    real :: bmin2
    real :: bpa2
    real :: fac
    real :: bmaj
    real :: bmin
    real :: bpa
    integer :: ifail
end subroutine gaufac
subroutine gaudpar1(lin,bmaj1,bmin1,bpa1,bmaj,bmin,bpa,fac,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    integer :: lin
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    integer :: ifail
end subroutine gaudpar1
subroutine gaudfac(bmaj1,bmin1,bpa1,bmaj2,bmin2,bpa2,fac,bmaj,bmin,bpa,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gaupar.f
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    real :: bmaj2
    real :: bmin2
    real :: bpa2
    real :: fac
    real :: bmaj
    real :: bmin
    real :: bpa
    integer :: ifail
end subroutine gaudfac
subroutine getbeam(lin,naxis,bunit,bmaj,bmin,omega,cbof) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/getbeam.f
    integer :: lin
    integer :: naxis
    character*(*) :: bunit
    real :: bmaj
    real :: bmin
    real :: omega
    real :: cbof
end subroutine getbeam
subroutine getfreq(tin,pix,ifax,freq,finc,ierr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/getfreq.f
    integer :: tin
    real :: pix
    integer :: ifax
    double precision :: freq
    double precision :: finc
    integer :: ierr
end subroutine getfreq
subroutine getpb(tno,name,pbfwhm) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/getpb.f
    integer :: tno
    character*(*) :: name
    real :: pbfwhm
end subroutine getpb
subroutine getxy(tno,fac,xyphase,count,mxant,nants) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/getxy.f
    integer :: tno
    real :: fac
    real dimension(mxant) :: xyphase
    integer dimension(mxant),depend(mxant) :: count
    integer optional,check(len(xyphase)>=mxant),depend(xyphase) :: mxant=len(xyphase)
    integer :: nants
end subroutine getxy
subroutine corrfun(func,phi,n,width,alpha) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/grid.f
    character*(*) :: func
    real dimension(n) :: phi
    integer optional,check(len(phi)>=n),depend(phi) :: n=len(phi)
    integer :: width
    real :: alpha
end subroutine corrfun
subroutine gcffun(func,phi,n,width,alpha) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/grid.f
    character*(*) :: func
    real dimension(n) :: phi
    integer optional,check(len(phi)>=n),depend(phi) :: n=len(phi)
    integer :: width
    real :: alpha
end subroutine gcffun
function spheroid(eta,m,alpha) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/grid.f
    real :: eta
    integer :: m
    real :: alpha
    real :: spheroid
end function spheroid
subroutine clearvis(nslot,nwide,nbl,vis,flg,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gsubs.f
    integer optional,check(shape(vis,0)==nslot),depend(vis) :: nslot=shape(vis,0)
    integer optional,check(shape(vis,1)==nwide),depend(vis) :: nwide=shape(vis,1)
    integer optional,check(shape(vis,2)==nbl),depend(vis) :: nbl=shape(vis,2)
    complex dimension(nslot,nwide,nbl) :: vis
    integer dimension(nslot,nwide,nbl),depend(nslot,nwide,nbl) :: flg
    complex :: value
end subroutine clearvis
subroutine setvis(nslot,nwide,nbl,vis,flg,i,j,k,data,flag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gsubs.f
    integer optional,check(shape(vis,0)==nslot),depend(vis) :: nslot=shape(vis,0)
    integer optional,check(shape(vis,1)==nwide),depend(vis) :: nwide=shape(vis,1)
    integer optional,check(shape(vis,2)==nbl),depend(vis) :: nbl=shape(vis,2)
    complex dimension(nslot,nwide,nbl) :: vis
    integer dimension(nslot,nwide,nbl),depend(nslot,nwide,nbl) :: flg
    integer :: i
    integer :: j
    integer :: k
    complex :: data
    logical :: flag
end subroutine setvis
subroutine getvis(nslot,nwide,nbl,vis,flg,i,j,k,data,flag,mode) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gsubs.f
    integer optional,check(shape(vis,0)==nslot),depend(vis) :: nslot=shape(vis,0)
    integer optional,check(shape(vis,1)==nwide),depend(vis) :: nwide=shape(vis,1)
    integer optional,check(shape(vis,2)==nbl),depend(vis) :: nbl=shape(vis,2)
    complex dimension(nslot,nwide,nbl) :: vis
    integer dimension(nslot,nwide,nbl),depend(nslot,nwide,nbl) :: flg
    integer :: i
    integer :: j
    integer :: k
    complex :: data
    logical :: flag
    integer :: mode
end subroutine getvis
subroutine c2pvis(nslot,nwide,nbl,vis,flg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gsubs.f
    integer optional,check(shape(vis,1)==nslot),depend(vis) :: nslot=shape(vis,1)
    integer optional,check(shape(vis,2)==nwide),depend(vis) :: nwide=shape(vis,2)
    integer optional,check(shape(vis,3)==nbl),depend(vis) :: nbl=shape(vis,3)
    real dimension(2,nslot,nwide,nbl) :: vis
    integer dimension(nslot,nwide,nbl),depend(nslot,nwide,nbl) :: flg
end subroutine c2pvis
subroutine clipvis(nslot,nwide,nbl,vis,flg,clip,cnt,sbmode) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/gsubs.f
    integer optional,check(shape(vis,1)==nslot),depend(vis) :: nslot=shape(vis,1)
    integer optional,check(shape(vis,2)==nwide),depend(vis) :: nwide=shape(vis,2)
    integer optional,check(shape(vis,3)==nbl),depend(vis) :: nbl=shape(vis,3)
    real dimension(2,nslot,nwide,nbl) :: vis
    integer dimension(nslot,nwide,nbl),depend(nslot,nwide,nbl) :: flg
    real :: clip
    integer :: cnt
    integer :: sbmode
end subroutine clipvis
subroutine hcoeffs(nsmth,coeffs) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer optional,check(len(coeffs)>=nsmth),depend(coeffs) :: nsmth=len(coeffs)
    real dimension(nsmth) :: coeffs
end subroutine hcoeffs
subroutine bico(n,k,c) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer :: n
    integer :: k
    real :: c
end subroutine bico
function factln(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer :: n
    real :: factln
end function factln
subroutine hannsm(nsmth,coeffs,npts,arr,work) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer optional,check(len(coeffs)>=nsmth),depend(coeffs) :: nsmth=len(coeffs)
    real dimension(nsmth) :: coeffs
    integer optional,check(len(arr)>=npts),depend(arr) :: npts=len(arr)
    real dimension(npts) :: arr
    real dimension(nsmth),depend(nsmth) :: work
end subroutine hannsm
subroutine bcoeffs(nsmth,coeffs) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer :: nsmth
    real dimension(*) :: coeffs
end subroutine bcoeffs
subroutine boxcarsm(nsmth,coeffs,npts,arr,work) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hann.f
    integer optional,check(len(coeffs)>=nsmth),depend(coeffs) :: nsmth=len(coeffs)
    real dimension(nsmth) :: coeffs
    integer optional,check(len(arr)>=npts),depend(arr) :: npts=len(arr)
    real dimension(npts) :: arr
    real dimension(nsmth),depend(nsmth) :: work
end subroutine boxcarsm
subroutine hdinit(mfs1,mosaic1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    logical :: mfs1
    logical :: mosaic1
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdinit
subroutine hdchk(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: tno
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdchk
subroutine hdfirst(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: tno
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdfirst
subroutine hddone(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: tno
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hddone
subroutine hdset(cellx,celly,ra0,dec0,proj,freq0) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    real :: cellx
    real :: celly
    double precision :: ra0
    double precision :: dec0
    character*(*) :: proj
    real :: freq0
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdset
subroutine hdcoobj(coobj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: coobj
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdcoobj
subroutine hddefsiz(nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: nx
    integer :: ny
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hddefsiz
subroutine hdwrite(tno,rms,nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hdtab.f
    integer :: tno
    real :: rms
    integer :: nx
    integer :: ny
    double precision :: crval1
    double precision :: crval2
    double precision :: crval3
    double precision :: cdelt1
    double precision :: cdelt2
    double precision :: cdelt3
    double precision :: obsra
    double precision :: obsdec
    double precision :: restfreq
    double precision :: obstime
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: epoch
    real :: vobs
    integer :: count
    integer :: naver
    integer :: nchan
    logical :: doinit
    logical :: mfs
    logical :: mosaic
    logical :: vchange
    logical :: vlinear
    logical :: rconst
    logical :: rchange
    logical :: xchange
    logical :: ychange
    logical :: schange
    character*12 :: ctype1
    character*12 :: ctype2
    character*12 :: ctype3
    character*12 :: ltype
    character*12 :: telescop
    character*16 :: source
    character*16 :: observer
    character*16 :: pbtype
    common /hdtab1/ crval1,crval2,crval3,cdelt1,cdelt2,cdelt3,obsra,obsdec,restfreq,obstime,lstart,lwidth,lstep,epoch,vobs,count,naver,nchan,doinit,mfs,mosaic,vchange,vlinear,rconst,rchange,xchange,ychange,schange
    common /hdtab2/ ctype1,ctype2,ctype3,ltype,telescop,source,observer,pbtype
end subroutine hdwrite
subroutine headcopy(tnoinp,tnoout,axnum,naxis,blc,trc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/headcopy.f
    integer :: tnoinp
    integer :: tnoout
    integer dimension(*) :: axnum
    integer :: naxis
    integer dimension(*) :: blc
    integer dimension(*) :: trc
end subroutine headcopy
subroutine hsorta(n,array,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(shape(array,0)==n),depend(array) :: n=shape(array,0)
    character dimension(n,(*)),intent(c) :: array
    integer dimension(n),depend(n) :: indx
end subroutine hsorta
subroutine hsorti(n,array,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    integer dimension(n) :: array
    integer dimension(n),depend(n) :: indx
end subroutine hsorti
subroutine hsortr(n,array,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    real dimension(n) :: array
    integer dimension(n),depend(n) :: indx
end subroutine hsortr
subroutine hsortd(n,array,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    double precision dimension(n) :: array
    integer dimension(n),depend(n) :: indx
end subroutine hsortd
subroutine hsortar(n,array,second,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(shape(array,0)==n),depend(array) :: n=shape(array,0)
    character dimension(n,(*)),intent(c) :: array
    real dimension(n),depend(n) :: second
    integer dimension(n),depend(n) :: indx
end subroutine hsortar
subroutine hsortad(n,array,second,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(shape(array,0)==n),depend(array) :: n=shape(array,0)
    character dimension(n,(*)),intent(c) :: array
    double precision dimension(n),depend(n) :: second
    integer dimension(n),depend(n) :: indx
end subroutine hsortad
subroutine hsortrr(n,array,second,indx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/hsort.f
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    real dimension(n) :: array
    real dimension(n),depend(n) :: second
    integer dimension(n),depend(n) :: indx
end subroutine hsortrr
subroutine imminmax(lun,naxis,nsize,rmin,rmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/imminmax.f
    integer :: lun
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    real :: rmin
    real :: rmax
end subroutine imminmax
subroutine incini(n,size_bn,dims) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/inc.f
    integer optional,check(len(size_bn)>=n),depend(size_bn) :: n=len(size_bn)
    integer dimension(n) :: size_bn
    integer dimension(n),depend(n) :: dims
end subroutine incini
function inc2more(n,size_bn,dims) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/inc.f
    integer optional,check(len(size_bn)>=n),depend(size_bn) :: n=len(size_bn)
    integer dimension(n) :: size_bn
    integer dimension(n),depend(n) :: dims
    logical :: inc2more
end function inc2more
function inc3more(n,size_bn,dims) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/inc.f
    integer optional,check(len(size_bn)>=n),depend(size_bn) :: n=len(size_bn)
    integer dimension(n) :: size_bn
    integer dimension(n),depend(n) :: dims
    logical :: inc3more
end function inc3more
function incnmore(n,ninc,size_bn,dims) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/inc.f
    integer optional,check(len(size_bn)>=n),depend(size_bn) :: n=len(size_bn)
    integer :: ninc
    integer dimension(n) :: size_bn
    integer dimension(n),depend(n) :: dims
    logical :: incnmore
end function incnmore
subroutine incoff(n,size1,size2,out) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/inc.f
    integer optional,check(len(size1)>=n),depend(size1) :: n=len(size1)
    integer dimension(n) :: size1
    integer dimension(n),depend(n) :: size2
    integer dimension(n),depend(n) :: out
end subroutine incoff
subroutine intpini(n1,n2,blctrc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/intpio.f
    integer :: n1
    integer :: n2
    real dimension(4) :: blctrc
    integer :: nx
    integer :: ny
    integer dimension(4) :: indices
    real dimension(65536,4) :: dat
    real dimension(65536,4) :: wx
    integer dimension(65536) :: indx
    real dimension(4) :: coord
    common /intpcomm/ nx,ny,indices,dat,wx,indx,coord
end subroutine intpini
subroutine intprini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/intpio.f
    integer :: nx
    integer :: ny
    integer dimension(4) :: indices
    real dimension(65536,4) :: dat
    real dimension(65536,4) :: wx
    integer dimension(65536) :: indx
    real dimension(4) :: coord
    common /intpcomm/ nx,ny,indices,dat,wx,indx,coord
end subroutine intprini
subroutine intprd(lu,jj,out,intpget) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/intpio.f
    use intprd__user__routines
    integer :: lu
    integer :: jj
    real dimension(*) :: out
    external intpget
    integer :: nx
    integer :: ny
    integer dimension(4) :: indices
    real dimension(65536,4) :: dat
    real dimension(65536,4) :: wx
    integer dimension(65536) :: indx
    real dimension(4) :: coord
    common /intpcomm/ nx,ny,indices,dat,wx,indx,coord
end subroutine intprd
subroutine intpolat(out,n,indx,z0,z1,z2,z3,wx0,wx1,wx2,wx3,wy0,wy1,wy2,wy3) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/intpio.f
    real dimension(n) :: out
    integer optional,check(len(out)>=n),depend(out) :: n=len(out)
    integer dimension(n),depend(n) :: indx
    real dimension(*) :: z0
    real dimension(*) :: z1
    real dimension(*) :: z2
    real dimension(*) :: z3
    real dimension(n),depend(n) :: wx0
    real dimension(n),depend(n) :: wx1
    real dimension(n),depend(n) :: wx2
    real dimension(n),depend(n) :: wx3
    real :: wy0
    real :: wy1
    real :: wy2
    real :: wy3
end subroutine intpolat
function iscoords(mode,coords,c1,c2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/iscoords.f
    character*(*) :: mode
    character*(*) :: coords
    real :: c1
    real :: c2
    logical :: iscoords
end function iscoords
function j1xbyx(arg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/j1xbyx.f
    real :: arg
    real :: j1xbyx
end function j1xbyx
function jinc(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/j1xbyx.f
    real :: x
    real :: jinc
end function jinc
function chat(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/j1xbyx.f
    real :: x
    real :: chat
end function chat
subroutine julcal(julian,year,month,day) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/julday.f
    double precision :: julian
    integer :: year
    integer :: month
    double precision :: day
end subroutine julcal
subroutine dayjul(calday,julian) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/julday.f
    character*(*) :: calday
    double precision :: julian
end subroutine dayjul
subroutine datepars(calday,a,z,alpha,delim,iarray,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/julday.f
    character*(*) :: calday
    integer :: a
    integer :: z
    logical :: alpha
    character*1 :: delim
    integer dimension(3) :: iarray
    logical :: ok
end subroutine datepars
function caljul(yy,mm,dd) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/julday.f
    integer :: yy
    integer :: mm
    double precision :: dd
    double precision :: caljul
end function caljul
subroutine keyini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyf.f
end subroutine keyini
subroutine mkeyf(key,value,nmax,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyf.f
    character*(*) :: key
    character dimension(nmax,(*)) :: value
    integer optional,check(shape(value,0)==nmax),depend(value) :: nmax=shape(value,0)
    integer :: n
end subroutine mkeyf
subroutine mkeya(key,value,nmax,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyf.f
    character*(*) :: key
    character dimension(nmax,(*)) :: value
    integer optional,check(shape(value,0)==nmax),depend(value) :: nmax=shape(value,0)
    integer :: n
end subroutine mkeya
subroutine keygline(line,nchan,lstart,lwidth,lstep,lflag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyline.f
    character*(*) :: line
    integer :: nchan
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
end subroutine keygline
subroutine keyline(line,nchan,lstart,lwidth,lstep) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyline.f
    character*(*) :: line
    integer :: nchan
    real :: lstart
    real :: lwidth
    real :: lstep
end subroutine keyline
subroutine keyrline(line,lstart,lwidth) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/keyline.f
    character*(*) :: line
    real :: lstart
    real :: lwidth
end subroutine keyrline
subroutine lagwt(wts,nwts,fac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lagwt.f
    real dimension(nwts) :: wts
    integer optional,check(len(wts)>=nwts),depend(wts) :: nwts=len(wts)
    real :: fac
    real dimension(4194304) :: memr
    common memr
end subroutine lagwt
subroutine exchange(n,coeff,indx,grid,m,zero,eval,a,convrg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lagwt.f
    integer optional,check((len(coeff)-1)>=n),depend(coeff) :: n=(len(coeff)-1)
    double precision dimension(n + 1) :: coeff
    integer dimension(n + 1),depend(n) :: indx
    double precision dimension(m,n),depend(n) :: grid
    integer optional,check(shape(grid,0)==m),depend(grid) :: m=shape(grid,0)
    integer dimension(n + 2),depend(n) :: zero
    double precision dimension(m),depend(m) :: eval
    double precision dimension(n + 1,n + 1),depend(n,n) :: a
    logical :: convrg
end subroutine exchange
subroutine initab(grid,ngrid,ncoeff,fac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lagwt.f
    double precision dimension(ngrid,ncoeff) :: grid
    integer optional,check(shape(grid,0)==ngrid),depend(grid) :: ngrid=shape(grid,0)
    integer optional,check(shape(grid,1)==ncoeff),depend(grid) :: ncoeff=shape(grid,1)
    real :: fac
end subroutine initab
subroutine linetype(unit,line,type_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/linetype.f
    integer :: unit
    real dimension(4) :: line
    character*(*) :: type_bn
end subroutine linetype
subroutine logopen(name,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    character*(*) :: name
    character*(*) :: flags
    integer :: nlines
    integer :: lu
    integer :: nopen
    logical :: query
    logical :: domore
    logical :: printer
    common /logcomm/ nlines,lu,nopen,query,domore,printer
end subroutine logopen
subroutine logwrit(line) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    character*(*) :: line
    integer :: nlines
    integer :: lu
    integer :: nopen
    logical :: query
    logical :: domore
    logical :: printer
    common /logcomm/ nlines,lu,nopen,query,domore,printer
end subroutine logwrit
subroutine logwrite(line,more) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    character*(*) :: line
    logical :: more
    integer :: nlines
    integer :: lu
    integer :: nopen
    logical :: query
    logical :: domore
    logical :: printer
    common /logcomm/ nlines,lu,nopen,query,domore,printer
end subroutine logwrite
subroutine logclose ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    integer :: nlines
    integer :: lu
    integer :: nopen
    logical :: query
    logical :: domore
    logical :: printer
    common /logcomm/ nlines,lu,nopen,query,domore,printer
end subroutine logclose
function lognopen(val) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    integer :: val
    integer :: lognopen
end function lognopen
subroutine loginput(name) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/log.f
    character*(*) :: name
end subroutine loginput
subroutine lsearchd(n,x,t,i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsearch.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    double precision dimension(n) :: x
    double precision :: t
    integer :: i
end subroutine lsearchd
subroutine lsf(noerr,n,x,y,w,m,b,sigm,sigb,chisq,q) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsf.f
    logical :: noerr
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real dimension(n) :: x
    real dimension(n),depend(n) :: y
    real dimension(n),depend(n) :: w
    real :: m
    real :: b
    real :: sigm
    real :: sigb
    real :: chisq
    real :: q
end subroutine lsf
subroutine lspoly(nn,l,x,y,w,z,coeff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lspoly.f
    integer :: nn
    integer optional,check(len(x)>=l),depend(x) :: l=len(x)
    real dimension(l) :: x
    real dimension(l),depend(l) :: y
    real dimension(l),depend(l) :: w
    real dimension(l),depend(l) :: z
    real dimension(9) :: coeff
end subroutine lspoly
subroutine legdr(x,p,np) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lspoly.f
    real :: x
    real dimension(np) :: p
    integer optional,check(len(p)>=np),depend(p) :: np=len(p)
end subroutine legdr
subroutine matinv(a,b,n,d,determ) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lspoly.f
    real dimension(d,n) :: a
    real dimension(n),depend(n) :: b
    integer optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
    integer optional,check(shape(a,0)==d),depend(a) :: d=shape(a,0)
    real :: determ
end subroutine matinv
function valpol(x,coeff,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lspoly.f
    real :: x
    real dimension(n) :: coeff
    integer optional,check(len(coeff)>=n),depend(coeff) :: n=len(coeff)
    real :: valpol
end function valpol
subroutine llsquini(x,b,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsqu1.f
    real dimension(n) :: x
    real dimension(n,n),depend(n,n) :: b
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
end subroutine llsquini
subroutine llsquacc(f,a,x,b,m,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsqu1.f
    real dimension(m) :: f
    real dimension(n,m),depend(m) :: a
    real dimension(n),depend(n) :: x
    real dimension(n,n),depend(n,n) :: b
    integer optional,check(len(f)>=m),depend(f) :: m=len(f)
    integer optional,check(shape(a,0)==n),depend(a) :: n=shape(a,0)
end subroutine llsquacc
subroutine llsqusol(x,b,n,ifail,pivot) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsqu1.f
    real dimension(n) :: x
    real dimension(n,n),depend(n,n) :: b
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    integer :: ifail
    real dimension(n),depend(n) :: pivot
end subroutine llsqusol
subroutine llsqu(f,a,n,m,c,ifail,b,pivot) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsqu.f
    real dimension(m) :: f
    real dimension(n,m),depend(m) :: a
    integer optional,check(shape(a,0)==n),depend(a) :: n=shape(a,0)
    integer optional,check(len(f)>=m),depend(f) :: m=len(f)
    real dimension(n),depend(n) :: c
    integer :: ifail
    real dimension(n,n),depend(n,n) :: b
    integer dimension(n),depend(n) :: pivot
end subroutine llsqu
subroutine linlsq(xarr,yarr,npnt,a1,b1,a2,b2,sigx,sigy,corr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/lsqu.f
    real dimension(*) :: xarr
    real dimension(*) :: yarr
    integer :: npnt
    real :: a1
    real :: b1
    real :: a2
    real :: b2
    real :: sigx
    real :: sigy
    real :: corr
end subroutine linlsq
subroutine mapfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapfin
subroutine mapini(mode1,tscr1,nvis1,npnt1,umax1,vmax1,offcorr1,totchan1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    character*(*) :: mode1
    integer :: tscr1
    integer :: nvis1
    integer :: npnt1
    real :: umax1
    real :: vmax1
    integer :: offcorr1
    integer :: totchan1
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapini
subroutine mapdef(nchan1,nx1,ny1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: nchan1
    integer :: nx1
    integer :: ny1
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapdef
subroutine mapscale(ichan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ichan
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    real dimension(4194304) :: memr
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
    common memr
end subroutine mapscale
subroutine mapper(ichan,pmap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ichan
    integer :: pmap
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    real dimension(4194304) :: memr
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
    common memr
end subroutine mapper
subroutine mapbufs(ichan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ichan
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapbufs
subroutine mapvsum(dat,n,sum) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    complex dimension(n) :: dat
    integer optional,check(len(dat)>=n),depend(dat) :: n=len(dat)
    real :: sum
end subroutine mapvsum
subroutine mapgrid(ichan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ichan
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    real dimension(4194304) :: memr
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
    common memr
end subroutine mapgrid
subroutine mapginit ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapginit
subroutine mapbuf(ichan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ichan
    character*8 :: mode
    integer :: num
    real dimension(2048) :: scale
    real dimension(2048) :: cgf
    real dimension(65536) :: xcorr
    real dimension(65536) :: ycorr
    real :: umax
    real :: vmax
    integer :: tscr
    integer :: nvis
    integer :: width
    integer :: ncgf
    integer :: offcorr
    integer :: chan1
    integer :: chan2
    integer :: npnt
    integer :: totchan
    integer dimension(5) :: nchan
    integer dimension(5) :: nx
    integer dimension(5) :: ny
    integer :: nt
    integer :: n1
    integer :: n2
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: nextra
    integer :: nxc
    integer :: nyc
    integer :: nbuff
    integer :: pbuff
    logical :: ginit
    common /mapcomc/ mode
    common /mapcom2/ num
    common /mapcom/ scale,cgf,xcorr,ycorr,umax,vmax,tscr,nvis,width,ncgf,offcorr,chan1,chan2,npnt,totchan,nchan,nx,ny,nt,n1,n2,nu,nv,u0,v0,nextra,nxc,nyc,nbuff,pbuff,ginit
end subroutine mapbuf
subroutine mapvis(tvis,cgf,ncgf,width,nvis,nstart,ncount,vissize,grd,nu,nv,npnt,u0,v0,n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: tvis
    real dimension(ncgf) :: cgf
    integer optional,check(len(cgf)>=ncgf),depend(cgf) :: ncgf=len(cgf)
    integer :: width
    integer :: nvis
    integer :: nstart
    integer optional,check(shape(grd,3)==ncount),depend(grd) :: ncount=shape(grd,3)
    integer :: vissize
    complex dimension(nu,nv,npnt,ncount) :: grd
    integer optional,check(shape(grd,0)==nu),depend(grd) :: nu=shape(grd,0)
    integer optional,check(shape(grd,1)==nv),depend(grd) :: nv=shape(grd,1)
    integer optional,check(shape(grd,2)==npnt),depend(grd) :: npnt=shape(grd,2)
    integer :: u0
    integer :: v0
    integer :: n1
    integer :: n2
end subroutine mapvis
subroutine mapit(vis,nvis,offset,ncount,npnt,size_bn,grd,nu,nv,u0,v0,n1,n2,cgf,ncgf,width,poff,qoff,goff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    real dimension(size_bn,nvis) :: vis
    integer optional,check(shape(vis,1)==nvis),depend(vis) :: nvis=shape(vis,1)
    integer :: offset
    integer optional,check(shape(grd,2)==ncount),depend(grd) :: ncount=shape(grd,2)
    integer optional,check(shape(grd,1)==npnt),depend(grd) :: npnt=shape(grd,1)
    integer optional,check(shape(vis,0)==size_bn),depend(vis) :: size_bn=shape(vis,0)
    complex dimension(nv*nu,npnt,ncount),depend(nu,nv) :: grd
    integer :: nu
    integer :: nv
    integer :: u0
    integer :: v0
    integer :: n1
    integer :: n2
    real dimension(ncgf) :: cgf
    integer optional,check(len(cgf)>=ncgf),depend(cgf) :: ncgf=len(cgf)
    integer :: width
    integer dimension(width*width),depend(width) :: poff
    integer dimension(width*width),depend(width) :: qoff
    integer dimension(width*width),depend(width) :: goff
end subroutine mapit
subroutine mapindx(ncgf,width,nu,poff,qoff,goff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: ncgf
    integer :: width
    integer :: nu
    integer dimension(width*width),depend(width) :: poff
    integer dimension(width*width),depend(width) :: qoff
    integer dimension(width*width),depend(width) :: goff
end subroutine mapindx
subroutine mapfft2(grd,inoff,outoff,nu,nv,nx,ny,n1,u0,v0,scale,xcorr,ycorr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    real dimension(*) :: grd
    integer :: inoff
    integer :: outoff
    integer :: nu
    integer :: nv
    integer optional,check(len(xcorr)>=nx),depend(xcorr) :: nx=len(xcorr)
    integer optional,check(len(ycorr)>=ny),depend(ycorr) :: ny=len(ycorr)
    integer :: n1
    integer :: u0
    integer :: v0
    real :: scale
    real dimension(nx) :: xcorr
    real dimension(ny) :: ycorr
end subroutine mapfft2
subroutine mapfft1(grd,nu,nv,u0,v0,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    complex dimension(nu,nv) :: grd
    integer optional,check(shape(grd,0)==nu),depend(grd) :: nu=shape(grd,0)
    integer optional,check(shape(grd,1)==nv),depend(grd) :: nv=shape(grd,1)
    integer :: u0
    integer :: v0
    integer :: n2
end subroutine mapfft1
subroutine mapslows(tscr,nvis,offcorr,vissize,sum) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: tscr
    integer :: nvis
    integer :: offcorr
    integer :: vissize
    real :: sum
end subroutine mapslows
subroutine mapslow(tscr,mode,nvis,offcorr,vissize,dat,wrk,map,nx,ny,scale) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mapper.f
    integer :: tscr
    character*(*) :: mode
    integer optional,check(shape(dat,1)==nvis),depend(dat) :: nvis=shape(dat,1)
    integer :: offcorr
    integer :: vissize
    real dimension(4,nvis) :: dat
    real dimension(nvis),depend(nvis) :: wrk
    real dimension(nx,ny) :: map
    integer optional,check(shape(map,0)==nx),depend(map) :: nx=shape(map,0)
    integer optional,check(shape(map,1)==ny),depend(map) :: ny=shape(map,1)
    real :: scale
end subroutine mapslow
function match(input,valid_strings,nr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*(*) :: input
    character*(*) :: valid_strings
    integer :: nr
    logical :: match
end function match
function matchnr(input,valid_strings) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*(*) :: input
    character*(*) :: valid_strings
    integer :: matchnr
end function matchnr
function matchdcd(input,valid_strings,nr,logsc,cum,abs) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*(*) :: input
    character*(*) :: valid_strings
    integer :: nr
    logical :: logsc
    logical :: cum
    logical :: abs
    logical :: matchdcd
end function matchdcd
function equals(input,valid_strings) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*(*) :: input
    character*(*) :: valid_strings
    logical :: equals
end function equals
function substr(string_bn,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*(*) :: string_bn
    integer :: n
    character*(*) :: substr
end function substr
function isupperf(char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*1 :: char_bn
    logical :: isupperf
end function isupperf
function islowerf(char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*1 :: char_bn
    logical :: islowerf
end function islowerf
function isdigitf(char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*1 :: char_bn
    logical :: isdigitf
end function isdigitf
function isalphaf(char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*1 :: char_bn
    logical :: isalphaf
end function isalphaf
function isalnumf(char_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/match.f
    character*1 :: char_bn
    logical :: isalnumf
end function isalnumf
function isrchfeq(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchfeq
end function isrchfeq
function isrchfne(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchfne
end function isrchfne
function isrchflt(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchflt
end function isrchflt
function isrchfle(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchfle
end function isrchfle
function isrchfgt(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchfgt
end function isrchfgt
function isrchfge(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer :: isrchfge
end function isrchfge
function isrchieq(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchieq
end function isrchieq
function isrchine(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchine
end function isrchine
function isrchilt(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchilt
end function isrchilt
function isrchile(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchile
end function isrchile
function isrchigt(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchigt
end function isrchigt
function isrchige(n,array,inc,target) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer :: isrchige
end function isrchige
function ismin(n,data,step) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: data
    integer :: step
    integer :: ismin
end function ismin
function ismax(n,data,step) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: data
    integer :: step
    integer :: ismax
end function ismax
subroutine whenfeq(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenfeq
subroutine whenfne(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenfne
subroutine whenflt(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenflt
subroutine whenfle(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenfle
subroutine whenfgt(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenfgt
subroutine whenfge(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    real dimension(*) :: array
    integer :: inc
    real :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenfge
subroutine whenieq(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenieq
subroutine whenine(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenine
subroutine whenilt(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenilt
subroutine whenile(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenile
subroutine whenigt(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenigt
subroutine whenige(n,array,inc,target,index_bn,nval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/math.f
    integer :: n
    integer dimension(*) :: array
    integer :: inc
    integer :: target
    integer dimension(*) :: index_bn
    integer :: nval
end subroutine whenige
subroutine mcinitfg(tno1,bmaj1,bmin1,bpa1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: tno1
    real :: bmaj1
    real :: bmin1
    real :: bpa1
    character*8 :: flags
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcinitfg
subroutine mcinitf(tno1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: tno1
    character*8 :: flags
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcinitf
subroutine mcplane(coobj,k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: coobj
    integer :: k
    character*8 :: flags
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcplane
subroutine mccnvl(in,nix,niy,out,nox,noy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(nix,niy) :: in
    integer optional,check(shape(in,0)==nix),depend(in) :: nix=shape(in,0)
    integer optional,check(shape(in,1)==niy),depend(in) :: niy=shape(in,1)
    real dimension(nox,noy) :: out
    integer optional,check(shape(out,0)==nox),depend(out) :: nox=shape(out,0)
    integer optional,check(shape(out,1)==noy),depend(out) :: noy=shape(out,1)
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mccnvl
subroutine mccnvl1(k,cnvl,pbobj,in,nix,niy,out,wts1,nox,noy,wts3,xoff,yoff,xlo,ylo,xhi,yhi,xmin,ymin,xmax,ymax,resid,pb,mnx,mny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: k
    integer :: cnvl
    integer :: pbobj
    real dimension(nix,niy) :: in
    integer optional,check(shape(in,0)==nix),depend(in) :: nix=shape(in,0)
    integer optional,check(shape(in,1)==niy),depend(in) :: niy=shape(in,1)
    real dimension(nox,noy) :: out
    real dimension(nox,noy),depend(nox,noy) :: wts1
    integer optional,check(shape(out,0)==nox),depend(out) :: nox=shape(out,0)
    integer optional,check(shape(out,1)==noy),depend(out) :: noy=shape(out,1)
    real :: wts3
    integer :: xoff
    integer :: yoff
    integer :: xlo
    integer :: ylo
    integer :: xhi
    integer :: yhi
    integer :: xmin
    integer :: ymin
    integer :: xmax
    integer :: ymax
    real dimension(mnx,mny) :: resid
    real dimension(mnx,mny),depend(mnx,mny) :: pb
    integer optional,check(shape(resid,0)==mnx),depend(resid) :: mnx=shape(resid,0)
    integer optional,check(shape(resid,1)==mny),depend(resid) :: mny=shape(resid,1)
end subroutine mccnvl1
subroutine mcplaner(coobj,k,runs,nruns,npoint) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: coobj
    integer :: k
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    integer :: npoint
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcplaner
subroutine mcgain(gain,npoint) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(npoint) :: gain
    integer optional,check(len(gain)>=npoint),depend(gain) :: npoint=len(gain)
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcgain
subroutine mcgn(gain,wt1,npoint) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(npoint) :: gain
    real dimension(npoint),depend(npoint) :: wt1
    integer optional,check(len(gain)>=npoint),depend(gain) :: npoint=len(gain)
end subroutine mcgn
subroutine mcsigma2(sigma2,npoint,noinvert) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(npoint) :: sigma2
    integer optional,check(len(sigma2)>=npoint),depend(sigma2) :: npoint=len(sigma2)
    logical :: noinvert
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcsigma2
subroutine mcsig(sigma2,wt1,wt2,npoint,noinvert) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(npoint) :: sigma2
    real dimension(npoint),depend(npoint) :: wt1
    real dimension(npoint),depend(npoint) :: wt2
    integer optional,check(len(sigma2)>=npoint),depend(sigma2) :: npoint=len(sigma2)
    logical :: noinvert
end subroutine mcsig
subroutine mccnvlr(in,runs,nruns,out) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(*) :: in
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
    real dimension(*) :: out
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mccnvlr
subroutine mccnvl2(k,cnvl,pbobj,in,wt1,wt3,xlo,ylo,xhi,yhi,xmin,ymin,xmax,ymax,n,out,runs,nruns,pb,resid,nscr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: k
    integer :: cnvl
    integer :: pbobj
    real dimension(n) :: in
    real dimension(n),depend(n) :: wt1
    real :: wt3
    integer :: xlo
    integer :: ylo
    integer :: xhi
    integer :: yhi
    integer :: xmin
    integer :: ymin
    integer :: xmax
    integer :: ymax
    integer optional,check(len(in)>=n),depend(in) :: n=len(in)
    real dimension(n),depend(n) :: out
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    real dimension(nscr) :: pb
    real dimension(nscr),depend(nscr) :: resid
    integer optional,check(len(pb)>=nscr),depend(pb) :: nscr=len(pb)
end subroutine mccnvl2
subroutine mcwt(out,wts,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    real dimension(n) :: out
    real dimension(n),depend(n) :: wts
    integer optional,check(len(out)>=n),depend(out) :: n=len(out)
end subroutine mcwt
subroutine mcextent(k,pbobj,n1,n2,n1d,n2d,xlo,ylo,xhi,yhi,xmin,ymin,xmax,ymax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: k
    integer :: pbobj
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: xlo
    integer :: ylo
    integer :: xhi
    integer :: yhi
    integer :: xmin
    integer :: ymin
    integer :: xmax
    integer :: ymax
end subroutine mcextent
subroutine mcinitc(k,cnvl1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: k
    integer :: cnvl1
    character*8 :: flags
    real dimension(4194304) :: memr
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common memr
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcinitc
subroutine mcgaus(tno,beam,n1,n2,ic,jc,bmaj,bmin,bpa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    integer :: tno
    real dimension(n1,n2) :: beam
    integer optional,check(shape(beam,0)==n1),depend(beam) :: n1=shape(beam,0)
    integer optional,check(shape(beam,1)==n2),depend(beam) :: n2=shape(beam,1)
    integer :: ic
    integer :: jc
    real :: bmaj
    real :: bmin
    real :: bpa
end subroutine mcgaus
subroutine mcfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mc.f
    character*8 :: flags
    real :: bmaj
    real :: bmin
    real :: bpa
    integer dimension(2048) :: cnvl
    integer :: tno
    integer :: npix
    integer :: npnt
    integer :: n1
    integer :: n2
    integer :: n1d
    integer :: n2d
    integer :: ic
    integer :: jc
    integer :: pwrk1
    integer :: pwrk2
    integer :: nwrk
    integer :: pwts1
    integer :: pwts2
    integer :: nwts
    logical :: mosini
    logical :: dogaus
    common /mccomc/ flags
    common /mccom/ bmaj,bmin,bpa,cnvl,tno,npix,npnt,n1,n2,n1d,n2d,ic,jc,pwrk1,pwrk2,nwrk,pwts1,pwts2,nwts,mosini,dogaus
end subroutine mcfin
subroutine medfit(x,y,n,a,b,dooff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/medfit.f
    real dimension(n) :: x
    real dimension(n),depend(n) :: y
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real :: a
    real :: b
    logical :: dooff
    real dimension(4194304) :: memr
    common memr
end subroutine medfit
function medfunc(a,b,x,y,tmp,n,dooff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/medfit.f
    real :: a
    real :: b
    real dimension(n) :: x
    real dimension(n),depend(n) :: y
    real dimension(n),depend(n) :: tmp
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    logical :: dooff
    real :: medfunc
end function medfunc
subroutine median(x,n,xmed) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/median.f
    real dimension(n) :: x
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real :: xmed
end subroutine median
function membuf() ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mem.f
    integer :: align
    integer dimension(4194304) :: data
    integer :: membuf
    common /memcom/ align
    common data
end function membuf
subroutine memini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mem.f
    integer :: align
    integer dimension(4194304) :: data
    common /memcom/ align
    common data
end subroutine memini
subroutine memalloc(pnt,size_bn,type_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mem.f
    integer :: pnt
    integer :: size_bn
    character*1 :: type_bn
    integer :: align
    integer dimension(4194304) :: data
    common /memcom/ align
    common data
end subroutine memalloc
subroutine memfree(pnt,size_bn,type_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mem.f
    integer :: pnt
    integer :: size_bn
    character*1 :: type_bn
    integer :: align
    integer dimension(4194304) :: data
    common /memcom/ align
    common data
end subroutine memfree
subroutine modpcomp(uvw,nchan,sfreq,vis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/modp.f
    double precision dimension(3) :: uvw
    integer optional,check(len(sfreq)>=nchan),depend(sfreq) :: nchan=len(sfreq)
    double precision dimension(nchan) :: sfreq
    complex dimension(nchan),depend(nchan) :: vis
    double precision dimension(3,10000) :: lmn
    double precision dimension(3) :: ucoeff
    double precision dimension(3) :: vcoeff
    double precision dimension(3) :: wcoeff
    double precision :: cosd
    double precision :: sind
    double precision :: freq0
    real dimension(2,10000) :: flux
    real dimension(10000) :: factor
    real :: inttime
    real dimension(100) :: wts
    integer :: nwts
    integer :: nsrc
    common /modpcom/ lmn,ucoeff,vcoeff,wcoeff,cosd,sind,freq0,flux,factor,inttime,wts,nwts,nsrc
end subroutine modpcomp
subroutine modpdeco(uvw,freq0,ucoeff,vcoeff,wcoeff,lmn,factor,nsrc,inttime,wts,nwts,cosd,sind) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/modp.f
    double precision dimension(3) :: uvw
    double precision :: freq0
    double precision dimension(3) :: ucoeff
    double precision dimension(3) :: vcoeff
    double precision dimension(3) :: wcoeff
    double precision dimension(3,nsrc) :: lmn
    real dimension(nsrc),depend(nsrc) :: factor
    integer optional,check(shape(lmn,1)==nsrc),depend(lmn) :: nsrc=shape(lmn,1)
    real :: inttime
    real dimension(nwts) :: wts
    integer optional,check(len(wts)>=nwts),depend(wts) :: nwts=len(wts)
    double precision :: cosd
    double precision :: sind
end subroutine modpdeco
subroutine modpini(tvis,tmod) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/modp.f
    integer :: tvis
    integer :: tmod
    double precision dimension(3,10000) :: lmn
    double precision dimension(3) :: ucoeff
    double precision dimension(3) :: vcoeff
    double precision dimension(3) :: wcoeff
    double precision :: cosd
    double precision :: sind
    double precision :: freq0
    real dimension(2,10000) :: flux
    real dimension(10000) :: factor
    real :: inttime
    real dimension(100) :: wts
    integer :: nwts
    integer :: nsrc
    common /modpcom/ lmn,ucoeff,vcoeff,wcoeff,cosd,sind,freq0,flux,factor,inttime,wts,nwts,nsrc
end subroutine modpini
subroutine modprd(tvis,line,k1,k2,lmn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/modp.f
    integer :: tvis
    character*(*) :: line
    integer :: k1
    integer :: k2
    double precision dimension(3) :: lmn
end subroutine modprd
subroutine moscini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine moscini
subroutine moscdone(lin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: lin
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine moscdone
subroutine moschk(lin,i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: lin
    integer :: i
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine moschk
function mosloc(tel1,radec1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    character*(*) :: tel1
    double precision dimension(2) :: radec1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    integer :: mosloc
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end function mosloc
function moshash(ll,mm,hashsize) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    double precision :: ll
    double precision :: mm
    integer :: hashsize
    integer :: moshash
end function moshash
subroutine moschar(ra1,dec1,npnt1,proj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    double precision :: ra1
    double precision :: dec1
    integer :: npnt1
    character*(*) :: proj
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine moschar
function mossolar(lin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: lin
    logical :: mossolar
end function mossolar
subroutine mosginit(coobj,nx,ny,nchan,mnx,mny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: coobj
    integer :: nx
    integer :: ny
    integer :: nchan
    integer :: mnx
    integer :: mny
    real dimension(4194304) :: memr
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    character dimension(2048,16) :: telescop
    common memr
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
    common /mostab2/ telescop
end subroutine mosginit
subroutine mosshift(coobj,npnt1,nchan,x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: coobj
    integer optional,check(shape(x,1)==npnt1),depend(x) :: npnt1=shape(x,1)
    integer optional,check(shape(x,0)==nchan),depend(x) :: nchan=shape(x,0)
    real dimension(nchan,npnt1) :: x
    real dimension(nchan,npnt1),depend(nchan,npnt1) :: y
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosshift
subroutine mossizer(nx2,ny2,x,y,npnt,nchan,mnx,mny,crpix1,crpix2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: nx2
    integer :: ny2
    real dimension(nchan,npnt) :: x
    real dimension(nchan,npnt),depend(nchan,npnt) :: y
    integer optional,check(shape(x,1)==npnt),depend(x) :: npnt=shape(x,1)
    integer optional,check(shape(x,0)==nchan),depend(x) :: nchan=shape(x,0)
    integer :: mnx
    integer :: mny
    double precision :: crpix1
    double precision :: crpix2
end subroutine mossizer
subroutine mosgeom(size_bn,n,nchan,npol,vis,wts) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer optional,check(shape(vis,0)==size_bn),depend(vis) :: size_bn=shape(vis,0)
    integer optional,check(shape(vis,1)==n),depend(vis) :: n=shape(vis,1)
    integer :: nchan
    integer :: npol
    complex dimension(size_bn,n) :: vis
    real dimension(n),depend(n) :: wts
    real dimension(4194304) :: memr
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    character dimension(2048,16) :: telescop
    common memr
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
    common /mostab2/ telescop
end subroutine mosgeom
subroutine mosgeom1(size_bn,n,nchan,npol,npnt,vis,wts,ucoeff,vcoeff,x,y,cdelt1,cdelt2,rms2,sumwt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer optional,check(shape(vis,0)==size_bn),depend(vis) :: size_bn=shape(vis,0)
    integer optional,check(shape(vis,1)==n),depend(vis) :: n=shape(vis,1)
    integer optional,check(shape(x,0)==nchan),depend(x) :: nchan=shape(x,0)
    integer :: npol
    integer optional,check(shape(ucoeff,1)==npnt),depend(ucoeff) :: npnt=shape(ucoeff,1)
    complex dimension(size_bn,n) :: vis
    real dimension(n),depend(n) :: wts
    double precision dimension(3,npnt) :: ucoeff
    double precision dimension(3,npnt),depend(npnt) :: vcoeff
    real dimension(nchan,npnt),depend(npnt) :: x
    real dimension(nchan,npnt),depend(nchan,npnt) :: y
    double precision :: cdelt1
    double precision :: cdelt2
    real dimension(npnt),depend(npnt) :: rms2
    real dimension(npnt),depend(npnt) :: sumwt
end subroutine mosgeom1
subroutine mosload(tno,npnt1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: tno
    integer :: npnt1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosload
subroutine mosprint ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosprint
subroutine mosinit(nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: nx
    integer :: ny
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosinit
subroutine mosget(i,ra1,dec1,rms1,pbtype1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: i
    double precision :: ra1
    double precision :: dec1
    real :: rms1
    character*(*) :: pbtype1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosget
subroutine mosset(i,ra1,dec1,rms1,pbtype1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: i
    double precision :: ra1
    double precision :: dec1
    real :: rms1
    character*(*) :: pbtype1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosset
subroutine mosgetn(nx2d,ny2d,npnt1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: nx2d
    integer :: ny2d
    integer :: npnt1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosgetn
subroutine mossetn(nx2d,ny2d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: nx2d
    integer :: ny2d
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mossetn
subroutine mossave(tno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: tno
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mossave
subroutine mosgfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosgfin
subroutine mosmini(coobj,chan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: coobj
    real :: chan
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosmini
subroutine mosaicer(in,out,nx,ny,npnt1,mnx,mny,runs,maxruns,nruns) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny,npnt1) :: in
    real dimension(mnx,mny) :: out
    integer optional,check(shape(in,0)==nx),depend(in) :: nx=shape(in,0)
    integer optional,check(shape(in,1)==ny),depend(in) :: ny=shape(in,1)
    integer optional,check(shape(in,2)==npnt1),depend(in) :: npnt1=shape(in,2)
    integer optional,check(shape(out,0)==mnx),depend(out) :: mnx=shape(out,0)
    integer optional,check(shape(out,1)==mny),depend(out) :: mny=shape(out,1)
    integer dimension(3,maxruns) :: runs
    integer optional,check(shape(runs,1)==maxruns),depend(runs) :: maxruns=shape(runs,1)
    integer :: nruns
    real dimension(4194304) :: memr
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    character dimension(2048,16) :: telescop
    common memr
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
    common /mostab2/ telescop
end subroutine mosaicer
subroutine mosaic1(in,out,nx,ny,mnx,mny,runs,maxruns,nruns) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny) :: in
    real dimension(mnx,mny) :: out
    integer optional,check(shape(in,0)==nx),depend(in) :: nx=shape(in,0)
    integer optional,check(shape(in,1)==ny),depend(in) :: ny=shape(in,1)
    integer optional,check(shape(out,0)==mnx),depend(out) :: mnx=shape(out,0)
    integer optional,check(shape(out,1)==mny),depend(out) :: mny=shape(out,1)
    integer dimension(3,maxruns) :: runs
    integer optional,check(shape(runs,1)==maxruns),depend(runs) :: maxruns=shape(runs,1)
    integer :: nruns
end subroutine mosaic1
subroutine mosaic2(in,out,wts,nx,ny,npnt,mnx,mny,rms2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny,npnt) :: in
    real dimension(mnx,mny) :: out
    real dimension(mnx,mny),depend(mnx,mny) :: wts
    integer optional,check(shape(in,0)==nx),depend(in) :: nx=shape(in,0)
    integer optional,check(shape(in,1)==ny),depend(in) :: ny=shape(in,1)
    integer optional,check(shape(in,2)==npnt),depend(in) :: npnt=shape(in,2)
    integer optional,check(shape(out,0)==mnx),depend(out) :: mnx=shape(out,0)
    integer optional,check(shape(out,1)==mny),depend(out) :: mny=shape(out,1)
    real dimension(npnt),depend(npnt) :: rms2
end subroutine mosaic2
subroutine mosruns(wts,nx,ny,runs,maxruns,nruns) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny) :: wts
    integer optional,check(shape(wts,0)==nx),depend(wts) :: nx=shape(wts,0)
    integer optional,check(shape(wts,1)==ny),depend(wts) :: ny=shape(wts,1)
    integer dimension(3,maxruns) :: runs
    integer optional,check(shape(runs,1)==maxruns),depend(runs) :: maxruns=shape(runs,1)
    integer :: nruns
end subroutine mosruns
subroutine moswt(rms2,npnt,out,wts,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(npnt) :: rms2
    integer optional,check(len(rms2)>=npnt),depend(rms2) :: npnt=len(rms2)
    real dimension(n) :: out
    real dimension(n),depend(n) :: wts
    integer optional,check(len(out)>=n),depend(out) :: n=len(out)
end subroutine moswt
subroutine mosmfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosmfin
subroutine mosval(coobj,in,x,gain,rms) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: coobj
    character*(*) :: in
    double precision dimension(*) :: x
    real :: gain
    real :: rms
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosval
subroutine mospnt(coobj,in,x,beams,psf,nx,ny,npnt1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: coobj
    character*(*) :: in
    double precision dimension(*) :: x
    real dimension(nx,ny,npnt1) :: beams
    real dimension(nx,ny),depend(nx,ny) :: psf
    integer optional,check(shape(beams,0)==nx),depend(beams) :: nx=shape(beams,0)
    integer optional,check(shape(beams,1)==ny),depend(beams) :: ny=shape(beams,1)
    integer optional,check(shape(beams,2)==npnt1),depend(beams) :: npnt1=shape(beams,2)
    real dimension(4194304) :: memr
    common memr
end subroutine mospnt
subroutine mospnt1(beams,psf,wts,nx,ny,npnt1,xr,yr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny,npnt1) :: beams
    real dimension(nx,ny),depend(nx,ny) :: psf
    real dimension(nx,ny),depend(nx,ny) :: wts
    integer optional,check(shape(beams,0)==nx),depend(beams) :: nx=shape(beams,0)
    integer optional,check(shape(beams,1)==ny),depend(beams) :: ny=shape(beams,1)
    integer optional,check(shape(beams,2)==npnt1),depend(beams) :: npnt1=shape(beams,2)
    integer :: xr
    integer :: yr
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mospnt1
function moswt3(k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: k
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    real :: moswt3
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end function moswt3
function mospb(k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: k
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    integer :: mospb
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end function mospb
subroutine mosext(k,imin,imax,jmin,jmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: k
    integer :: imin
    integer :: imax
    integer :: jmin
    integer :: jmax
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosext
subroutine moswts(wt1,wt2,nx,ny,xoff,yoff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(nx,ny) :: wt1
    real dimension(nx,ny),depend(nx,ny) :: wt2
    integer optional,check(shape(wt1,0)==nx),depend(wt1) :: nx=shape(wt1,0)
    integer optional,check(shape(wt1,1)==ny),depend(wt1) :: ny=shape(wt1,1)
    integer :: xoff
    integer :: yoff
end subroutine moswts
subroutine moswtsr(runs,nruns,wt1,wt2,npix) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer dimension(3,nruns) :: runs
    integer optional,check(shape(runs,1)==nruns),depend(runs) :: nruns=shape(runs,1)
    real dimension(npix) :: wt1
    real dimension(npix),depend(npix) :: wt2
    integer optional,check(len(wt1)>=npix),depend(wt1) :: npix=len(wt1)
end subroutine moswtsr
subroutine moswtc(wt1,wt2,npix) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    real dimension(npix) :: wt1
    real dimension(npix),depend(npix) :: wt2
    integer optional,check(len(wt1)>=npix),depend(wt1) :: npix=len(wt1)
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine moswtc
subroutine mosradec(k,ra,dec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: k
    double precision :: ra
    double precision :: dec
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosradec
subroutine mosinfo(nx2d,ny2d,npnt1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/mostab.f
    integer :: nx2d
    integer :: ny2d
    integer :: npnt1
    character dimension(2048,16) :: telescop
    double precision dimension(2,2048) :: llmm
    double precision dimension(2,2048) :: radec
    double precision dimension(2) :: radec0
    double precision :: cdelt1
    double precision :: cdelt2
    double precision dimension(3,2048) :: ucoeff
    double precision dimension(3,2048) :: vcoeff
    real dimension(2048) :: rms2
    real dimension(2048) :: sumwt
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    integer :: pntno
    integer :: npnt
    integer :: nxy
    integer :: px
    integer :: py
    integer :: vpntupd
    integer :: hashsize
    integer dimension(8193) :: hash
    integer :: nx2
    integer :: ny2
    integer :: coref
    integer dimension(2048) :: pbobj
    logical :: solar
    logical :: doinit
    common /mostab2/ telescop
    common /mostab1/ llmm,radec,radec0,cdelt1,cdelt2,ucoeff,vcoeff,rms2,sumwt,x0,y0,pntno,npnt,nxy,px,py,vpntupd,hashsize,hash,nx2,ny2,coref,pbobj,solar,doinit
end subroutine mosinfo
subroutine nearest(x,y,indx,n,ip,mnmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nearest.f
    real dimension(n) :: x
    real dimension(n),depend(n) :: y
    integer dimension(n),depend(n) :: indx
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    integer dimension(n,5),depend(n) :: ip
    real dimension(n,5),depend(n) :: mnmax
end subroutine nearest
function nextpow2(k) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nextpow2.f
    integer :: k
    integer :: nextpow2
end function nextpow2
subroutine nllsqu(n,m,x,h,itmax,eps1,eps2,der,ifail,func,derive,f,fp,dx,dfdx,aa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nllsqu.f
    use nllsqu__user__routines
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    integer optional,check(len(f)>=m),depend(f) :: m=len(f)
    real dimension(n) :: x
    real dimension(n),depend(n) :: h
    integer :: itmax
    real :: eps1
    real :: eps2
    logical :: der
    integer :: ifail
    external func
    external derive
    real dimension(m) :: f
    real dimension(m),depend(m) :: fp
    real dimension(n),depend(n) :: dx
    real dimension(n,m),depend(n,m) :: dfdx
    real dimension(n,n),depend(n,n) :: aa
end subroutine nllsqu
subroutine randset(seed) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/noise.f
    integer :: seed
end subroutine randset
subroutine uniform(data,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/noise.f
    real dimension(n) :: data
    integer optional,check(len(data)>=n),depend(data) :: n=len(data)
end subroutine uniform
subroutine gaus(data,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/noise.f
    real dimension(n) :: data
    integer optional,check(len(data)>=n),depend(data) :: n=len(data)
end subroutine gaus
function enorm(n,x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real dimension(n) :: x
    real :: enorm
end function enorm
subroutine fdjac2(fcn,m,n,x,fvec,fjac,ldfjac,iflag,epsfcn,wa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    use fdjac2__user__routines
    external fcn
    integer optional,check(len(fvec)>=m),depend(fvec) :: m=len(fvec)
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real dimension(n) :: x
    real dimension(m) :: fvec
    real dimension(ldfjac,n),depend(n) :: fjac
    integer optional,check(shape(fjac,0)==ldfjac),depend(fjac) :: ldfjac=shape(fjac,0)
    integer :: iflag
    real :: epsfcn
    real dimension(m),depend(m) :: wa
end subroutine fdjac2
function ipmpar(i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer :: i
    integer :: ipmpar
end function ipmpar
subroutine lmpar(n,r,ldr,ipvt,diag,qtb,delta,par,x,sdiag,wa1,wa2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer optional,check(shape(r,1)==n),depend(r) :: n=shape(r,1)
    real dimension(ldr,n) :: r
    integer optional,check(shape(r,0)==ldr),depend(r) :: ldr=shape(r,0)
    integer dimension(n),depend(n) :: ipvt
    real dimension(n),depend(n) :: diag
    real dimension(n),depend(n) :: qtb
    real :: delta
    real :: par
    real dimension(n),depend(n) :: x
    real dimension(n),depend(n) :: sdiag
    real dimension(n),depend(n) :: wa1
    real dimension(n),depend(n) :: wa2
end subroutine lmpar
subroutine qrfac(m,n,a,lda,pivot,ipvt,lipvt,rdiag,acnorm,wa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer :: m
    integer optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
    real dimension(lda,n) :: a
    integer optional,check(shape(a,0)==lda),depend(a) :: lda=shape(a,0)
    logical :: pivot
    integer dimension(lipvt) :: ipvt
    integer optional,check(len(ipvt)>=lipvt),depend(ipvt) :: lipvt=len(ipvt)
    real dimension(n),depend(n) :: rdiag
    real dimension(n),depend(n) :: acnorm
    real dimension(n),depend(n) :: wa
end subroutine qrfac
subroutine qrsolv(n,r,ldr,ipvt,diag,qtb,x,sdiag,wa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer optional,check(shape(r,1)==n),depend(r) :: n=shape(r,1)
    real dimension(ldr,n) :: r
    integer optional,check(shape(r,0)==ldr),depend(r) :: ldr=shape(r,0)
    integer dimension(n),depend(n) :: ipvt
    real dimension(n),depend(n) :: diag
    real dimension(n),depend(n) :: qtb
    real dimension(n),depend(n) :: x
    real dimension(n),depend(n) :: sdiag
    real dimension(n),depend(n) :: wa
end subroutine qrsolv
function spmpar(i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer :: i
    real :: spmpar
end function spmpar
subroutine krout(mo,n,m,a,ka,b,kb,ierr,index_bn,temp) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer :: mo
    integer optional,check(shape(a,1)==n),depend(a) :: n=shape(a,1)
    integer :: m
    real dimension(ka,n) :: a
    integer optional,check(shape(a,0)==ka),depend(a) :: ka=shape(a,0)
    real dimension(*) :: b
    integer :: kb
    integer :: ierr
    integer dimension(*) :: index_bn
    real dimension(*) :: temp
end subroutine krout
function gamma(a) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: a
    real :: gamma
end function gamma
subroutine besj(x,alpha,n,y,nz) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: x
    real :: alpha
    integer optional,check(len(y)>=n),depend(y) :: n=len(y)
    real dimension(n) :: y
    integer :: nz
end subroutine besj
subroutine asjy(funjy,x,fnu,flgjy,in,tol,elim,y,wk,iflw) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    use asjy__user__routines
    external funjy
    real :: x
    real :: fnu
    real :: flgjy
    integer :: in
    real :: tol
    real :: elim
    real dimension(*) :: y
    real dimension(*) :: wk
    integer :: iflw
end subroutine asjy
subroutine jairy(x,rx,c,ai,dai) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: x
    real :: rx
    real :: c
    real :: ai
    real :: dai
end subroutine jairy
function glog(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: x
    double precision :: glog
end function glog
function exparg(l) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    integer :: l
    real :: exparg
end function exparg
function gamln(a) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: a
    real :: gamln
end function gamln
function gamln1(a) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/nswc.f
    real :: a
    real :: gamln1
end function gamln1
subroutine numbpg(mm,pp,form,string_bn,nc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/numbpg.f
    integer :: mm
    integer :: pp
    integer :: form
    character*(*) :: string_bn
    integer :: nc
end subroutine numbpg
subroutine obsprint ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/obspar.f
    character dimension(256,24) :: parname
    double precision dimension(256) :: parvalue
    integer :: nparms
    common /obsparc/ parname
    common /obsparv/ parvalue,nparms
end subroutine obsprint
subroutine obspar(observ,object,value,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/obspar.f
    character*(*) :: observ
    character*(*) :: object
    double precision :: value
    logical :: ok
    character dimension(256,24) :: parname
    double precision dimension(256) :: parvalue
    integer :: nparms
    common /obsparc/ parname
    common /obsparv/ parvalue,nparms
end subroutine obspar
subroutine obsinit ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/obspar.f
    character dimension(256,24) :: parname
    double precision dimension(256) :: parvalue
    integer :: nparms
    common /obsparc/ parname
    common /obsparv/ parvalue,nparms
end subroutine obsinit
subroutine obsad(name,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/obspar.f
    character*(*) :: name
    double precision :: value
    character dimension(256,24) :: parname
    double precision dimension(256) :: parvalue
    integer :: nparms
    common /obsparc/ parname
    common /obsparv/ parvalue,nparms
end subroutine obsad
function obsdms(s,deg,m,sec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/obspar.f
    integer :: s
    integer :: deg
    integer :: m
    real :: sec
    double precision :: obsdms
end function obsdms
subroutine ofmapp ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmapp
subroutine ofmcol(jofm,imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    integer :: jofm
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmcol
subroutine ofmcmp ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmcmp
subroutine ofmevl ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    double precision dimension(256) :: x1d
    double precision dimension(256,3) :: y1d
    double precision dimension(256,3) :: a
    double precision dimension(256,3) :: b
    double precision dimension(256,3) :: c
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
    common /splco/ x1d,y1d,a,b,c
end subroutine ofmevl
subroutine ofmfit ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    double precision dimension(256) :: x1d
    double precision dimension(256,3) :: y1d
    double precision dimension(256,3) :: a
    double precision dimension(256,3) :: b
    double precision dimension(256,3) :: c
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
    common /splco/ x1d,y1d,a,b,c
end subroutine ofmfit
subroutine ofmheq(npix,image,mask,imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    integer optional,check(len(image)>=npix),depend(image) :: npix=len(image)
    real dimension(npix) :: image
    integer dimension(npix),depend(npix) :: mask
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmheq
subroutine ofmini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmini
subroutine ofml1m ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofml1m
subroutine ofmlin(x,y,domsg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: x
    real :: y
    logical :: domsg
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmlin
subroutine ofmlnf ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmlnf
subroutine ofmlog(imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmlog
subroutine ofmmod(tfvpu,nu,image,mask,imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(4) :: tfvpu
    integer :: nu
    real dimension(*) :: image
    integer dimension(*) :: mask
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmmod
subroutine ofmrep ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmrep
subroutine ofmrev ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmrev
subroutine ofmrsf ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmrsf
subroutine ofmsel(imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmsel
subroutine ofmsqr(imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmsqr
subroutine ofmtabw(imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtabw
subroutine ofmtba(imin,imax,dofcc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    logical :: dofcc
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtba
subroutine ofmtbb ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtbb
subroutine ofmtbw ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtbw
subroutine ofmtcc(imin,imax,dofcc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: imin
    real :: imax
    logical :: dofcc
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtcc
subroutine ofmtfe ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtfe
subroutine ofmtff(npix,image,mask,imin,imax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    integer :: npix
    real dimension(*) :: image
    integer dimension(*) :: mask
    real :: imin
    real :: imax
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtff
subroutine ofmtfp ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmtfp
subroutine ofmuin(x,y,cch) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/ofm.f
    real :: x
    real :: y
    character*1 :: cch
    real dimension(256,3) :: ofmb
    real dimension(256,3) :: ofma
    real dimension(256,3) :: ofms
    real dimension(256,3) :: savact
    real dimension(256,3) :: savsav
    integer dimension(256) :: fid
    integer :: iofm
    integer :: na
    integer :: ci1
    integer :: ci2
    integer :: ci0
    logical :: fidun
    logical :: tfpic
    logical :: hedun
    logical :: ofmdun
    logical :: nocurs
    real dimension(256) :: xt
    real dimension(256) :: yt
    real dimension(4) :: tfvp
    real :: tfcs
    character*4 :: tflab
    common /ofm1/ ofmb,ofma,ofms,savact,savsav
    common /ofm2/ fid,iofm,na,ci1,ci2,ci0
    common /ofm3/ fidun,tfpic,hedun,ofmdun,nocurs
    common /ofm4/ xt,yt,tfvp,tfcs
    common /ofm5/ tflab
end subroutine ofmuin
subroutine options(key,opts,present,nopt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/options.f
    character*(*) :: key
    character dimension(nopt,(*)) :: opts
    logical dimension(nopt),depend(nopt) :: present
    integer optional,check(shape(opts,0)==nopt),depend(opts) :: nopt=shape(opts,0)
end subroutine options
subroutine keymatch(key,ntype,types,maxout,out,nout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/options.f
    character*(*) :: key
    integer optional,check(shape(types,0)==ntype),depend(types) :: ntype=shape(types,0)
    character dimension(ntype,(*)),intent(c) :: types
    integer optional,check(shape(out,0)==maxout),depend(out) :: maxout=shape(out,0)
    character dimension(maxout,(*)),intent(c) :: out
    integer :: nout
end subroutine keymatch
subroutine pblist ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pblist
subroutine pbread(tno,pbtype) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: tno
    character*(*) :: pbtype
end subroutine pbread
subroutine pbwrite(tno,pbtype) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: tno
    character*(*) :: pbtype
end subroutine pbwrite
subroutine pbencode(pbtype,type_bn,val) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    character*(*) :: pbtype
    character*(*) :: type_bn
    real :: val
end subroutine pbencode
subroutine pbinit(pbobj,pbtype,coobj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    character*(*) :: pbtype
    integer :: coobj
end subroutine pbinit
subroutine pbinitc(pbobj,type_bn,coobj,in,x1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    character*(*) :: type_bn
    integer :: coobj
    character*(*) :: in
    double precision dimension(*) :: x1
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbinitc
subroutine pbfin(pbobj) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbfin
function pbget(pbobj,x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    real :: x
    real :: y
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    real :: pbget
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end function pbget
function pbder(pbobj,x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    real :: x
    real :: y
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    real :: pbder
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end function pbder
subroutine pbinfo(pbobj,pbfwhmd,cutoffd,maxradd) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    real :: pbfwhmd
    real :: cutoffd
    real :: maxradd
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbinfo
subroutine pbextent(pbobj,x,y,xext,yext) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    integer :: pbobj
    real :: x
    real :: y
    real :: xext
    real :: yext
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbextent
subroutine pbfirst ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbfirst
subroutine pbadd(tel,f1d,f2d,pbfwhmd,cutoffd,pbtyped,nval,vals,descripd) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    character*(*) :: tel
    real :: f1d
    real :: f2d
    real :: pbfwhmd
    real :: cutoffd
    integer :: pbtyped
    integer optional,check(len(vals)>=nval),depend(vals) :: nval=len(vals)
    real dimension(nval) :: vals
    character*(*) :: descripd
    character dimension(32,16) :: pb
    character dimension(32,32) :: descrip
    real dimension(32) :: f1
    real dimension(32) :: f2
    real dimension(32) :: cutoff
    real dimension(32) :: pbfwhm
    real dimension(64) :: pbvals
    real dimension(2048) :: xc
    real dimension(2048) :: yc
    real dimension(2048) :: x0
    real dimension(2048) :: y0
    real dimension(2048) :: fwhm
    real dimension(2048) :: freq
    real dimension(32) :: maxrad
    integer dimension(32) :: pbtype
    integer :: npbvals
    integer :: npb
    integer dimension(32) :: indx
    integer dimension(32) :: nvals
    integer :: pbhead
    integer dimension(2048) :: pnt
    common /pb1comc/ pb,descrip
    common /pb1com/ f1,f2,cutoff,pbfwhm,pbvals,xc,yc,x0,y0,fwhm,freq,maxrad,pbtype,npbvals,npb,indx,nvals,pbhead,pnt
end subroutine pbadd
subroutine pbradp(doinv,cutoff,coeff,ncoeff,pbfwhm,maxrad) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pb.f
    logical :: doinv
    real :: cutoff
    real dimension(ncoeff) :: coeff
    integer optional,check(len(coeff)>=ncoeff),depend(coeff) :: ncoeff=len(coeff)
    real :: pbfwhm
    real :: maxrad
end subroutine pbradp
subroutine pcvtinit(coobj1d,coobj2d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pcvt.f
    integer :: coobj1d
    integer :: coobj2d
    double precision :: obstime
    integer :: ira
    integer :: idec
    integer :: naxis
    integer :: coobj1
    integer :: coobj2
    integer :: galeq
    logical :: dofk45z
    logical :: dofk54z
    common /pcvtcom/ obstime,ira,idec,naxis,coobj1,coobj2,galeq,dofk45z,dofk54z
end subroutine pcvtinit
subroutine pcvt(x1,x2,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pcvt.f
    double precision dimension(n) :: x1
    double precision dimension(n),depend(n) :: x2
    integer optional,check(len(x1)>=n),depend(x1) :: n=len(x1)
    double precision :: obstime
    integer :: ira
    integer :: idec
    integer :: naxis
    integer :: coobj1
    integer :: coobj2
    integer :: galeq
    logical :: dofk45z
    logical :: dofk54z
    common /pcvtcom/ obstime,ira,idec,naxis,coobj1,coobj2,galeq,dofk45z,dofk54z
end subroutine pcvt
subroutine pghline(npts,x,y,gapfac) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pghline.f
    integer optional,check(len(x)>=npts),depend(x) :: npts=len(x)
    real dimension(npts) :: x
    real dimension(npts),depend(npts) :: y
    real :: gapfac
end subroutine pghline
subroutine pkfit(z,width,zmax,pix,c) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pkfit.f
    real dimension(width,width) :: z
    integer optional,check(shape(z,0)==width),depend(z) :: width=shape(z,0)
    real :: zmax
    double precision dimension(2) :: pix
    real dimension(6) :: c
end subroutine pkfit
subroutine getplane(lu,run,nrun,xoff,yoff,nx,ny,out,maxout,nout) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plane.f
    integer :: lu
    integer dimension(3,nrun + 1) :: run
    integer optional,check((shape(run,1)-1)==nrun),depend(run) :: nrun=(shape(run,1)-1)
    integer :: xoff
    integer :: yoff
    integer :: nx
    integer :: ny
    real dimension(maxout) :: out
    integer optional,check(len(out)>=maxout),depend(out) :: maxout=len(out)
    integer :: nout
end subroutine getplane
subroutine putplane(lu,run,nrun,xoff,yoff,nx,ny,in,nin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plane.f
    integer :: lu
    integer dimension(3,nrun + 1) :: run
    integer optional,check((shape(run,1)-1)==nrun),depend(run) :: nrun=(shape(run,1)-1)
    integer :: xoff
    integer :: yoff
    integer :: nx
    integer :: ny
    real dimension(nin) :: in
    integer optional,check(len(in)>=nin),depend(in) :: nin=len(in)
end subroutine putplane
subroutine putruns(lout,runs,nruns,xoff,yoff,nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plane.f
    integer :: lout
    integer dimension(3,nruns + 1) :: runs
    integer optional,check((shape(runs,1)-1)==nruns),depend(runs) :: nruns=(shape(runs,1)-1)
    integer :: xoff
    integer :: yoff
    integer :: nx
    integer :: ny
end subroutine putruns
function pltbs(iplanet,freq) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    integer :: iplanet
    real :: freq
    real :: pltbs
end function pltbs
function pltbintp(freq,planet,np) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    real :: freq
    real dimension(2,np) :: planet
    integer optional,check(shape(planet,1)==np),depend(planet) :: np=shape(planet,1)
    real :: pltbintp
end function pltbintp
function pllook(source) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    character*(*) :: source
    integer :: pllook
end function pllook
subroutine plradec(jday,np,ra,dec) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    double precision :: jday
    integer :: np
    double precision :: ra
    double precision :: dec
end subroutine plradec
subroutine plpar(jday,np,sub,dist,bmaj,bmin,bpa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    double precision :: jday
    integer :: np
    double precision dimension(3) :: sub
    double precision :: dist
    real :: bmaj
    real :: bmin
    real :: bpa
end subroutine plpar
subroutine plphyeph(jday,np,alpha,delta,w,r,f) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    double precision :: jday
    integer :: np
    double precision :: alpha
    double precision :: delta
    double precision :: w
    double precision :: r
    double precision :: f
end subroutine plphyeph
subroutine plobseph(date,np,pv,jstat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/planet.f
    double precision :: date
    integer :: np
    double precision dimension(6) :: pv
    integer :: jstat
end subroutine plobseph
subroutine plotone(nvals,x,dim1,dim2,npls,yarr,xlab,ylab,glab,device) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plotone.f
    integer :: nvals
    real dimension(dim2) :: x
    integer optional,check(shape(yarr,0)==dim1),depend(yarr) :: dim1=shape(yarr,0)
    integer optional,check(len(x)>=dim2),depend(x) :: dim2=len(x)
    integer :: npls
    real dimension(dim1,dim2),depend(dim2) :: yarr
    character*(*) :: xlab
    character*(*) :: ylab
    character*(*) :: glab
    character*(*) :: device
end subroutine plotone
subroutine plinit(dist1,plant,erad1,prad1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    real :: dist1
    integer :: plant
    real :: erad1
    real :: prad1
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end subroutine plinit
subroutine plfake(dist1,lambda,de) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    real :: dist1
    real :: lambda
    real :: de
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end subroutine plfake
subroutine plcomm ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end subroutine plcomm
subroutine pluvw(uv,time,uvw,a,b,fac1,smatidx,bpa1,sub) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    double precision dimension(2) :: uv
    double precision :: time
    double precision dimension(3) :: uvw
    real :: a
    real :: b
    real :: fac1
    integer :: smatidx
    real :: bpa1
    double precision dimension(3) :: sub
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end subroutine pluvw
function plshadow(idx,x,y,z) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    integer :: idx
    real :: x
    real :: y
    real :: z
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    logical :: plshadow
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end function plshadow
function plint(x,y,z) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/plproc.f
    real :: x
    real :: y
    real :: z
    double precision dimension(3) :: ldash
    double precision dimension(3) :: mdash
    double precision dimension(3) :: n0
    double precision :: meandist
    double precision :: dist
    double precision :: tprev
    double precision dimension(3,3,1000000) :: smat
    real :: erad
    real :: prad
    real :: bmaj
    real :: bmin
    real :: bpa
    real :: fac
    real :: cospa
    real :: sinpa
    integer :: planet
    integer :: nmat
    logical :: fake
    logical :: plint
    common /plprocom/ ldash,mdash,n0,meandist,dist,tprev,smat,erad,prad,bmaj,bmin,bpa,fac,cospa,sinpa,planet,nmat,fake
end function plint
function polspara(code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pols.f
    integer :: code
    logical :: polspara
end function polspara
function polsc2p(code) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pols.f
    integer :: code
    character*(*) :: polsc2p
end function polsc2p
function polsp2c(mnemo) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/pols.f
    character*(*) :: mnemo
    integer :: polsp2c
end function polsp2c
subroutine rpolyzr(a,nn,roots,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/poly.f
    real dimension(nn + 1) :: a
    integer optional,check((len(a)-1)>=nn),depend(a) :: nn=(len(a)-1)
    complex dimension(nn),depend(nn) :: roots
    integer :: ifail
end subroutine rpolyzr
subroutine rpolsolr(tol,x,y,r,rx,j,jx,a,n,sat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/poly.f
    real :: tol
    real :: x
    real :: y
    real :: r
    real :: rx
    real :: j
    real :: jx
    real dimension(n + 1) :: a
    integer optional,check((len(a)-1)>=n),depend(a) :: n=(len(a)-1)
    logical :: sat
end subroutine rpolsolr
subroutine dpolyzr(a,nn,roots,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/poly.f
    double precision dimension(nn + 1) :: a
    integer optional,check((len(a)-1)>=nn),depend(a) :: nn=(len(a)-1)
    complex dimension(nn),depend(nn) :: roots
    integer :: ifail
end subroutine dpolyzr
subroutine dpolsolr(tol,x,y,r,rx,j,jx,a,n,sat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/poly.f
    double precision :: tol
    double precision :: x
    double precision :: y
    double precision :: r
    double precision :: rx
    double precision :: j
    double precision :: jx
    double precision dimension(n + 1) :: a
    integer optional,check((len(a)-1)>=n),depend(a) :: n=(len(a)-1)
    logical :: sat
end subroutine dpolsolr
subroutine squares(count,x,y,pmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/polyfit.f
    integer :: count
    real dimension(*) :: x
    real dimension(*) :: y
    integer :: pmax
    double precision dimension(11) :: xsums
    double precision dimension(6) :: ysums
    double precision dimension(60,60) :: lsq
    double precision dimension(60) :: lsqb
    common /lsq/ xsums,ysums,lsq,lsqb
end subroutine squares
subroutine lsqfill(count,x,y,pmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/polyfit.f
    integer :: count
    real dimension(*) :: x
    real dimension(*) :: y
    integer :: pmax
    double precision dimension(11) :: xsums
    double precision dimension(6) :: ysums
    double precision dimension(60,60) :: lsq
    double precision dimension(60) :: lsqb
    common /lsq/ xsums,ysums,lsq,lsqb
end subroutine lsqfill
subroutine solve(nlsq) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/polyfit.f
    integer :: nlsq
    double precision dimension(11) :: xsums
    double precision dimension(6) :: ysums
    double precision dimension(60,60) :: lsq
    double precision dimension(60) :: lsqb
    common /lsq/ xsums,ysums,lsq,lsqb
end subroutine solve
subroutine lsqsault(count,x,y,pmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/polyfit.f
    integer :: count
    real dimension(*) :: x
    real dimension(*) :: y
    integer :: pmax
    double precision dimension(11) :: xsums
    double precision dimension(6) :: ysums
    double precision dimension(60,60) :: lsq
    double precision dimension(60) :: lsqb
    common /lsq/ xsums,ysums,lsq,lsqb
end subroutine lsqsault
subroutine powell(x,e,n,f,escale,icon,mxiter,calcfx,w,maxfun,ifail) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/powell.f
    use powell__user__routines
    real dimension(n) :: x
    real dimension(n),depend(n) :: e
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real :: f
    real :: escale
    integer :: icon
    integer :: mxiter
    external calcfx
    real dimension(n*(n+3)),depend(n) :: w
    integer :: maxfun
    integer :: ifail
end subroutine powell
function prime(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/prime.f
    integer :: n
    integer :: prime
end function prime
subroutine promptf(value,format,prmpt,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/promptf.f
    real :: value
    character*(*) :: format
    character*(*) :: prmpt
    real :: default_bn
end subroutine promptf
subroutine r8tyxc(nxtlt,nthpo,lengt,cs,c0,c1,c2,c3,c4,c5,c6,c7) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/r8tyx.f
    integer :: nxtlt
    integer :: nthpo
    integer :: lengt
    complex dimension(*) :: cs
    complex dimension(*) :: c0
    complex dimension(*) :: c1
    complex dimension(*) :: c2
    complex dimension(*) :: c3
    complex dimension(*) :: c4
    complex dimension(*) :: c5
    complex dimension(*) :: c6
    complex dimension(*) :: c7
end subroutine r8tyxc
subroutine opacget(nfreq,freq,el,t0,p0,h0,fac,tb) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/refract.f
    integer optional,check(len(freq)>=nfreq),depend(freq) :: nfreq=len(freq)
    real dimension(nfreq) :: freq
    real :: el
    real :: t0
    real :: p0
    real :: h0
    real dimension(nfreq),depend(nfreq) :: fac
    real dimension(nfreq),depend(nfreq) :: tb
end subroutine opacget
subroutine refract(t,pdry,pvap,z,n,nu,t0,el,tb,tau,ldry,lvap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/refract.f
    real dimension(n) :: t
    real dimension(n),depend(n) :: pdry
    real dimension(n),depend(n) :: pvap
    real dimension(n),depend(n) :: z
    integer optional,check(len(t)>=n),depend(t) :: n=len(t)
    real :: nu
    real :: t0
    real :: el
    real :: tb
    real :: tau
    real :: ldry
    real :: lvap
end subroutine refract
function pvapsat(t) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/refract.f
    real :: t
    real :: pvapsat
end function pvapsat
function refdry(nu,t,pdry,pvap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/refract.f
    real :: nu
    real :: t
    real :: pdry
    real :: pvap
    complex :: refdry
end function refdry
function refvap(nu,t,pdry,pvap) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/refract.f
    real :: nu
    real :: t
    real :: pdry
    real :: pvap
    complex :: refvap
end function refvap
subroutine restini(lbeam,nx1,ny1,fwhm1,fwhm2,pa,mode) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    integer :: lbeam
    integer :: nx1
    integer :: ny1
    real :: fwhm1
    real :: fwhm2
    real :: pa
    character*(*) :: mode
    integer :: nx
    integer :: ny
    integer :: cnvl1
    integer :: cnvl2
    logical :: mosaic
    logical :: mfs
    real dimension(4194304) :: memr
    common /restcom/ nx,ny,cnvl1,cnvl2,mosaic,mfs
    common memr
end subroutine restini
subroutine restget(lbeam,data,n1,n2,nx,ny,ic,jc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    integer :: lbeam
    real dimension(nx,ny) :: data
    integer :: n1
    integer :: n2
    integer optional,check(shape(data,0)==nx),depend(data) :: nx=shape(data,0)
    integer optional,check(shape(data,1)==ny),depend(data) :: ny=shape(data,1)
    integer :: ic
    integer :: jc
end subroutine restget
subroutine restdiff(lbeam,gaus,n1,n2,nx,ny,ic,jc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    integer :: lbeam
    real dimension(nx,ny) :: gaus
    integer :: n1
    integer :: n2
    integer optional,check(shape(gaus,0)==nx),depend(gaus) :: nx=shape(gaus,0)
    integer optional,check(shape(gaus,1)==ny),depend(gaus) :: ny=shape(gaus,1)
    integer :: ic
    integer :: jc
end subroutine restdiff
subroutine restgaus(gaus,nx,ny,x0,y0,bmaj,bmin,bpa) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    real dimension(nx,ny) :: gaus
    integer optional,check(shape(gaus,0)==nx),depend(gaus) :: nx=shape(gaus,0)
    integer optional,check(shape(gaus,1)==ny),depend(gaus) :: ny=shape(gaus,1)
    integer :: x0
    integer :: y0
    real :: bmaj
    real :: bmin
    real :: bpa
end subroutine restgaus
subroutine restore(lmodel,i,out) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    integer :: lmodel
    integer :: i
    real dimension(*) :: out
    integer :: nx
    integer :: ny
    integer :: cnvl1
    integer :: cnvl2
    logical :: mosaic
    logical :: mfs
    real dimension(4194304) :: memr
    common /restcom/ nx,ny,cnvl1,cnvl2,mosaic,mfs
    common memr
end subroutine restore
subroutine restadd(out,dat,nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    real dimension(nx,ny) :: out
    real dimension(nx,ny),depend(nx,ny) :: dat
    integer optional,check(shape(out,0)==nx),depend(out) :: nx=shape(out,0)
    integer optional,check(shape(out,1)==ny),depend(out) :: ny=shape(out,1)
end subroutine restadd
subroutine restfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rest.f
    integer :: nx
    integer :: ny
    integer :: cnvl1
    integer :: cnvl2
    logical :: mosaic
    logical :: mfs
    common /restcom/ nx,ny,cnvl1,cnvl2,mosaic,mfs
end subroutine restfin
function rtfmt(string_bn,vals,nvals) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/rtfmt.f
    character*(*) :: string_bn
    integer dimension(*) :: vals
    integer :: nvals
    character*(*) :: rtfmt
end function rtfmt
function selprobe(sels,object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    real dimension(*) :: sels
    character*(*) :: object
    double precision :: value
    logical :: selprobe
end function selprobe
subroutine selinput(key,sels,maxsels) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    character*(*) :: key
    real dimension(maxsels) :: sels
    integer optional,check(len(sels)>=maxsels),depend(sels) :: maxsels=len(sels)
end subroutine selinput
subroutine selfudge(rval,dval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    real :: rval
    double precision :: dval
end subroutine selfudge
subroutine selbug(spec,message) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    character*(*) :: spec
    character*(*) :: message
end subroutine selbug
subroutine seldcde(spec,k1,k2,vals,n,nmax,format) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    character*(*) :: spec
    integer :: k1
    integer :: k2
    double precision dimension(nmax) :: vals
    integer :: n
    integer optional,check(len(vals)>=nmax),depend(vals) :: nmax=len(vals)
    character*(*) :: format
end subroutine seldcde
subroutine selapply(tno,sels,select) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/select.f
    integer :: tno
    real dimension(*) :: sels
    logical :: select
end subroutine selapply
subroutine sfetra(slon,slat,inv,sys) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sfetra.f
    real :: slon
    real :: slat
    logical :: inv
    integer :: sys
end subroutine sfetra
subroutine dsfetra(lon,lat,inv,sys) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sfetra.f
    double precision :: lon
    double precision :: lat
    logical :: inv
    integer :: sys
end subroutine dsfetra
function shadowed(tno,ants,limit) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/shadowed.f
    integer :: tno
    double precision :: ants
    real :: limit
    integer :: shadowed
end function shadowed
function si(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/si.f
    double precision :: x
    double precision :: si
end function si
function cin(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/si.f
    double precision :: x
    double precision :: cin
end function cin
function dsinc(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/si.f
    double precision :: x
    double precision :: dsinc
end function dsinc
subroutine gload(tin,t0,time,jtime,g,nfeeds,ntau,nants,nsols,sels,maxgains,maxtimes) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sma_fsubs.f
    integer :: tin
    double precision :: t0
    real dimension(maxtimes) :: time
    double precision dimension(6145) :: jtime
    complex dimension(maxgains) :: g
    integer :: nfeeds
    integer :: ntau
    integer :: nants
    integer :: nsols
    real dimension(*) :: sels
    integer optional,check(len(g)>=maxgains),depend(g) :: maxgains=len(g)
    integer optional,check(len(time)>=maxtimes),depend(time) :: maxtimes=len(time)
end subroutine gload
subroutine gncvt(in,out,nfeeds,ntau,ngains) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sma_fsubs.f
    complex dimension(nfeeds+ntau,ngains),depend(nfeeds,ntau) :: in
    complex dimension(nfeeds,ngains),depend(ngains) :: out
    integer optional,check(shape(out,0)==nfeeds),depend(out) :: nfeeds=shape(out,0)
    integer :: ntau
    integer optional,check(shape(in,1)==ngains),depend(in) :: ngains=shape(in,1)
end subroutine gncvt
subroutine antgsel(sels,g,nfeeds,ntau,nants,nsols) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sma_fsubs.f
    real dimension(*) :: sels
    complex dimension(nfeeds+ntau,nants,nsols),depend(nfeeds,ntau) :: g
    integer :: nfeeds
    integer :: ntau
    integer optional,check(shape(g,1)==nants),depend(g) :: nants=shape(g,1)
    integer optional,check(shape(g,2)==nsols),depend(g) :: nsols=shape(g,2)
end subroutine antgsel
subroutine sortr(array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sort.f
    real dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
end subroutine sortr
subroutine sortd(array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sort.f
    double precision dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
end subroutine sortd
subroutine sorti(array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sort.f
    integer dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
end subroutine sorti
subroutine split(array,i,j,pivot,part) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sort.f
    integer dimension(*) :: array
    integer :: i
    integer :: j
    integer :: pivot
    integer :: part
end subroutine split
subroutine insert(array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sort.f
    integer dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
end subroutine insert
subroutine sortidxd(n,x,idx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sortidx.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    double precision dimension(n) :: x
    integer dimension(n),depend(n) :: idx
end subroutine sortidxd
subroutine sortidxr(n,x,idx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sortidx.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real dimension(n) :: x
    integer dimension(n),depend(n) :: idx
end subroutine sortidxr
subroutine sortidxi(n,x,idx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sortidx.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    integer dimension(n) :: x
    integer dimension(n),depend(n) :: idx
end subroutine sortidxi
subroutine sortidxa(n,x,idx) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/sortidx.f
    integer optional,check(shape(x,0)==n),depend(x) :: n=shape(x,0)
    character dimension(n,(*)),intent(c) :: x
    integer dimension(n),depend(n) :: idx
end subroutine sortidxa
subroutine spaxsw(lh,switch_bn,ctype,cdelt,crval) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/spaxsw.f
    integer :: lh
    character*(*) :: switch_bn
    character*(*) :: ctype
    double precision :: cdelt
    double precision :: crval
end subroutine spaxsw
subroutine spline(n,x,y,b,c,d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/spline.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    double precision dimension(n) :: x
    double precision dimension(n),depend(n) :: y
    double precision dimension(n),depend(n) :: b
    double precision dimension(n),depend(n) :: c
    double precision dimension(n),depend(n) :: d
end subroutine spline
function seval(n,u,x,y,b,c,d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/spline.f
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    double precision :: u
    double precision dimension(n) :: x
    double precision dimension(n),depend(n) :: y
    double precision dimension(n),depend(n) :: b
    double precision dimension(n),depend(n) :: c
    double precision dimension(n),depend(n) :: d
    double precision :: seval
end function seval
subroutine strfd(val,fmt,string_bn,il) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/strf.f
    double precision :: val
    character*(*) :: fmt
    character*(*) :: string_bn
    integer :: il
end subroutine strfd
subroutine strfr(val,fmt,string_bn,il) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/strf.f
    real :: val
    character*(*) :: fmt
    character*(*) :: string_bn
    integer :: il
end subroutine strfr
subroutine strfi(ival,fmt,string_bn,il) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/strf.f
    integer :: ival
    character*(*) :: fmt
    character*(*) :: string_bn
    integer :: il
end subroutine strfi
function stcat(a,b) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: a
    character*(*) :: b
    character*(*) :: stcat
end function stcat
function streal(a,b) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    real :: a
    character*(*) :: b
    character*(*) :: streal
end function streal
subroutine atoif(string_bn,result,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: result
    logical :: ok
end subroutine atoif
subroutine atorf(string_bn,result,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    real :: result
    logical :: ok
end subroutine atorf
subroutine atodf(string_bn,d,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    double precision :: d
    logical :: ok
end subroutine atodf
subroutine matodf(string_bn,array,n,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    double precision dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    logical :: ok
end subroutine matodf
subroutine matorf(string_bn,array,n,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    real dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    logical :: ok
end subroutine matorf
function itoaf(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    integer :: n
    character*(*) :: itoaf
end function itoaf
subroutine mitoaf(array,n,line,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    integer dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    character*(*) :: line
    integer :: length
end subroutine mitoaf
function dtoaf(value,form,nsf) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    double precision :: value
    integer :: form
    integer :: nsf
    character*(*) :: dtoaf
end function dtoaf
function rtoaf(value,form,nsf) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    real :: value
    integer :: form
    integer :: nsf
    character*(*) :: rtoaf
end function rtoaf
subroutine gettok(string_bn,k1,k2,token,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: k1
    integer :: k2
    character*(*) :: token
    integer :: length
end subroutine gettok
subroutine getfield(string_bn,k1,k2,token,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: k1
    integer :: k2
    character*(*) :: token
    integer :: length
end subroutine getfield
subroutine spanchar(string_bn,k1,k2,c) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: k1
    integer :: k2
    character*1 :: c
end subroutine spanchar
subroutine scanchar(string_bn,k1,k2,c) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: k1
    integer :: k2
    character*1 :: c
end subroutine scanchar
function len1(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: len1
end function len1
subroutine lcase(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
end subroutine lcase
subroutine ucase(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
end subroutine ucase
subroutine padleft(string_bn,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    integer :: length
end subroutine padleft
function indek(string_bn,substrng) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/string.f
    character*(*) :: string_bn
    character*(*) :: substrng
    integer :: indek
end function indek
subroutine calget(filename,source,freq,delfreq,day,deldate,flux,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: filename
    character*(*) :: source
    real :: freq
    real :: delfreq
    double precision :: day
    real :: deldate
    real :: flux
    integer :: iostat
end subroutine calget
subroutine tabflux(filename,source,freq,delfreq,day,delday,flux,rms,line,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: filename
    character*(*) :: source
    real :: freq
    real :: delfreq
    double precision :: day
    real :: delday
    real :: flux
    real :: rms
    integer :: line
    integer :: iostat
end subroutine tabflux
subroutine tabload(name,source,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: name
    character*(*) :: source
    integer :: iostat
end subroutine tabload
subroutine car2bim(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: string_bn
end subroutine car2bim
subroutine tabfind(source,freq,deltnu,day,deltime,flux,rms,line,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: source
    real :: freq
    real :: deltnu
    double precision :: day
    real :: deltime
    real :: flux
    real :: rms
    integer :: line
    integer :: iostat
    double precision dimension(10000) :: tdate
    integer :: ntab
    integer dimension(10000) :: tindex
    integer :: naliases
    real dimension(10000) :: tfreq
    real dimension(10000) :: tflux
    real dimension(10000) :: trms
    character dimension(10000,40) :: tsource
    character dimension(10000,40) :: root
    character dimension(10000,40) :: alias
    common /tcomd/ tdate
    common /tcomi/ ntab,tindex,naliases
    common /tcomr/ tfreq,tflux,trms
    common /tcoms/ tsource,root,alias
end subroutine tabfind
subroutine tabparse(string_bn,length,source,nentry) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: string_bn
    integer :: length
    character*(*) :: source
    integer :: nentry
    double precision dimension(10000) :: tdate
    integer :: ntab
    integer dimension(10000) :: tindex
    integer :: naliases
    real dimension(10000) :: tfreq
    real dimension(10000) :: tflux
    real dimension(10000) :: trms
    character dimension(10000,40) :: tsource
    character dimension(10000,40) :: root
    character dimension(10000,40) :: alias
    common /tcomd/ tdate
    common /tcomi/ ntab,tindex,naliases
    common /tcomr/ tfreq,tflux,trms
    common /tcoms/ tsource,root,alias
end subroutine tabparse
subroutine aliases(source,srcalias) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: source
    character*(*) :: srcalias
    double precision dimension(10000) :: tdate
    integer :: ntab
    integer dimension(10000) :: tindex
    integer :: naliases
    real dimension(10000) :: tfreq
    real dimension(10000) :: tflux
    real dimension(10000) :: trms
    character dimension(10000,40) :: tsource
    character dimension(10000,40) :: root
    character dimension(10000,40) :: alias
    common /tcomd/ tdate
    common /tcomi/ ntab,tindex,naliases
    common /tcomr/ tfreq,tflux,trms
    common /tcoms/ tsource,root,alias
end subroutine aliases
subroutine addalias(anchor,srcalias) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: anchor
    character*(*) :: srcalias
    double precision dimension(10000) :: tdate
    integer :: ntab
    integer dimension(10000) :: tindex
    integer :: naliases
    real dimension(10000) :: tfreq
    real dimension(10000) :: tflux
    real dimension(10000) :: trms
    character dimension(10000,40) :: tsource
    character dimension(10000,40) :: root
    character dimension(10000,40) :: alias
    common /tcomd/ tdate
    common /tcomi/ ntab,tindex,naliases
    common /tcomr/ tfreq,tflux,trms
    common /tcoms/ tsource,root,alias
end subroutine addalias
subroutine namparse(string_bn,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tabflux.f
    character*(*) :: string_bn
    integer :: length
end subroutine namparse
subroutine mkeyt(key,value,nmax,n,fmt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tangle.f
    character*(*) :: key
    double precision dimension(nmax) :: value
    integer optional,check(len(value)>=nmax),depend(value) :: nmax=len(value)
    integer :: n
    character*(*) :: fmt
end subroutine mkeyt
subroutine keyt(key,value,fmt,def) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tangle.f
    character*(*) :: key
    double precision :: value
    character*(*) :: fmt
    double precision :: def
end subroutine keyt
subroutine dectime(string_bn,value,fmt,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tangle.f
    character*(*) :: string_bn
    double precision :: value
    character*(*) :: fmt
    logical :: ok
end subroutine dectime
subroutine decangle(angle,val,fmt,ok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tangle.f
    character*(*) :: angle
    double precision :: val
    character*(*) :: fmt
    logical :: ok
end subroutine decangle
subroutine tinopen(name,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*(*) :: name
    character*(*) :: flags
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end subroutine tinopen
subroutine tinclose ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end subroutine tinclose
subroutine tinline(line1,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*(*) :: line1
    integer :: length
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end subroutine tinline
function tinnext() ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    integer :: tinnext
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end function tinnext
function tinlen() ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    integer :: tinlen
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end function tinlen
subroutine tingetr(value,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    real :: value
    real :: default_bn
end subroutine tingetr
subroutine tingetd(value,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    double precision :: value
    double precision :: default_bn
end subroutine tingetd
subroutine tingeti(value,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    integer :: value
    integer :: default_bn
end subroutine tingeti
subroutine tinskip(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    integer :: n
end subroutine tinskip
subroutine tingeta(value,default_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*(*) :: value
    character*(*) :: default_bn
end subroutine tingeta
subroutine tingett(value,default_bn,fmt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    double precision :: value
    double precision :: default_bn
    character*(*) :: fmt
end subroutine tingett
subroutine tinget(string_bn,length) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*(*) :: string_bn
    integer :: length
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end subroutine tinget
subroutine tinbug(sev,string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tin.f
    character*(*) :: sev
    character*(*) :: string_bn
    character*256 :: line
    character*64 :: fname
    integer :: lin
    integer :: k1
    integer :: k2
    integer :: recno
    logical :: stream
    logical :: nodef
    common /tincomc/ line,fname
    common /tincom/ lin,k1,k2,recno,stream,nodef
end subroutine tinbug
subroutine title(lin,naxis,blc,trc,cbof) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/title.f
    integer :: lin
    integer optional,check(len(blc)>=naxis),depend(blc) :: naxis=len(blc)
    integer dimension(naxis) :: blc
    integer dimension(naxis),depend(naxis) :: trc
    real :: cbof
end subroutine title
subroutine transd(a,m,n,move,iwrk,iok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trans.f
    double precision dimension(m*n),depend(m,n) :: a
    integer :: m
    integer :: n
    integer dimension(iwrk) :: move
    integer optional,check(len(move)>=iwrk),depend(move) :: iwrk=len(move)
    integer :: iok
end subroutine transd
subroutine transr(a,m,n,move,iwrk,iok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trans.f
    real dimension(m*n),depend(m,n) :: a
    integer :: m
    integer :: n
    integer dimension(iwrk) :: move
    integer optional,check(len(move)>=iwrk),depend(move) :: iwrk=len(move)
    integer :: iok
end subroutine transr
subroutine transi(a,m,n,move,iwrk,iok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trans.f
    integer dimension(m*n),depend(m,n) :: a
    integer :: m
    integer :: n
    integer dimension(iwrk) :: move
    integer optional,check(len(move)>=iwrk),depend(move) :: iwrk=len(move)
    integer :: iok
end subroutine transi
subroutine transl(a,m,n,move,iwrk,iok) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trans.f
    logical dimension(m*n),depend(m,n) :: a
    integer :: m
    integer :: n
    integer dimension(iwrk) :: move
    integer optional,check(len(move)>=iwrk),depend(move) :: iwrk=len(move)
    integer :: iok
end subroutine transl
subroutine trnini(lu,naxis,nsize,reorder) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: lu
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    character*(*) :: reorder
    integer dimension(6) :: lscr
    real :: size
    integer dimension(6) :: ndim
    integer dimension(6) :: memsize
    integer dimension(6) :: blk
    integer dimension(6) :: p
    integer dimension(6) :: buf
    logical dimension(6) :: inuse
    logical dimension(6) :: inmem
    logical dimension(6) :: pre
    logical dimension(6) :: major
    logical dimension(6) :: post
    logical dimension(7,6) :: flip
    real dimension(4194304) :: ref
    common /trancom/ lscr,size,ndim,memsize,blk,p,buf,inuse,inmem,pre,major,post,flip
    common ref
end subroutine trnini
subroutine trnwrite(lu,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: lu
    real dimension(*) :: data
    integer dimension(6) :: lscr
    real :: size
    integer dimension(6) :: ndim
    integer dimension(6) :: memsize
    integer dimension(6) :: blk
    integer dimension(6) :: p
    integer dimension(6) :: buf
    logical dimension(6) :: inuse
    logical dimension(6) :: inmem
    logical dimension(6) :: pre
    logical dimension(6) :: major
    logical dimension(6) :: post
    logical dimension(7,6) :: flip
    real dimension(4194304) :: ref
    common /trancom/ lscr,size,ndim,memsize,blk,p,buf,inuse,inmem,pre,major,post,flip
    common ref
end subroutine trnwrite
subroutine trnread(lu,data) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: lu
    real dimension(*) :: data
    integer dimension(6) :: lscr
    real :: size
    integer dimension(6) :: ndim
    integer dimension(6) :: memsize
    integer dimension(6) :: blk
    integer dimension(6) :: p
    integer dimension(6) :: buf
    logical dimension(6) :: inuse
    logical dimension(6) :: inmem
    logical dimension(6) :: pre
    logical dimension(6) :: major
    logical dimension(6) :: post
    logical dimension(7,6) :: flip
    real dimension(4194304) :: ref
    common /trancom/ lscr,size,ndim,memsize,blk,p,buf,inuse,inmem,pre,major,post,flip
    common ref
end subroutine trnread
subroutine trnfin(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: lu
    integer dimension(6) :: lscr
    real :: size
    integer dimension(6) :: ndim
    integer dimension(6) :: memsize
    integer dimension(6) :: blk
    integer dimension(6) :: p
    integer dimension(6) :: buf
    logical dimension(6) :: inuse
    logical dimension(6) :: inmem
    logical dimension(6) :: pre
    logical dimension(6) :: major
    logical dimension(6) :: post
    logical dimension(7,6) :: flip
    real dimension(4194304) :: ref
    common /trancom/ lscr,size,ndim,memsize,blk,p,buf,inuse,inmem,pre,major,post,flip
    common ref
end subroutine trnfin
subroutine trnflpx(data,n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    real dimension(n1,n2) :: data
    integer optional,check(shape(data,0)==n1),depend(data) :: n1=shape(data,0)
    integer optional,check(shape(data,1)==n2),depend(data) :: n2=shape(data,1)
end subroutine trnflpx
subroutine trnflpy(data,n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    real dimension(n1,n2) :: data
    integer optional,check(shape(data,0)==n1),depend(data) :: n1=shape(data,0)
    integer optional,check(shape(data,1)==n2),depend(data) :: n2=shape(data,1)
end subroutine trnflpy
subroutine trnswap(n1,n2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: n1
    integer :: n2
end subroutine trnswap
subroutine trnop(lu,naxis,nsize,reorder) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/trnio.f
    integer :: lu
    integer optional,check(len(nsize)>=naxis),depend(nsize) :: naxis=len(nsize)
    integer dimension(naxis) :: nsize
    character*(*) :: reorder
    integer dimension(6) :: lscr
    real :: size
    integer dimension(6) :: ndim
    integer dimension(6) :: memsize
    integer dimension(6) :: blk
    integer dimension(6) :: p
    integer dimension(6) :: buf
    logical dimension(6) :: inuse
    logical dimension(6) :: inmem
    logical dimension(6) :: pre
    logical dimension(6) :: major
    logical dimension(6) :: post
    logical dimension(7,6) :: flip
    real dimension(4194304) :: ref
    common /trancom/ lscr,size,ndim,memsize,blk,p,buf,inuse,inmem,pre,major,post,flip
    common ref
end subroutine trnop
subroutine tvopen(device) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    character*(*) :: device
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvopen
subroutine tvlocal ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvlocal
subroutine tvlut(table) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    character*(*) :: table
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvlut
subroutine tvwrtofm(n,table) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: n
    integer dimension(256) :: table
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvwrtofm
subroutine tvflush ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvflush
subroutine tvchar(xmax,ymax,channels,levels) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: xmax
    integer :: ymax
    integer :: channels
    integer :: levels
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvchar
subroutine tvclose ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvclose
subroutine tvchan(channel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: channel
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvchan
subroutine tvrzscr(chan,mag,xscr,yscr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: chan
    integer :: mag
    integer :: xscr
    integer :: yscr
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvrzscr
subroutine tvcursor(x,y,button) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: x
    integer :: y
    integer :: button
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvcursor
subroutine tvview(xmin,ymin,xmax,ymax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: xmin
    integer :: ymin
    integer :: xmax
    integer :: ymax
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvview
subroutine tvzoom(zoom,xc,yc) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: zoom
    integer :: xc
    integer :: yc
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvzoom
subroutine tvscrl(scrolx,scroly) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: scrolx
    integer :: scroly
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvscrl
subroutine tvtopx(xtv,ytv,pixx,pixy) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: xtv
    integer :: ytv
    integer :: pixx
    integer :: pixy
end subroutine tvtopx
subroutine pxtotv(pixx,pixy,xtv,ytv) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: pixx
    integer :: pixy
    integer :: xtv
    integer :: ytv
end subroutine pxtotv
subroutine tveras(channel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: channel
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tveras
subroutine tvreset ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvreset
subroutine tvselect(yesno) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: yesno
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvselect
subroutine tvselpt(channel,type_bn,x1,y1,x2,y2,ch) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: channel
    integer :: type_bn
    integer :: x1
    integer :: y1
    integer :: x2
    integer :: y2
    integer :: ch
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvselpt
subroutine tvwind(x1,y1,x2,y2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: x1
    integer :: y1
    integer :: x2
    integer :: y2
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvwind
subroutine tvline(x,y,channel,array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: x
    integer :: y
    integer :: channel
    integer dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvline
subroutine tvgraph(chan,onoff) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: chan
    integer :: onoff
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvgraph
subroutine tvvect(chan,onoff,x1,y1,x2,y2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: chan
    integer :: onoff
    integer :: x1
    integer :: y1
    integer :: x2
    integer :: y2
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvvect
subroutine tvtext(x,y,channel,string_bn,n,color,dir) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: x
    integer :: y
    integer :: channel
    character*(*) :: string_bn
    integer :: n
    integer :: color
    integer :: dir
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvtext
subroutine tvscale(bzero,bscale) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    real :: bzero
    real :: bscale
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvscale
subroutine tvpack(array,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer dimension(n) :: array
    integer optional,check(len(array)>=n),depend(array) :: n=len(array)
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvpack
subroutine tvcpack(string_bn,n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    character*(*) :: string_bn
    integer :: n
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvcpack
subroutine tvconn(handle,port,name) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: handle
    integer :: port
    character*(*) :: name
end subroutine tvconn
subroutine tvread(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: n
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvread
subroutine tvcheck(n) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tv.f
    integer :: n
    integer :: handle
    integer :: buflen
    integer :: protocol
    integer :: nack
    integer dimension(1024) :: buffer
    integer :: mxzoom
    integer :: tvscrx
    integer :: tvscry
    integer :: lastmag
    integer :: lastx
    integer :: lasty
    common /tvcomm/ handle,buflen,protocol,nack,buffer
    common /tvzscr/ mxzoom,tvscrx,tvscry,lastmag,lastx,lasty
end subroutine tvcheck
subroutine imscale(map,mx,nx,ny,pmin,pmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tvsubs.f
    real dimension(mx,ny) :: map
    integer optional,check(shape(map,0)==mx),depend(map) :: mx=shape(map,0)
    integer :: nx
    integer optional,check(shape(map,1)==ny),depend(map) :: ny=shape(map,1)
    real :: pmin
    real :: pmax
end subroutine imscale
subroutine display(map,mx,nx,ny,chan,x0,y0,pmin,pmax) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tvsubs.f
    real dimension(mx,ny) :: map
    integer optional,check(shape(map,0)==mx),depend(map) :: mx=shape(map,0)
    integer :: nx
    integer optional,check(shape(map,1)==ny),depend(map) :: ny=shape(map,1)
    integer :: chan
    integer :: x0
    integer :: y0
    real :: pmin
    real :: pmax
end subroutine display
subroutine wedge(map,nxy,dir,chan,x0,y0,pmin,pmax,width) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/tvsubs.f
    real dimension(nxy) :: map
    integer optional,check(len(map)>=nxy),depend(map) :: nxy=len(map)
    integer :: dir
    integer :: chan
    integer :: x0
    integer :: y0
    real :: pmin
    real :: pmax
    integer :: width
end subroutine wedge
subroutine prompt(string_bn,length,prmpt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/txtio.f
    character*(*) :: string_bn
    integer :: length
    character*(*) :: prmpt
end subroutine prompt
subroutine txtopen(lu,name,status,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/txtio.f
    integer :: lu
    character*(*) :: name
    character*(*) :: status
    integer :: iostat
end subroutine txtopen
subroutine txtclose(lu) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/txtio.f
    integer :: lu
end subroutine txtclose
subroutine txtread(lu,string_bn,length,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/txtio.f
    integer :: lu
    character*(*) :: string_bn
    integer :: length
    integer :: iostat
end subroutine txtread
subroutine txtwrite(lu,string_bn,length,iostat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/txtio.f
    integer :: lu
    character*(*) :: string_bn
    integer :: length
    integer :: iostat
end subroutine txtwrite
function nelc(string_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    character*(*) :: string_bn
    integer :: nelc
end function nelc
function neli(i,ni) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    integer dimension(ni) :: i
    integer optional,check(len(i)>=ni),depend(i) :: ni=len(i)
    integer :: neli
end function neli
function nelr(r,nr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real dimension(nr) :: r
    integer optional,check(len(r)>=nr),depend(r) :: nr=len(r)
    integer :: nelr
end function nelr
function neld(d,nd) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    double precision dimension(nd) :: d
    integer optional,check(len(d)>=nd),depend(d) :: nd=len(d)
    integer :: neld
end function neld
function nfigi(ivalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    integer :: ivalue
    integer :: nfigi
end function nfigi
function nfigr(rvalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: rvalue
    integer :: nfigr
end function nfigr
function nfigd(dvalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    double precision :: dvalue
    integer :: nfigd
end function nfigd
function tekeni(i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    integer :: i
    integer :: tekeni
end function tekeni
function tekenr(r) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: r
    real :: tekenr
end function tekenr
function tekend(d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    double precision :: d
    double precision :: tekend
end function tekend
function entier(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: x
    integer :: entier
end function entier
function delimi(ivalue,iminvalue,imaxvalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    integer :: ivalue
    integer :: iminvalue
    integer :: imaxvalue
    integer :: delimi
end function delimi
function delimr(rvalue,rminvalue,rmaxvalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: rvalue
    real :: rminvalue
    real :: rmaxvalue
    real :: delimr
end function delimr
function delimd(dvalue,dminvalue,dmaxvalue) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    double precision :: dvalue
    double precision :: dminvalue
    double precision :: dmaxvalue
    double precision :: delimd
end function delimd
function boxnri(i,iedges,nedges) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    integer :: i
    integer dimension(nedges) :: iedges
    integer optional,check(len(iedges)>=nedges),depend(iedges) :: nedges=len(iedges)
    integer :: boxnri
end function boxnri
function boxnrr(r,redges,nedges) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: r
    real dimension(nedges) :: redges
    integer optional,check(len(redges)>=nedges),depend(redges) :: nedges=len(redges)
    real :: boxnrr
end function boxnrr
function boxnrd(d,dedges,nedges) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    double precision :: d
    double precision dimension(nedges) :: dedges
    integer optional,check(len(dedges)>=nedges),depend(dedges) :: nedges=len(dedges)
    double precision :: boxnrd
end function boxnrd
function arctan(y,x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/utilities.f
    real :: y
    real :: x
    real :: arctan
end function arctan
subroutine uvpolinp(maxpol,npol,pols) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    integer optional,check(len(pols)>=maxpol),depend(pols) :: maxpol=len(pols)
    integer :: npol
    integer dimension(maxpol) :: pols
end subroutine uvpolinp
subroutine uvdatrew ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvdatrew

subroutine uvpolget(preamble,data,flags,n,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    double precision dimension(*) :: preamble
    complex dimension(n) :: data
    logical dimension(n),depend(n) :: flags
    integer optional,check(len(data)>=n),depend(data) :: n=len(data)
    integer :: nread
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvpolget
function uvpolini() ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    logical :: uvpolini
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end function uvpolini
subroutine uvpolchi(nochi,cos2chi,sin2chi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    logical :: nochi
    real :: cos2chi
    real :: sin2chi
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvpolchi
subroutine uvdatwrd(data,flags,n,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    complex dimension(n) :: data
    logical dimension(n),depend(n) :: flags
    integer optional,check(len(data)>=n),depend(data) :: n=len(data)
    integer :: nread
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvdatwrd
subroutine uvdatset(object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    character*(*) :: object
    integer :: value
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvdatset
function uvdatprb(object,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    character*(*) :: object
    double precision :: value
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    logical :: uvdatprb
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end function uvdatprb
subroutine uvlkini ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    character*32 :: line
    character*32 :: ref
    character*maxnam :: inbuf
    double precision dimension(8) :: spreambl
    complex dimension(2,64) :: leaks
    complex dimension(4,4) :: coeffs
    real dimension(4) :: sumwts
    real :: gwt
    logical :: willpol
    logical :: polcpy
    logical :: selpol
    logical :: selpol1
    integer :: npol
    integer :: npolf
    integer dimension(4) :: pols
    integer :: ipol
    integer :: snread
    complex dimension(4096,4) :: sdata
    integer dimension(4) :: ncoeff
    logical dimension(4) :: doaver
    logical dimension(4096,4) :: sflags
    integer dimension(4,4) :: indices
    integer :: nleaks
    real dimension(1024) :: sels
    real :: lstart
    real :: lwidth
    real :: lstep
    real :: lflag
    real :: rstart
    real :: rwidth
    real :: rstep
    real :: plmaj
    real :: plmin
    real :: plangle
    logical :: doplanet
    logical :: dowave
    logical :: doref
    logical :: dodata
    logical :: dosels
    logical :: dow
    logical :: dogsv
    logical :: plinit
    integer dimension(400) :: k1
    integer dimension(400) :: k2
    integer :: nchan
    integer :: nin
    integer :: pnt
    integer :: tno
    integer :: npream
    integer :: idxt
    integer :: idxbl
    real :: auto
    logical :: cross
    logical :: docal
    logical :: willcal
    logical :: doleak
    logical :: willleak
    logical :: dopass
    logical dimension(400) :: calmsg
    common /uvdatcob/ line,ref,inbuf
    common /uvdatcoc/ spreambl,leaks,coeffs,sumwts,gwt,willpol,polcpy,selpol,selpol1,npol,npolf,pols,ipol,snread,sdata,ncoeff,doaver,sflags,indices,nleaks
    common /uvdatcoa/ sels,lstart,lwidth,lstep,lflag,rstart,rwidth,rstep,plmaj,plmin,plangle,doplanet,dowave,doref,dodata,dosels,dow,dogsv,plinit,k1,k2,nchan,nin,pnt,tno,npream,idxt,idxbl,auto,cross,docal,willcal,doleak,willleak,dopass,calmsg
end subroutine uvlkini
subroutine uvlkcorr(baseline,maxpol,ncoeff,type_bn,coeffs,leaks,nleaks) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvdat.f
    double precision :: baseline
    integer optional,check(len(type_bn)>=maxpol),depend(type_bn) :: maxpol=len(type_bn)
    integer :: ncoeff
    integer dimension(maxpol) :: type_bn
    complex dimension(maxpol),depend(maxpol) :: coeffs
    complex dimension(2,nleaks) :: leaks
    integer optional,check(shape(leaks,1)==nleaks),depend(leaks) :: nleaks=shape(leaks,1)
end subroutine uvlkcorr
subroutine uvfit1(tno,object,n,a,epsi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvfitsubs.f
    integer :: tno
    character*(*) :: object
    integer :: n
    double precision :: a
    double precision :: epsi
end subroutine uvfit1
subroutine uvfit2(tno,object,n,a,b,epsi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvfitsubs.f
    integer :: tno
    character*(*) :: object
    integer :: n
    double precision :: a
    double precision :: b
    double precision :: epsi
end subroutine uvfit2
subroutine uvgetbl(preambl,data,nread,bl) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgetbl.f
    double precision dimension(4) :: preambl
    complex dimension(nread) :: data
    integer optional,check(len(data)>=nread),depend(data) :: nread=len(data)
    integer :: bl
end subroutine uvgetbl
subroutine uvgnini(tno1,dogains1,dopass1) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: tno1
    logical :: dogains1
    logical :: dopass1
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
end subroutine uvgnini
subroutine uvgngnin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
end subroutine uvgngnin
subroutine uvgnpsin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
end subroutine uvgnpsin
subroutine uvgnfin ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
end subroutine uvgnfin
subroutine uvgnfac(time,baseline,pol,dowide,data,flags,nread,grms) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision :: time
    double precision :: baseline
    integer :: pol
    logical :: dowide
    complex dimension(nread) :: data
    logical dimension(nread),depend(nread) :: flags
    integer optional,check(len(data)>=nread),depend(data) :: nread=len(data)
    real :: grms
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
end subroutine uvgnfac
subroutine uvgncwap(dowide,ant1,ant2,data,flags,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    logical :: dowide
    integer :: ant1
    integer :: ant2
    complex dimension(nread) :: data
    logical dimension(nread),depend(nread) :: flags
    integer optional,check(len(data)>=nread),depend(data) :: nread=len(data)
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    complex dimension(2097152) :: cref
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
    common cref
end subroutine uvgncwap
subroutine uvgnbug(iostat,text) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: iostat
    character*(*) :: text
end subroutine uvgnbug
subroutine uvgnget(gitem,solno,gains,flags,nsols,ngains) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: gitem
    integer :: solno
    complex dimension(ngains) :: gains
    logical dimension(ngains),depend(ngains) :: flags
    integer :: nsols
    integer optional,check(len(gains)>=ngains),depend(gains) :: ngains=len(gains)
end subroutine uvgnget
subroutine uvgnpsap(dowide,ant1,ant2,p,tau,data,flags,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    logical :: dowide
    integer :: ant1
    integer :: ant2
    integer :: p
    complex :: tau
    complex dimension(nread) :: data
    logical dimension(nread),depend(nread) :: flags
    integer optional,check(len(data)>=nread),depend(data) :: nread=len(data)
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    complex dimension(2097152) :: cref
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
    common cref
end subroutine uvgnpsap
subroutine uvgnps1t(tno,vwide,vline) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: tno
    integer :: vwide
    integer :: vline
end subroutine uvgnps1t
subroutine uvgnpspb(ant1,ant2,p,nfeeds,nants,gains,gflags,data,flags,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: ant1
    integer :: ant2
    integer :: p
    integer :: nfeeds
    integer :: nants
    complex dimension(nread,nfeeds*nants),depend(nfeeds,nants) :: gains
    logical dimension(nread,nfeeds*nants),depend(nread,nfeeds,nants) :: gflags
    complex dimension(nread),depend(nread) :: data
    logical dimension(nread),depend(nread) :: flags
    integer optional,check(shape(gains,0)==nread),depend(gains) :: nread=shape(gains,0)
end subroutine uvgnpspb
subroutine uvgnpsdl(tau,data,freq,freq0,nread) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    complex :: tau
    complex dimension(nread) :: data
    double precision dimension(nread),depend(nread) :: freq
    double precision :: freq0
    integer optional,check(len(data)>=nread),depend(data) :: nread=len(data)
end subroutine uvgnpsdl
subroutine uvgnpsld(tno,maxspect,ngains,nchan,nspect,sfreq,sdf,nschan,pgains,size_bn) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: tno
    integer optional,check(len(sfreq)>=maxspect),depend(sfreq) :: maxspect=len(sfreq)
    integer :: ngains
    integer :: nchan
    integer :: nspect
    double precision dimension(maxspect) :: sfreq
    double precision dimension(maxspect),depend(maxspect) :: sdf
    integer dimension(maxspect),depend(maxspect) :: nschan
    integer :: pgains
    integer :: size_bn
    complex dimension(2097152) :: cref
    common cref
end subroutine uvgnpsld
subroutine uvgnpsrd(tno,dowide,nread,nchan,nfeeds,nants,aver,nspect,sfreq,sdf,nschan,ptab,pflags,pdat,ndat,pfreq,nfreq,dotau,dopass) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: tno
    logical :: dowide
    integer :: nread
    integer :: nchan
    integer :: nfeeds
    integer :: nants
    logical :: aver
    integer optional,check(len(sfreq)>=nspect),depend(sfreq) :: nspect=len(sfreq)
    double precision dimension(nspect) :: sfreq
    double precision dimension(nspect),depend(nspect) :: sdf
    integer dimension(nspect),depend(nspect) :: nschan
    integer :: ptab
    integer :: pflags
    integer :: pdat
    integer :: ndat
    integer :: pfreq
    integer :: nfreq
    logical :: dotau
    logical :: dopass
    complex dimension(2097152) :: cref
    common cref
end subroutine uvgnpsrd
subroutine uvgnpsfq(nchan,nspect,sfreq,sdf,nschan,freq) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer optional,check(len(freq)>=nchan),depend(freq) :: nchan=len(freq)
    integer optional,check(len(sfreq)>=nspect),depend(sfreq) :: nspect=len(sfreq)
    double precision dimension(nspect) :: sfreq
    double precision dimension(nspect),depend(nspect) :: sdf
    integer dimension(nspect),depend(nspect) :: nschan
    double precision dimension(nchan) :: freq
end subroutine uvgnpsfq
subroutine uvgnpsgt(tno,dowide,nread,mspect,doaver,nspect,sfreq,sdf,swidth,nschan) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer :: tno
    logical :: dowide
    integer :: nread
    integer optional,check(len(sfreq)>=mspect),depend(sfreq) :: mspect=len(sfreq)
    logical :: doaver
    integer :: nspect
    double precision dimension(mspect) :: sfreq
    double precision dimension(mspect),depend(mspect) :: sdf
    double precision dimension(mspect),depend(mspect) :: swidth
    integer dimension(mspect),depend(mspect) :: nschan
end subroutine uvgnpsgt
subroutine uvgnpsma(ngains,nchan,nspect,sfreq,sdf,nschan,tab,nread,nspect0,sfreq0,sdf0,swidth0,nschan0,dat,flags) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    integer optional,check(shape(tab,1)==ngains),depend(tab) :: ngains=shape(tab,1)
    integer optional,check(shape(tab,0)==nchan),depend(tab) :: nchan=shape(tab,0)
    integer optional,check(len(sfreq)>=nspect),depend(sfreq) :: nspect=len(sfreq)
    double precision dimension(nspect) :: sfreq
    double precision dimension(nspect),depend(nspect) :: sdf
    integer dimension(nspect),depend(nspect) :: nschan
    complex dimension(nchan,ngains) :: tab
    integer optional,check(shape(dat,0)==nread),depend(dat) :: nread=shape(dat,0)
    integer optional,check(len(sfreq0)>=nspect0),depend(sfreq0) :: nspect0=len(sfreq0)
    double precision dimension(nspect0) :: sfreq0
    double precision dimension(nspect0),depend(nspect0) :: sdf0
    double precision dimension(nspect0),depend(nspect0) :: swidth0
    integer dimension(nspect0),depend(nspect0) :: nschan0
    complex dimension(nread,ngains),depend(ngains) :: dat
    logical dimension(nread,ngains),depend(nread,ngains) :: flags
end subroutine uvgnpsma
subroutine uvgninic ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    complex dimension(2097152) :: cref
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
    common cref
end subroutine uvgninic
subroutine uvgniniw ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvgn.f
    double precision dimension(16) :: sfreq
    double precision dimension(16) :: sdf
    double precision :: freq0
    integer :: tno
    integer :: vwide
    integer :: vline
    integer :: nchan
    integer :: nspect
    integer dimension(16) :: nschan
    integer dimension(2) :: pflags
    integer dimension(2) :: pdat
    integer dimension(2) :: ndat
    integer :: ptab
    integer :: ntab
    integer dimension(2) :: pfreq
    integer dimension(2) :: nfreq
    logical :: dopass
    logical :: aver
    logical :: first
    integer :: ncgains
    integer :: nwgains
    integer :: ncbase
    integer :: nwbase
    integer :: pcgains
    integer :: pwgains
    logical :: docgains
    logical :: dowgains
    double precision dimension(2) :: timetab
    double precision :: dtime
    complex dimension(192,2) :: gains
    integer :: t1
    integer :: t2
    integer :: nsols
    integer :: nants
    integer :: nfeeds
    integer :: ngains
    integer :: ntau
    integer :: gitem
    integer dimension(2) :: solno
    logical dimension(192,2) :: gflag
    logical :: dogains
    logical :: dotau
    complex dimension(2097152) :: cref
    common /uvgnc/ sfreq,sdf,freq0,tno,vwide,vline,nchan,nspect,nschan,pflags,pdat,ndat,ptab,ntab,pfreq,nfreq,dopass,aver,first
    common /uvgnb/ ncgains,nwgains,ncbase,nwbase,pcgains,pwgains,docgains,dowgains
    common /uvgna/ timetab,dtime,gains,t1,t2,nsols,nants,nfeeds,ngains,ntau,gitem,solno,gflag,dogains,dotau
    common cref
end subroutine uvgniniw
subroutine width(nspect,sdf,nschan,wide) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    integer optional,check(len(sdf)>=nspect),depend(sdf) :: nspect=len(sdf)
    double precision dimension(nspect) :: sdf
    integer dimension(nspect),depend(nspect) :: nschan
    real :: wide
end subroutine width
function token(in,inext,iend,leng) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    character*(*) :: in
    integer :: inext
    integer :: iend
    integer :: leng
    character*(*) :: token
end function token
function bselect(base,ants) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    double precision :: base
    character*(*) :: ants
    logical :: bselect
end function bselect
function oneamp(vis,flag) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    complex :: vis
    character*(*) :: flag
    real :: oneamp
end function oneamp
function phase(vis) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    complex :: vis
    real :: phase
end function phase
function expi(x) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    real :: x
    complex :: expi
end function expi
function angles(angle) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/uvsubs.f
    double precision :: angle
    character*13 :: angles
end function angles
subroutine varwinit(tin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/var.f
    integer :: tin
    integer :: vhandc
    integer :: vhandu
    logical :: avall
    common /varcom/ vhandc,vhandu,avall
end subroutine varwinit
subroutine varwide(tvis,tout,lstart,lwidth,lstep,nchan,avall) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/var.f
    integer :: tvis
    integer :: tout
    integer :: lstart
    integer :: lwidth
    integer :: lstep
    integer :: nchan
    logical :: avall
end subroutine varwide
subroutine varchan(tvis,tout,lstart,lwidth,lstep,nchan,avall) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/var.f
    integer :: tvis
    integer :: tout
    integer :: lstart
    integer :: lwidth
    integer :: lstep
    integer :: nchan
    logical :: avall
end subroutine varchan
subroutine varvelo(tvis,tout,lstart,lstep,nchan,win,avall) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/var.f
    integer :: tvis
    integer :: tout
    real :: lstart
    real :: lstep
    integer :: nchan
    integer :: win
    logical :: avall
end subroutine varvelo
subroutine varavall(tvis,doav) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/var.f
    integer :: tvis
    logical :: doav
    integer :: vhandc
    integer :: vhandu
    logical :: avall
    common /varcom/ vhandc,vhandu,avall
end subroutine varavall
subroutine varmintd(tvis,var,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/varmint.f
    integer :: tvis
    character*(*) :: var
    double precision :: value
end subroutine varmintd
subroutine varmintr(tvis,var,value) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/varmint.f
    integer :: tvis
    character*(*) :: var
    real :: value
end subroutine varmintr
subroutine vearth(jday,pos,vel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/velocity.f
    double precision :: jday
    double precision dimension(3) :: pos
    double precision dimension(3) :: vel
end subroutine vearth
subroutine vsite(phi,st,vel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/velocity.f
    double precision :: phi
    double precision :: st
    double precision dimension(3) :: vel
end subroutine vsite
subroutine vsun(vel) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/velocity.f
    double precision dimension(3) :: vel
end subroutine vsun
subroutine winpick(xlo,xhi,ylo,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: xlo
    integer :: xhi
    integer :: ylo
    integer :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winpick
subroutine winpick1(x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: x
    integer :: y
end subroutine winpick1
subroutine winloc(xlo,xhi,ylo,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: xlo
    real :: xhi
    real :: ylo
    real :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winloc
subroutine winscale(xlo,xhi,ylo,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: xlo
    real :: xhi
    real :: ylo
    real :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winscale
subroutine winscaly(ylo,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: ylo
    real :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winscaly
subroutine winscalx(xlo,xhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: xlo
    real :: xhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winscalx
subroutine winerror(message) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    character*(*) :: message
end subroutine winerror
subroutine winsize(n,x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: n
    real dimension(*) :: x
    real dimension(*) :: y
end subroutine winsize
subroutine winnorm(margin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: margin
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winnorm
subroutine wincoord(x,y) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: x
    integer :: y
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine wincoord
subroutine wintoscr(x,y,px,py) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: x
    integer :: y
    real :: px
    real :: py
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine wintoscr
subroutine wintousr(x,y,px,py) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: x
    integer :: y
    real :: px
    real :: py
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine wintousr
subroutine wincurs(nx,ny,px,py,c) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: nx
    integer :: ny
    real :: px
    real :: py
    character*1 :: c
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine wincurs
subroutine winnear(nx,ny,xpos,ypos,count,x,y,idx,dist) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: nx
    integer :: ny
    real :: xpos
    real :: ypos
    integer :: count
    real dimension(*) :: x
    real dimension(*) :: y
    integer :: idx
    real :: dist
end subroutine winnear
subroutine pgerase ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
end subroutine pgerase
subroutine winpoint(n,x,y,ipt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: n
    real dimension(*) :: x
    real dimension(*) :: y
    integer dimension(*) :: ipt
end subroutine winpoint
function winsymb(i) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: i
    integer :: winsymb
end function winsymb
subroutine winnormy(margin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: margin
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winnormy
subroutine winset(xhi,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    integer :: xhi
    integer :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winset
subroutine winqscal(xlo,xhi,ylo,yhi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/win.f
    real :: xlo
    real :: xhi
    real :: ylo
    real :: yhi
    integer :: winnxlo
    integer :: winnxhi
    integer :: winnylo
    integer :: winnyhi
    real dimension(40,30,4) :: win0
    real dimension(40,30,4) :: win1
    integer :: winmaxx
    integer :: winmaxy
    common /win/ winnxlo,winnxhi,winnylo,winnyhi,win0,win1,winmaxx,winmaxy
end subroutine winqscal
subroutine wpfit(nd,np,x,y,w,a,rnorm,phi,phix,ierr) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/wpfit.f
    integer optional,check((len(a)-1)>=nd),depend(a) :: nd=(len(a)-1)
    integer optional,check(len(x)>=np),depend(x) :: np=len(x)
    real dimension(np) :: x
    real dimension(np),depend(np) :: y
    real dimension(np),depend(np) :: w
    real dimension(nd + 1) :: a
    real :: rnorm
    real dimension(2,nd + 1),depend(nd) :: phi
    real dimension(4,np),depend(np) :: phix
    integer :: ierr
end subroutine wpfit
subroutine zedscale(luni,freq,scale,noline) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    integer :: luni
    real :: freq
    real :: scale
    logical :: noline
end subroutine zedscale
subroutine zed(mode,ispect,vspect,m,n,a,b,siga,sigb,sigi,convrg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m,n) :: ispect
    real dimension(m,n),depend(m,n) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: b
    real :: siga
    real :: sigb
    real :: sigi
    logical :: convrg
end subroutine zed
subroutine zeddelsq(ispect,m,n,a,siga,sigi,delta,convrg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n) :: ispect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: siga
    real :: sigi
    integer :: delta
    logical :: convrg
end subroutine zeddelsq
subroutine zedeta(ispect,m,n,sigi,delta,eta2,etahat2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n) :: ispect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: sigi
    integer :: delta
    real :: eta2
    real :: etahat2
end subroutine zedeta
subroutine zedihat(mode,ispect,vspect,m,n,a,b,ihat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m,n) :: ispect
    real dimension(m,n),depend(m,n) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: b
    real dimension(m,n),depend(m,n) :: ihat
end subroutine zedihat
subroutine zedvhat(mode,ihat,m,n,a,b,vhat) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m,n) :: ihat
    integer optional,check(shape(ihat,0)==m),depend(ihat) :: m=shape(ihat,0)
    integer optional,check(shape(ihat,1)==n),depend(ihat) :: n=shape(ihat,1)
    real :: a
    real :: b
    real dimension(m,n),depend(m,n) :: vhat
end subroutine zedvhat
subroutine zedfunc(mode,ispect,vspect,m,n,a,b,sigi) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m,n) :: ispect
    real dimension(m,n),depend(m,n) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: b
    real :: sigi
end subroutine zedfunc
subroutine zedlsq(ispect,vspect,m,n,a,b,siga,sigb,sigi,leak,delta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n) :: ispect
    real dimension(m,n),depend(m,n) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: b
    real :: siga
    real :: sigb
    real :: sigi
    logical :: leak
    integer :: delta
end subroutine zedlsq
subroutine zedml(ispect,vspect,m,n,a,b,siga,sigb,sigi,leak,delta,convrg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n) :: ispect
    real dimension(m,n),depend(m,n) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    real :: a
    real :: b
    real :: siga
    real :: sigb
    real :: sigi
    logical :: leak
    integer :: delta
    logical :: convrg
end subroutine zedml
subroutine zed1(ispect,vspect,n,a,b,i0) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(n) :: ispect
    real dimension(n),depend(n) :: vspect
    integer optional,check(len(ispect)>=n),depend(ispect) :: n=len(ispect)
    real :: a
    real :: b
    real dimension(n),depend(n) :: i0
end subroutine zed1
subroutine zed2(ispect,vspect,n,a,b,i0) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(n) :: ispect
    real dimension(n),depend(n) :: vspect
    integer optional,check(len(ispect)>=n),depend(ispect) :: n=len(ispect)
    real :: a
    real :: b
    real dimension(n),depend(n) :: i0
end subroutine zed2
subroutine zedfudge(mode,ispect,vspect,m,n1,n2,a,b,fudge,rho,beam,nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m,n1*n2),depend(n1,n2) :: ispect
    real dimension(m,n1*n2),depend(m,n1,n2) :: vspect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer :: n1
    integer :: n2
    real :: a
    real :: b
    real :: fudge
    real :: rho
    real dimension(nx*ny),depend(nx,ny) :: beam
    integer :: nx
    integer :: ny
    real dimension(4194304) :: ref
    common ref
end subroutine zedfudge
subroutine zedwind(ispect,m,n1,n2,maxxy,off,n1d,n2d) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n1,n2) :: ispect
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(ispect,1)==n1),depend(ispect) :: n1=shape(ispect,1)
    integer optional,check(shape(ispect,2)==n2),depend(ispect) :: n2=shape(ispect,2)
    integer :: maxxy
    integer :: off
    integer :: n1d
    integer :: n2d
end subroutine zedwind
subroutine zeddi(ispect,vspect,a,b,di,m,md,n1,n2,n,delta) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(m,n,n2) :: ispect
    real dimension(m,n,n2),depend(m,n,n2) :: vspect
    real :: a
    real :: b
    real dimension(md,n1*n2),depend(n1,n2) :: di
    integer optional,check(shape(ispect,0)==m),depend(ispect) :: m=shape(ispect,0)
    integer optional,check(shape(di,0)==md),depend(di) :: md=shape(di,0)
    integer :: n1
    integer optional,check(shape(ispect,2)==n2),depend(ispect) :: n2=shape(ispect,2)
    integer optional,check(shape(ispect,1)==n),depend(ispect) :: n=shape(ispect,1)
    integer :: delta
end subroutine zeddi
subroutine zedxyapp(di,md,n,a) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(md,n) :: di
    integer optional,check(shape(di,0)==md),depend(di) :: md=shape(di,0)
    integer optional,check(shape(di,1)==n),depend(di) :: n=shape(di,1)
    real dimension(n*(n+1)/2),depend(n) :: a
end subroutine zedxyapp
subroutine zedfapp(di,md,n,gamma,rho) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(md,n) :: di
    integer optional,check(shape(di,0)==md),depend(di) :: md=shape(di,0)
    integer optional,check(shape(di,1)==n),depend(di) :: n=shape(di,1)
    real dimension(md),depend(md) :: gamma
    real :: rho
end subroutine zedfapp
subroutine zedfcov(gamma,md,rho) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(md) :: gamma
    integer optional,check(len(gamma)>=md),depend(gamma) :: md=len(gamma)
    real :: rho
end subroutine zedfcov
subroutine zedxycov(a,n1,n2,beam,nx,ny) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(n1*n2*(n1*n2+1)/2),depend(n1,n2) :: a
    integer :: n1
    integer :: n2
    real dimension(nx,ny) :: beam
    integer optional,check(shape(beam,0)==nx),depend(beam) :: nx=shape(beam,0)
    integer optional,check(shape(beam,1)==ny),depend(beam) :: ny=shape(beam,1)
end subroutine zedxycov
subroutine zedrho(mode,ispect,vspect,m,n,rho,a,b,siga,sigb,sigi,convrg) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    character*(*) :: mode
    real dimension(m) :: ispect
    real dimension(m),depend(m) :: vspect
    integer optional,check(len(ispect)>=m),depend(ispect) :: m=len(ispect)
    integer :: n
    real :: rho
    real :: a
    real :: b
    real :: siga
    real :: sigb
    real :: sigi
    logical :: convrg
    real dimension(4194304) :: ref
    common ref
end subroutine zedrho
subroutine zedrdr(x,n,rho) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(n) :: x
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real :: rho
end subroutine zedrdr
subroutine zedr(x,n,rho) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zed.f
    real dimension(n) :: x
    integer optional,check(len(x)>=n),depend(x) :: n=len(x)
    real :: rho
end subroutine zedr
subroutine binfid(iwin,aveop,size_bn,axis,bin,blc,trc,nbin) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zeebin.f
    integer :: iwin
    character*1 :: aveop
    integer :: size_bn
    integer :: axis
    integer :: bin
    integer :: blc
    integer :: trc
    integer :: nbin
end subroutine binfid
subroutine binrd2(h1,h2,bin,blc,trc,nbin,row,data1,data2) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zeebin.f
    integer :: h1
    integer :: h2
    integer dimension(3) :: bin
    integer dimension(3) :: blc
    integer dimension(3) :: trc
    integer dimension(3) :: nbin
    real dimension(*) :: row
    real dimension(*) :: data1
    real dimension(*) :: data2
end subroutine binrd2
subroutine binup(data,blc,trc,bin,norm,ipt,binned,wrt) ! in /l/pkwill/cvs/cosmic/miriad/BUILD/src/subs/zeebin.f
    real dimension(*) :: data
    integer :: blc
    integer :: trc
    integer :: bin
    real :: norm
    integer :: ipt
    real dimension(*) :: binned
    logical :: wrt
end subroutine binup

! This file was auto-generated with f2py (version:2_3844).
! See http://cens.ioc.ee/projects/f2py2e/
